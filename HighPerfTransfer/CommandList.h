#pragma once

#include <tchar.h>
#include <windows.h>
#include <atlbase.h>
#include <atlstr.h>

#include <vector>
using namespace std;

#include "..\PublicHeader\PublicSerializeFieldDefine.h"
#include "..\PublicHeader\PublicSimpleXml.h"
#include "..\PublicHeader\PublicFileDeviceInterface.h"
#include "..\PublicHeader\PublicParameterStreamDef.h"

#include "CommandModuleDef.h"

namespace {
	static LONG CMD_NUMBER_MODULE_HPT = 1;
}

//////////////////////////////////////////////////////////////////////////
CONST LONG CMD_RESULT_RSP = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(1, MODULE_HPT);
MethodStringDef(BODY_RESULT_RSP);
struct BODY_RESULT_RSP
{
	SERIALIZE_BEGIN_STRUCT(BODY_RESULT_RSP, BODY_RESULT_RSP);
	HRESULT m_ErrorCode;		SERIALIZE_BASIC(m_ErrorCode);
	LONG m_ResourceID;			SERIALIZE_BASIC(m_ResourceID);
	CString m_MessageText;		SERIALIZE_CSTRING(m_MessageText);
	vector<CString> m_Params;	SERIALIZE_VECTOR(m_Params);
	SERIALIZE_END_STRUCT(BODY_RESULT_RSP, BODY_RESULT_RSP);

	STRUCT_XML_SERIALIZER;
	STRUCT_SERIALIZER;

	//////////////////////////////////////////////////////////////////////////
	static CONST LPCTSTR RootName;// = MethodString(xxxx);

	//////////////////////////////////////////////////////////////////////////
	BODY_RESULT_RSP() :
		m_ErrorCode(0),
		m_ResourceID(-1)
	{
	}
};

CONST LONG CMD_END_SESSION_REQ = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(2, MODULE_HPT);

CONST LONG CMD_END_SESSION_RSP = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(3, MODULE_HPT);

CONST LONG CMD_END_APP_REQ = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(4, MODULE_HPT);

CONST LONG CMD_END_APP_RSP = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(5, MODULE_HPT);

//////////////////////////////////////////////////////////////////////////
CONST LONG CMD_CREAE_DOWNLOAD_SESSION_REQ = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(6, MODULE_HPT);
MethodStringDef(BODY_FILE_DESCRITION);
struct BODY_FILE_DESCRITION
{
	SERIALIZE_BEGIN_STRUCT(BODY_FILE_DESCRITION, BODY_FILE_DESCRITION);
	CString m_FileName;				SERIALIZE_CSTRING(m_FileName);
	LONG m_FileType;				SERIALIZE_BASIC(m_FileType);
	CString m_EncryptPassword;		SERIALIZE_CSTRING(m_EncryptPassword);
	LONG m_CompressionType;			SERIALIZE_BASIC(m_CompressionType);
	ULONG m_Flags;					SERIALIZE_BASIC(m_Flags);
	ULONG m_Enum;					SERIALIZE_BASIC(m_Enum);
	CString m_MoreContext;			SERIALIZE_CSTRING(m_MoreContext);
	SERIALIZE_END_STRUCT(BODY_FILE_DESCRITION, BODY_FILE_DESCRITION);

	STRUCT_XML_SERIALIZER;
	STRUCT_SERIALIZER;

	//////////////////////////////////////////////////////////////////////////
	static CONST LPCTSTR RootName;// = MethodString(xxxx);

	//////////////////////////////////////////////////////////////////////////
	BODY_FILE_DESCRITION() :
		m_FileType(0),
		m_CompressionType(0),
		m_Flags(0),
		m_Enum(0)
	{
	}
};

MethodStringDef(BODY_CREATE_DOWNLOAD_SESSION_REQ);
struct  BODY_CREATE_DOWNLOAD_SESSION_REQ
{
	SERIALIZE_BEGIN_STRUCT(BODY_CREATE_DOWNLOAD_SESSION_REQ, BODY_CREATE_DOWNLOAD_SESSION_REQ);
	vector<BODY_FILE_DESCRITION> m_CilentFiles;		SERIALIZE_COMPLEX_VECTOR(m_CilentFiles);
	vector<BODY_FILE_DESCRITION> m_ServerFiles;		SERIALIZE_COMPLEX_VECTOR(m_ServerFiles);
	SERIALIZE_END_STRUCT(BODY_CREATE_DOWNLOAD_SESSION_REQ, BODY_CREATE_DOWNLOAD_SESSION_REQ);

	STRUCT_XML_SERIALIZER;
	STRUCT_SERIALIZER;

	//////////////////////////////////////////////////////////////////////////
	static CONST LPCTSTR RootName;// = MethodString(xxxx);

};
typedef BODY_CREATE_DOWNLOAD_SESSION_REQ BODY_CREATE_UPLOAD_SESSION_REQ;

CONST LONG CMD_CREATE_DOWNLOAD_SESSION_RSP = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(7, MODULE_HPT);

CONST LONG CMD_BEGIN_TRANSFER_REQ = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(8, MODULE_HPT);
MethodStringDef(BODY_BEGIN_TRANSFER_REQ);
typedef BODY_CREATE_DOWNLOAD_SESSION_REQ BODY_BEGIN_TRANSFER_REQ;

CONST LONG CMD_BEGIN_FILE_RSP = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(9, MODULE_HPT);
MethodStringDef(BODY_BEGIN_FILE_RSP);
//typedef BODY_FILE_DESCRITION BODY_BEGIN_FILE_RSP;
struct BODY_BEGIN_FILE_RSP
{
	SERIALIZE_BEGIN_STRUCT(BODY_BEGIN_FILE_RSP, BODY_BEGIN_FILE_RSP);
	BODY_FILE_DESCRITION m_CilentFile;	SERIALIZE_COMPLEX(m_CilentFile);
	BODY_FILE_DESCRITION m_ServerFile;	SERIALIZE_COMPLEX(m_ServerFile);
	SERIALIZE_END_STRUCT(BODY_BEGIN_FILE_RSP, BODY_BEGIN_FILE_RSP);

	STRUCT_XML_SERIALIZER;
	STRUCT_SERIALIZER;

	//////////////////////////////////////////////////////////////////////////
	static CONST LPCTSTR RootName;// = MethodString(xxxx);

};

CONST LONG CMD_FILE_DATA_RSP = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(10, MODULE_HPT);

CONST LONG CMD_END_FILE_RSP = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(11, MODULE_HPT);
MethodStringDef(BODY_END_FILE_RSP);
typedef BODY_BEGIN_FILE_RSP BODY_END_FILE_RSP;

CONST LONG CMD_END_TRANSFER_RSP = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(12, MODULE_HPT);


//////////////////////////////////////////////////////////////////////////
CONST LONG CMD_CREATE_UPLOAD_SESSION_REQ = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(13, MODULE_HPT);
MethodStringDef(BODY_CREATE_UPLOAD_SESSION_REQ);
typedef BODY_CREATE_DOWNLOAD_SESSION_REQ BODY_CREATE_UPLOAD_SESSION_REQ;

CONST LONG CMD_CREATE_UPLOAD_SESSION_RSP = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(14, MODULE_HPT);

CONST LONG CMD_BEGIN_FILE_REQ = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(15, MODULE_HPT);
MethodStringDef(BODY_BEGIN_FILE_REQ);
typedef BODY_BEGIN_FILE_RSP BODY_BEGIN_FILE_REQ;

CONST LONG CMD_FILE_DATA_REQ = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(16, MODULE_HPT);

CONST LONG CMD_END_FILE_REQ = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(17, MODULE_HPT);
MethodStringDef(BODY_END_FILE_REQ);
typedef BODY_BEGIN_FILE_RSP BODY_END_FILE_REQ;

//////////////////////////////////////////////////////////////////////////
CONST LONG CMD_CREATE_ENUM_FILE_SESSION_REQ = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(18, MODULE_HPT);

CONST LONG CMD_CREATE_ENUM_FILE_SESSION_RSP = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(19, MODULE_HPT);

CONST LONG CMD_BEGIN_ENUM_FILE_REQ = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(20, MODULE_HPT);
MethodStringDef(BODY_BEGIN_ENUM_FILE_REQ);
struct BODY_BEGIN_ENUM_FILE_REQ
{
	SERIALIZE_BEGIN_STRUCT(BODY_BEGIN_ENUM_FILE_REQ, BODY_BEGIN_ENUM_FILE_REQ);
	CString m_Directory;			SERIALIZE_CSTRING(m_Directory);
	CString m_FilePattern;			SERIALIZE_CSTRING(m_FilePattern);
	CString m_NotFilePattern;		SERIALIZE_CSTRING(m_NotFilePattern);
	BOOL m_bRecursively;			SERIALIZE_BASIC(m_bRecursively);
	ULONG m_Flags;					SERIALIZE_BASIC(m_Flags);
	ULONG m_Enum;					SERIALIZE_BASIC(m_Enum);
	CString m_MoreContext;			SERIALIZE_CSTRING(m_MoreContext);
	SERIALIZE_END_STRUCT(BODY_BEGIN_ENUM_FILE_REQ, BODY_BEGIN_ENUM_FILE_REQ);

	STRUCT_XML_SERIALIZER;
	STRUCT_SERIALIZER;

	//////////////////////////////////////////////////////////////////////////
	static CONST LPCTSTR RootName;// = MethodString(xxxx);


	//////////////////////////////////////////////////////////////////////////
	BODY_BEGIN_ENUM_FILE_REQ() :
		m_bRecursively(TRUE),
		m_Flags(0),
		m_Enum(0)
	{
	}
};

CONST LONG CMD_ENUM_FILE_DATA_RSP = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(21, MODULE_HPT);
MethodStringDef(BODY_ENUM_FILE_DATA_RSP);
struct BODY_ENUM_FILE_DATA_RSP
{
	SERIALIZE_BEGIN_STRUCT(BODY_ENUM_FILE_DATA_RSP, BODY_ENUM_FILE_DATA_RSP);
	vector<BODY_FILE_DESCRITION> m_Files;		SERIALIZE_COMPLEX_VECTOR(m_Files);
	SERIALIZE_END_STRUCT(BODY_ENUM_FILE_DATA_RSP, BODY_ENUM_FILE_DATA_RSP);

	STRUCT_XML_SERIALIZER;
	STRUCT_SERIALIZER;

	//////////////////////////////////////////////////////////////////////////
	static CONST LPCTSTR RootName;// = MethodString(xxxx);

};

CONST LONG CMD_END_ENUM_FILE_RSP = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(22, MODULE_HPT);

CONST LONG CMD_END_UPLOAD_REQ = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(23, MODULE_HPT);
CONST LONG CMD_END_UPLOAD_RSP = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(24, MODULE_HPT);

//////////////////////////////////////////////////////////////////////////
MethodStringDef(BODY_HANDLER_STATUS_STATISTIC);
struct BODY_HANDLER_STATUS_STATISTIC
{
	SERIALIZE_BEGIN_STRUCT(BODY_HANDLER_STATUS_STATISTIC, BODY_HANDLER_STATUS_STATISTIC);
	HRESULT m_LastStatus;		SERIALIZE_BASIC(m_LastStatus);
	LONG m_Count;				SERIALIZE_BASIC(m_Count);
	ULONG m_Flags;				SERIALIZE_BASIC(m_Flags);
	ULONG m_Enum;				SERIALIZE_BASIC(m_Enum);
	CString m_LastStatusString;	SERIALIZE_CSTRING(m_LastStatusString);
	SERIALIZE_END_STRUCT(BODY_HANDLER_STATUS_STATISTIC, BODY_HANDLER_STATUS_STATISTIC);

	STRUCT_XML_SERIALIZER;
	STRUCT_SERIALIZER;

	//////////////////////////////////////////////////////////////////////////
	static CONST LPCTSTR RootName;// = MethodString(xxxx);


	BODY_HANDLER_STATUS_STATISTIC() :
		m_LastStatus(S_OK),
		m_Flags(0),
		m_Enum(0)
	{
	}

	VOID SetLastStatus(HRESULT LastStatus, LPCTSTR LastStatusString)
	{
		++ m_Count;
		m_LastStatus = LastStatus;
		m_LastStatusString = LastStatusString;
	}
};

MethodStringDef(BODY_HANDLER_STATUS_STATISTIC_TOTAL);
struct BODY_HANDLER_STATUS_STATISTIC_TOTAL
{
	SERIALIZE_BEGIN_STRUCT(BODY_HANDLER_STATUS_STATISTIC_TOTAL, BODY_HANDLER_STATUS_STATISTIC_TOTAL);
	BODY_HANDLER_STATUS_STATISTIC m_Error;		SERIALIZE_COMPLEX(m_Error);
	BODY_HANDLER_STATUS_STATISTIC m_Warning;	SERIALIZE_COMPLEX(m_Warning);
	BODY_HANDLER_STATUS_STATISTIC m_Info;		SERIALIZE_COMPLEX(m_Info);
	SERIALIZE_END_STRUCT(BODY_HANDLER_STATUS_STATISTIC_TOTAL, BODY_HANDLER_STATUS_STATISTIC_TOTAL);

	STRUCT_XML_SERIALIZER;
	STRUCT_SERIALIZER;

	//////////////////////////////////////////////////////////////////////////
	static CONST LPCTSTR RootName;// = MethodString(xxxx);

};
//////////////////////////////////////////////////////////////////////////


CONST LONG CMD_HANDLER_STATUS_STATISTIC_TOTAL_REQ = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(25, MODULE_HPT);

CONST LONG CMD_HANDLER_STATUS_STATISTIC_TOTAL_RSP = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(26, MODULE_HPT);
MethodStringDef(BODY_HANDLER_STATUS_STATISTIC_TOTAL_RSP);
typedef BODY_HANDLER_STATUS_STATISTIC_TOTAL BODY_HANDLER_STATUS_STATISTIC_TOTAL_RSP;

CONST LONG CMD_RUN_APP_REQ = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(27, MODULE_HPT);
MethodStringDef(BODY_RUN_APP_REQ);
struct BODY_RUN_APP_REQ
{
	SERIALIZE_BEGIN_STRUCT(BODY_RUN_APP_REQ, BODY_RUN_APP_REQ);
	CString m_Username;				SERIALIZE_CSTRING(m_Username);
	CString m_Domain;				SERIALIZE_CSTRING(m_Domain);
	CString m_Password;				SERIALIZE_CSTRING(m_Password);
	CString m_CommandLine;			SERIALIZE_CSTRING(m_CommandLine);
	CString m_CurDir;				SERIALIZE_CSTRING(m_CurDir);
	ULONG m_TimeOut;				SERIALIZE_BASIC(m_TimeOut);
	BOOL m_TerminateOnTimeOut;		SERIALIZE_BASIC(m_TerminateOnTimeOut);
	SERIALIZE_END_STRUCT(BODY_RUN_APP_REQ, BODY_RUN_APP_REQ);

	STRUCT_XML_SERIALIZER;
	STRUCT_SERIALIZER;

	//////////////////////////////////////////////////////////////////////////
	static CONST LPCTSTR RootName;// = MethodString(xxxx);


	BODY_RUN_APP_REQ() :
		m_TimeOut(0),
		m_TerminateOnTimeOut(FALSE)
	{
	}
};

CONST LONG CMD_RUN_APP_RSP = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(28, MODULE_HPT);
MethodStringDef(BODY_RUN_APP_RSP);
struct BODY_RUN_APP_RSP
{
	SERIALIZE_BEGIN_STRUCT(BODY_RUN_APP_RSP, BODY_RUN_APP_RSP);
	ULONG m_ExitCode;	SERIALIZE_BASIC(m_ExitCode);
	ULONG m_Flags;		SERIALIZE_BASIC(m_Flags);
	ULONG m_Enum;		SERIALIZE_BASIC(m_Enum);
	CString m_MoreData;	SERIALIZE_CSTRING(m_MoreData);
	SERIALIZE_END_STRUCT(BODY_RUN_APP_RSP, BODY_RUN_APP_RSP);

	STRUCT_XML_SERIALIZER;
	STRUCT_SERIALIZER;

	//////////////////////////////////////////////////////////////////////////
	static CONST LPCTSTR RootName;// = MethodString(xxxx);


	BODY_RUN_APP_RSP() :
		m_ExitCode(0),
		m_Flags(0),
		m_Enum(0)
	{
	}
};

CONST LONG CMD_CREAE_RUN_APP_SESSION_REQ = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(29, MODULE_HPT);
CONST LONG CMD_CREAE_RUN_APP_SESSION_RSP = MAKELONG(CMD_NUMBER_MODULE_HPT++, MODULE_HPT); //MAKELONG(30, MODULE_HPT);
//MAKELONG(31, MODULE_HPT);
//MAKELONG(32, MODULE_HPT);
//MAKELONG(33, MODULE_HPT);
//MAKELONG(34, MODULE_HPT);
//MAKELONG(35, MODULE_HPT);
//MAKELONG(36, MODULE_HPT);
//MAKELONG(37, MODULE_HPT);
//MAKELONG(38, MODULE_HPT);
//MAKELONG(39, MODULE_HPT);