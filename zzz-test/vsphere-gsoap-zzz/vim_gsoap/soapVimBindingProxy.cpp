/* soapVimBindingProxy.cpp
   Generated by gSOAP 2.8.22 from .gsoap_tmp.h

Copyright(C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapVimBindingProxy.h"

VimBindingProxy::VimBindingProxy()
{	VimBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

VimBindingProxy::VimBindingProxy(const struct soap &_soap) : soap(_soap)
{ }

VimBindingProxy::VimBindingProxy(const char *url)
{	VimBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

VimBindingProxy::VimBindingProxy(soap_mode iomode)
{	VimBindingProxy_init(iomode, iomode);
}

VimBindingProxy::VimBindingProxy(const char *url, soap_mode iomode)
{	VimBindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

VimBindingProxy::VimBindingProxy(soap_mode imode, soap_mode omode)
{	VimBindingProxy_init(imode, omode);
}

VimBindingProxy::~VimBindingProxy()
{ }

void VimBindingProxy::VimBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"gnvim2", "urn:vim25", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
}

void VimBindingProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void VimBindingProxy::reset()
{	destroy();
	soap_done(this);
	soap_initialize(this);
	VimBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void VimBindingProxy::soap_noheader()
{	this->header = NULL;
}

const SOAP_ENV__Header *VimBindingProxy::soap_header()
{	return this->header;
}

const SOAP_ENV__Fault *VimBindingProxy::soap_fault()
{	return this->fault;
}

const char *VimBindingProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *VimBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int VimBindingProxy::soap_close_socket()
{	return soap_closesock(this);
}

int VimBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void VimBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void VimBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *VimBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int VimBindingProxy::DestroyPropertyFilter(const char *endpoint, const char *soap_action, gnvim2__DestroyPropertyFilterRequestType *gnvim2__DestroyPropertyFilter, _gnvim2__DestroyPropertyFilterResponse &gnvim2__DestroyPropertyFilterResponse)
{	struct soap *soap = this;
	struct __gnvim2__DestroyPropertyFilter soap_tmp___gnvim2__DestroyPropertyFilter;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DestroyPropertyFilter.gnvim2__DestroyPropertyFilter = gnvim2__DestroyPropertyFilter;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DestroyPropertyFilter(soap, &soap_tmp___gnvim2__DestroyPropertyFilter);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DestroyPropertyFilter(soap, &soap_tmp___gnvim2__DestroyPropertyFilter, "-gnvim2:DestroyPropertyFilter", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DestroyPropertyFilter(soap, &soap_tmp___gnvim2__DestroyPropertyFilter, "-gnvim2:DestroyPropertyFilter", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DestroyPropertyFilterResponse)
		return soap_closesock(soap);
	gnvim2__DestroyPropertyFilterResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DestroyPropertyFilterResponse.soap_get(soap, "gnvim2:DestroyPropertyFilterResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateFilter(const char *endpoint, const char *soap_action, gnvim2__CreateFilterRequestType *gnvim2__CreateFilter, _gnvim2__CreateFilterResponse &gnvim2__CreateFilterResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateFilter soap_tmp___gnvim2__CreateFilter;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateFilter.gnvim2__CreateFilter = gnvim2__CreateFilter;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateFilter(soap, &soap_tmp___gnvim2__CreateFilter);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateFilter(soap, &soap_tmp___gnvim2__CreateFilter, "-gnvim2:CreateFilter", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateFilter(soap, &soap_tmp___gnvim2__CreateFilter, "-gnvim2:CreateFilter", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateFilterResponse)
		return soap_closesock(soap);
	gnvim2__CreateFilterResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateFilterResponse.soap_get(soap, "gnvim2:CreateFilterResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveProperties(const char *endpoint, const char *soap_action, gnvim2__RetrievePropertiesRequestType *gnvim2__RetrieveProperties, _gnvim2__RetrievePropertiesResponse &gnvim2__RetrievePropertiesResponse)
{	struct soap *soap = this;
	struct __gnvim2__RetrieveProperties soap_tmp___gnvim2__RetrieveProperties;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RetrieveProperties.gnvim2__RetrieveProperties = gnvim2__RetrieveProperties;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RetrieveProperties(soap, &soap_tmp___gnvim2__RetrieveProperties);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RetrieveProperties(soap, &soap_tmp___gnvim2__RetrieveProperties, "-gnvim2:RetrieveProperties", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RetrieveProperties(soap, &soap_tmp___gnvim2__RetrieveProperties, "-gnvim2:RetrieveProperties", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RetrievePropertiesResponse)
		return soap_closesock(soap);
	gnvim2__RetrievePropertiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RetrievePropertiesResponse.soap_get(soap, "gnvim2:RetrievePropertiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CheckForUpdates(const char *endpoint, const char *soap_action, gnvim2__CheckForUpdatesRequestType *gnvim2__CheckForUpdates, _gnvim2__CheckForUpdatesResponse &gnvim2__CheckForUpdatesResponse)
{	struct soap *soap = this;
	struct __gnvim2__CheckForUpdates soap_tmp___gnvim2__CheckForUpdates;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CheckForUpdates.gnvim2__CheckForUpdates = gnvim2__CheckForUpdates;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CheckForUpdates(soap, &soap_tmp___gnvim2__CheckForUpdates);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CheckForUpdates(soap, &soap_tmp___gnvim2__CheckForUpdates, "-gnvim2:CheckForUpdates", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CheckForUpdates(soap, &soap_tmp___gnvim2__CheckForUpdates, "-gnvim2:CheckForUpdates", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CheckForUpdatesResponse)
		return soap_closesock(soap);
	gnvim2__CheckForUpdatesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CheckForUpdatesResponse.soap_get(soap, "gnvim2:CheckForUpdatesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::WaitForUpdates(const char *endpoint, const char *soap_action, gnvim2__WaitForUpdatesRequestType *gnvim2__WaitForUpdates, _gnvim2__WaitForUpdatesResponse &gnvim2__WaitForUpdatesResponse)
{	struct soap *soap = this;
	struct __gnvim2__WaitForUpdates soap_tmp___gnvim2__WaitForUpdates;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__WaitForUpdates.gnvim2__WaitForUpdates = gnvim2__WaitForUpdates;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__WaitForUpdates(soap, &soap_tmp___gnvim2__WaitForUpdates);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__WaitForUpdates(soap, &soap_tmp___gnvim2__WaitForUpdates, "-gnvim2:WaitForUpdates", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__WaitForUpdates(soap, &soap_tmp___gnvim2__WaitForUpdates, "-gnvim2:WaitForUpdates", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__WaitForUpdatesResponse)
		return soap_closesock(soap);
	gnvim2__WaitForUpdatesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__WaitForUpdatesResponse.soap_get(soap, "gnvim2:WaitForUpdatesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CancelWaitForUpdates(const char *endpoint, const char *soap_action, gnvim2__CancelWaitForUpdatesRequestType *gnvim2__CancelWaitForUpdates, _gnvim2__CancelWaitForUpdatesResponse &gnvim2__CancelWaitForUpdatesResponse)
{	struct soap *soap = this;
	struct __gnvim2__CancelWaitForUpdates soap_tmp___gnvim2__CancelWaitForUpdates;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CancelWaitForUpdates.gnvim2__CancelWaitForUpdates = gnvim2__CancelWaitForUpdates;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CancelWaitForUpdates(soap, &soap_tmp___gnvim2__CancelWaitForUpdates);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CancelWaitForUpdates(soap, &soap_tmp___gnvim2__CancelWaitForUpdates, "-gnvim2:CancelWaitForUpdates", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CancelWaitForUpdates(soap, &soap_tmp___gnvim2__CancelWaitForUpdates, "-gnvim2:CancelWaitForUpdates", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CancelWaitForUpdatesResponse)
		return soap_closesock(soap);
	gnvim2__CancelWaitForUpdatesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CancelWaitForUpdatesResponse.soap_get(soap, "gnvim2:CancelWaitForUpdatesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::WaitForUpdatesEx(const char *endpoint, const char *soap_action, gnvim2__WaitForUpdatesExRequestType *gnvim2__WaitForUpdatesEx, _gnvim2__WaitForUpdatesExResponse &gnvim2__WaitForUpdatesExResponse)
{	struct soap *soap = this;
	struct __gnvim2__WaitForUpdatesEx soap_tmp___gnvim2__WaitForUpdatesEx;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__WaitForUpdatesEx.gnvim2__WaitForUpdatesEx = gnvim2__WaitForUpdatesEx;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__WaitForUpdatesEx(soap, &soap_tmp___gnvim2__WaitForUpdatesEx);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__WaitForUpdatesEx(soap, &soap_tmp___gnvim2__WaitForUpdatesEx, "-gnvim2:WaitForUpdatesEx", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__WaitForUpdatesEx(soap, &soap_tmp___gnvim2__WaitForUpdatesEx, "-gnvim2:WaitForUpdatesEx", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__WaitForUpdatesExResponse)
		return soap_closesock(soap);
	gnvim2__WaitForUpdatesExResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__WaitForUpdatesExResponse.soap_get(soap, "gnvim2:WaitForUpdatesExResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrievePropertiesEx(const char *endpoint, const char *soap_action, gnvim2__RetrievePropertiesExRequestType *gnvim2__RetrievePropertiesEx, _gnvim2__RetrievePropertiesExResponse &gnvim2__RetrievePropertiesExResponse)
{	struct soap *soap = this;
	struct __gnvim2__RetrievePropertiesEx soap_tmp___gnvim2__RetrievePropertiesEx;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RetrievePropertiesEx.gnvim2__RetrievePropertiesEx = gnvim2__RetrievePropertiesEx;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RetrievePropertiesEx(soap, &soap_tmp___gnvim2__RetrievePropertiesEx);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RetrievePropertiesEx(soap, &soap_tmp___gnvim2__RetrievePropertiesEx, "-gnvim2:RetrievePropertiesEx", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RetrievePropertiesEx(soap, &soap_tmp___gnvim2__RetrievePropertiesEx, "-gnvim2:RetrievePropertiesEx", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RetrievePropertiesExResponse)
		return soap_closesock(soap);
	gnvim2__RetrievePropertiesExResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RetrievePropertiesExResponse.soap_get(soap, "gnvim2:RetrievePropertiesExResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ContinueRetrievePropertiesEx(const char *endpoint, const char *soap_action, gnvim2__ContinueRetrievePropertiesExRequestType *gnvim2__ContinueRetrievePropertiesEx, _gnvim2__ContinueRetrievePropertiesExResponse &gnvim2__ContinueRetrievePropertiesExResponse)
{	struct soap *soap = this;
	struct __gnvim2__ContinueRetrievePropertiesEx soap_tmp___gnvim2__ContinueRetrievePropertiesEx;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ContinueRetrievePropertiesEx.gnvim2__ContinueRetrievePropertiesEx = gnvim2__ContinueRetrievePropertiesEx;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ContinueRetrievePropertiesEx(soap, &soap_tmp___gnvim2__ContinueRetrievePropertiesEx);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ContinueRetrievePropertiesEx(soap, &soap_tmp___gnvim2__ContinueRetrievePropertiesEx, "-gnvim2:ContinueRetrievePropertiesEx", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ContinueRetrievePropertiesEx(soap, &soap_tmp___gnvim2__ContinueRetrievePropertiesEx, "-gnvim2:ContinueRetrievePropertiesEx", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ContinueRetrievePropertiesExResponse)
		return soap_closesock(soap);
	gnvim2__ContinueRetrievePropertiesExResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ContinueRetrievePropertiesExResponse.soap_get(soap, "gnvim2:ContinueRetrievePropertiesExResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CancelRetrievePropertiesEx(const char *endpoint, const char *soap_action, gnvim2__CancelRetrievePropertiesExRequestType *gnvim2__CancelRetrievePropertiesEx, _gnvim2__CancelRetrievePropertiesExResponse &gnvim2__CancelRetrievePropertiesExResponse)
{	struct soap *soap = this;
	struct __gnvim2__CancelRetrievePropertiesEx soap_tmp___gnvim2__CancelRetrievePropertiesEx;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CancelRetrievePropertiesEx.gnvim2__CancelRetrievePropertiesEx = gnvim2__CancelRetrievePropertiesEx;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CancelRetrievePropertiesEx(soap, &soap_tmp___gnvim2__CancelRetrievePropertiesEx);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CancelRetrievePropertiesEx(soap, &soap_tmp___gnvim2__CancelRetrievePropertiesEx, "-gnvim2:CancelRetrievePropertiesEx", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CancelRetrievePropertiesEx(soap, &soap_tmp___gnvim2__CancelRetrievePropertiesEx, "-gnvim2:CancelRetrievePropertiesEx", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CancelRetrievePropertiesExResponse)
		return soap_closesock(soap);
	gnvim2__CancelRetrievePropertiesExResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CancelRetrievePropertiesExResponse.soap_get(soap, "gnvim2:CancelRetrievePropertiesExResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreatePropertyCollector(const char *endpoint, const char *soap_action, gnvim2__CreatePropertyCollectorRequestType *gnvim2__CreatePropertyCollector, _gnvim2__CreatePropertyCollectorResponse &gnvim2__CreatePropertyCollectorResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreatePropertyCollector soap_tmp___gnvim2__CreatePropertyCollector;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreatePropertyCollector.gnvim2__CreatePropertyCollector = gnvim2__CreatePropertyCollector;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreatePropertyCollector(soap, &soap_tmp___gnvim2__CreatePropertyCollector);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreatePropertyCollector(soap, &soap_tmp___gnvim2__CreatePropertyCollector, "-gnvim2:CreatePropertyCollector", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreatePropertyCollector(soap, &soap_tmp___gnvim2__CreatePropertyCollector, "-gnvim2:CreatePropertyCollector", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreatePropertyCollectorResponse)
		return soap_closesock(soap);
	gnvim2__CreatePropertyCollectorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreatePropertyCollectorResponse.soap_get(soap, "gnvim2:CreatePropertyCollectorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DestroyPropertyCollector(const char *endpoint, const char *soap_action, gnvim2__DestroyPropertyCollectorRequestType *gnvim2__DestroyPropertyCollector, _gnvim2__DestroyPropertyCollectorResponse &gnvim2__DestroyPropertyCollectorResponse)
{	struct soap *soap = this;
	struct __gnvim2__DestroyPropertyCollector soap_tmp___gnvim2__DestroyPropertyCollector;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DestroyPropertyCollector.gnvim2__DestroyPropertyCollector = gnvim2__DestroyPropertyCollector;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DestroyPropertyCollector(soap, &soap_tmp___gnvim2__DestroyPropertyCollector);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DestroyPropertyCollector(soap, &soap_tmp___gnvim2__DestroyPropertyCollector, "-gnvim2:DestroyPropertyCollector", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DestroyPropertyCollector(soap, &soap_tmp___gnvim2__DestroyPropertyCollector, "-gnvim2:DestroyPropertyCollector", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DestroyPropertyCollectorResponse)
		return soap_closesock(soap);
	gnvim2__DestroyPropertyCollectorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DestroyPropertyCollectorResponse.soap_get(soap, "gnvim2:DestroyPropertyCollectorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddAuthorizationRole(const char *endpoint, const char *soap_action, gnvim2__AddAuthorizationRoleRequestType *gnvim2__AddAuthorizationRole, _gnvim2__AddAuthorizationRoleResponse &gnvim2__AddAuthorizationRoleResponse)
{	struct soap *soap = this;
	struct __gnvim2__AddAuthorizationRole soap_tmp___gnvim2__AddAuthorizationRole;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AddAuthorizationRole.gnvim2__AddAuthorizationRole = gnvim2__AddAuthorizationRole;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AddAuthorizationRole(soap, &soap_tmp___gnvim2__AddAuthorizationRole);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AddAuthorizationRole(soap, &soap_tmp___gnvim2__AddAuthorizationRole, "-gnvim2:AddAuthorizationRole", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AddAuthorizationRole(soap, &soap_tmp___gnvim2__AddAuthorizationRole, "-gnvim2:AddAuthorizationRole", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AddAuthorizationRoleResponse)
		return soap_closesock(soap);
	gnvim2__AddAuthorizationRoleResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AddAuthorizationRoleResponse.soap_get(soap, "gnvim2:AddAuthorizationRoleResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveAuthorizationRole(const char *endpoint, const char *soap_action, gnvim2__RemoveAuthorizationRoleRequestType *gnvim2__RemoveAuthorizationRole, _gnvim2__RemoveAuthorizationRoleResponse &gnvim2__RemoveAuthorizationRoleResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveAuthorizationRole soap_tmp___gnvim2__RemoveAuthorizationRole;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveAuthorizationRole.gnvim2__RemoveAuthorizationRole = gnvim2__RemoveAuthorizationRole;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveAuthorizationRole(soap, &soap_tmp___gnvim2__RemoveAuthorizationRole);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveAuthorizationRole(soap, &soap_tmp___gnvim2__RemoveAuthorizationRole, "-gnvim2:RemoveAuthorizationRole", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveAuthorizationRole(soap, &soap_tmp___gnvim2__RemoveAuthorizationRole, "-gnvim2:RemoveAuthorizationRole", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveAuthorizationRoleResponse)
		return soap_closesock(soap);
	gnvim2__RemoveAuthorizationRoleResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveAuthorizationRoleResponse.soap_get(soap, "gnvim2:RemoveAuthorizationRoleResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateAuthorizationRole(const char *endpoint, const char *soap_action, gnvim2__UpdateAuthorizationRoleRequestType *gnvim2__UpdateAuthorizationRole, _gnvim2__UpdateAuthorizationRoleResponse &gnvim2__UpdateAuthorizationRoleResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateAuthorizationRole soap_tmp___gnvim2__UpdateAuthorizationRole;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateAuthorizationRole.gnvim2__UpdateAuthorizationRole = gnvim2__UpdateAuthorizationRole;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateAuthorizationRole(soap, &soap_tmp___gnvim2__UpdateAuthorizationRole);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateAuthorizationRole(soap, &soap_tmp___gnvim2__UpdateAuthorizationRole, "-gnvim2:UpdateAuthorizationRole", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateAuthorizationRole(soap, &soap_tmp___gnvim2__UpdateAuthorizationRole, "-gnvim2:UpdateAuthorizationRole", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateAuthorizationRoleResponse)
		return soap_closesock(soap);
	gnvim2__UpdateAuthorizationRoleResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateAuthorizationRoleResponse.soap_get(soap, "gnvim2:UpdateAuthorizationRoleResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MergePermissions(const char *endpoint, const char *soap_action, gnvim2__MergePermissionsRequestType *gnvim2__MergePermissions, _gnvim2__MergePermissionsResponse &gnvim2__MergePermissionsResponse)
{	struct soap *soap = this;
	struct __gnvim2__MergePermissions soap_tmp___gnvim2__MergePermissions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MergePermissions.gnvim2__MergePermissions = gnvim2__MergePermissions;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MergePermissions(soap, &soap_tmp___gnvim2__MergePermissions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MergePermissions(soap, &soap_tmp___gnvim2__MergePermissions, "-gnvim2:MergePermissions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MergePermissions(soap, &soap_tmp___gnvim2__MergePermissions, "-gnvim2:MergePermissions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MergePermissionsResponse)
		return soap_closesock(soap);
	gnvim2__MergePermissionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MergePermissionsResponse.soap_get(soap, "gnvim2:MergePermissionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveRolePermissions(const char *endpoint, const char *soap_action, gnvim2__RetrieveRolePermissionsRequestType *gnvim2__RetrieveRolePermissions, _gnvim2__RetrieveRolePermissionsResponse &gnvim2__RetrieveRolePermissionsResponse)
{	struct soap *soap = this;
	struct __gnvim2__RetrieveRolePermissions soap_tmp___gnvim2__RetrieveRolePermissions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RetrieveRolePermissions.gnvim2__RetrieveRolePermissions = gnvim2__RetrieveRolePermissions;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RetrieveRolePermissions(soap, &soap_tmp___gnvim2__RetrieveRolePermissions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RetrieveRolePermissions(soap, &soap_tmp___gnvim2__RetrieveRolePermissions, "-gnvim2:RetrieveRolePermissions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RetrieveRolePermissions(soap, &soap_tmp___gnvim2__RetrieveRolePermissions, "-gnvim2:RetrieveRolePermissions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RetrieveRolePermissionsResponse)
		return soap_closesock(soap);
	gnvim2__RetrieveRolePermissionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RetrieveRolePermissionsResponse.soap_get(soap, "gnvim2:RetrieveRolePermissionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveEntityPermissions(const char *endpoint, const char *soap_action, gnvim2__RetrieveEntityPermissionsRequestType *gnvim2__RetrieveEntityPermissions, _gnvim2__RetrieveEntityPermissionsResponse &gnvim2__RetrieveEntityPermissionsResponse)
{	struct soap *soap = this;
	struct __gnvim2__RetrieveEntityPermissions soap_tmp___gnvim2__RetrieveEntityPermissions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RetrieveEntityPermissions.gnvim2__RetrieveEntityPermissions = gnvim2__RetrieveEntityPermissions;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RetrieveEntityPermissions(soap, &soap_tmp___gnvim2__RetrieveEntityPermissions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RetrieveEntityPermissions(soap, &soap_tmp___gnvim2__RetrieveEntityPermissions, "-gnvim2:RetrieveEntityPermissions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RetrieveEntityPermissions(soap, &soap_tmp___gnvim2__RetrieveEntityPermissions, "-gnvim2:RetrieveEntityPermissions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RetrieveEntityPermissionsResponse)
		return soap_closesock(soap);
	gnvim2__RetrieveEntityPermissionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RetrieveEntityPermissionsResponse.soap_get(soap, "gnvim2:RetrieveEntityPermissionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveAllPermissions(const char *endpoint, const char *soap_action, gnvim2__RetrieveAllPermissionsRequestType *gnvim2__RetrieveAllPermissions, _gnvim2__RetrieveAllPermissionsResponse &gnvim2__RetrieveAllPermissionsResponse)
{	struct soap *soap = this;
	struct __gnvim2__RetrieveAllPermissions soap_tmp___gnvim2__RetrieveAllPermissions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RetrieveAllPermissions.gnvim2__RetrieveAllPermissions = gnvim2__RetrieveAllPermissions;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RetrieveAllPermissions(soap, &soap_tmp___gnvim2__RetrieveAllPermissions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RetrieveAllPermissions(soap, &soap_tmp___gnvim2__RetrieveAllPermissions, "-gnvim2:RetrieveAllPermissions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RetrieveAllPermissions(soap, &soap_tmp___gnvim2__RetrieveAllPermissions, "-gnvim2:RetrieveAllPermissions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RetrieveAllPermissionsResponse)
		return soap_closesock(soap);
	gnvim2__RetrieveAllPermissionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RetrieveAllPermissionsResponse.soap_get(soap, "gnvim2:RetrieveAllPermissionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetEntityPermissions(const char *endpoint, const char *soap_action, gnvim2__SetEntityPermissionsRequestType *gnvim2__SetEntityPermissions, _gnvim2__SetEntityPermissionsResponse &gnvim2__SetEntityPermissionsResponse)
{	struct soap *soap = this;
	struct __gnvim2__SetEntityPermissions soap_tmp___gnvim2__SetEntityPermissions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SetEntityPermissions.gnvim2__SetEntityPermissions = gnvim2__SetEntityPermissions;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SetEntityPermissions(soap, &soap_tmp___gnvim2__SetEntityPermissions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SetEntityPermissions(soap, &soap_tmp___gnvim2__SetEntityPermissions, "-gnvim2:SetEntityPermissions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SetEntityPermissions(soap, &soap_tmp___gnvim2__SetEntityPermissions, "-gnvim2:SetEntityPermissions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SetEntityPermissionsResponse)
		return soap_closesock(soap);
	gnvim2__SetEntityPermissionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SetEntityPermissionsResponse.soap_get(soap, "gnvim2:SetEntityPermissionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResetEntityPermissions(const char *endpoint, const char *soap_action, gnvim2__ResetEntityPermissionsRequestType *gnvim2__ResetEntityPermissions, _gnvim2__ResetEntityPermissionsResponse &gnvim2__ResetEntityPermissionsResponse)
{	struct soap *soap = this;
	struct __gnvim2__ResetEntityPermissions soap_tmp___gnvim2__ResetEntityPermissions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ResetEntityPermissions.gnvim2__ResetEntityPermissions = gnvim2__ResetEntityPermissions;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ResetEntityPermissions(soap, &soap_tmp___gnvim2__ResetEntityPermissions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ResetEntityPermissions(soap, &soap_tmp___gnvim2__ResetEntityPermissions, "-gnvim2:ResetEntityPermissions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ResetEntityPermissions(soap, &soap_tmp___gnvim2__ResetEntityPermissions, "-gnvim2:ResetEntityPermissions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ResetEntityPermissionsResponse)
		return soap_closesock(soap);
	gnvim2__ResetEntityPermissionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ResetEntityPermissionsResponse.soap_get(soap, "gnvim2:ResetEntityPermissionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveEntityPermission(const char *endpoint, const char *soap_action, gnvim2__RemoveEntityPermissionRequestType *gnvim2__RemoveEntityPermission, _gnvim2__RemoveEntityPermissionResponse &gnvim2__RemoveEntityPermissionResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveEntityPermission soap_tmp___gnvim2__RemoveEntityPermission;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveEntityPermission.gnvim2__RemoveEntityPermission = gnvim2__RemoveEntityPermission;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveEntityPermission(soap, &soap_tmp___gnvim2__RemoveEntityPermission);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveEntityPermission(soap, &soap_tmp___gnvim2__RemoveEntityPermission, "-gnvim2:RemoveEntityPermission", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveEntityPermission(soap, &soap_tmp___gnvim2__RemoveEntityPermission, "-gnvim2:RemoveEntityPermission", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveEntityPermissionResponse)
		return soap_closesock(soap);
	gnvim2__RemoveEntityPermissionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveEntityPermissionResponse.soap_get(soap, "gnvim2:RemoveEntityPermissionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::HasPrivilegeOnEntity(const char *endpoint, const char *soap_action, gnvim2__HasPrivilegeOnEntityRequestType *gnvim2__HasPrivilegeOnEntity, _gnvim2__HasPrivilegeOnEntityResponse &gnvim2__HasPrivilegeOnEntityResponse)
{	struct soap *soap = this;
	struct __gnvim2__HasPrivilegeOnEntity soap_tmp___gnvim2__HasPrivilegeOnEntity;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__HasPrivilegeOnEntity.gnvim2__HasPrivilegeOnEntity = gnvim2__HasPrivilegeOnEntity;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__HasPrivilegeOnEntity(soap, &soap_tmp___gnvim2__HasPrivilegeOnEntity);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__HasPrivilegeOnEntity(soap, &soap_tmp___gnvim2__HasPrivilegeOnEntity, "-gnvim2:HasPrivilegeOnEntity", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__HasPrivilegeOnEntity(soap, &soap_tmp___gnvim2__HasPrivilegeOnEntity, "-gnvim2:HasPrivilegeOnEntity", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__HasPrivilegeOnEntityResponse)
		return soap_closesock(soap);
	gnvim2__HasPrivilegeOnEntityResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__HasPrivilegeOnEntityResponse.soap_get(soap, "gnvim2:HasPrivilegeOnEntityResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::HasPrivilegeOnEntities(const char *endpoint, const char *soap_action, gnvim2__HasPrivilegeOnEntitiesRequestType *gnvim2__HasPrivilegeOnEntities, _gnvim2__HasPrivilegeOnEntitiesResponse &gnvim2__HasPrivilegeOnEntitiesResponse)
{	struct soap *soap = this;
	struct __gnvim2__HasPrivilegeOnEntities soap_tmp___gnvim2__HasPrivilegeOnEntities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__HasPrivilegeOnEntities.gnvim2__HasPrivilegeOnEntities = gnvim2__HasPrivilegeOnEntities;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__HasPrivilegeOnEntities(soap, &soap_tmp___gnvim2__HasPrivilegeOnEntities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__HasPrivilegeOnEntities(soap, &soap_tmp___gnvim2__HasPrivilegeOnEntities, "-gnvim2:HasPrivilegeOnEntities", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__HasPrivilegeOnEntities(soap, &soap_tmp___gnvim2__HasPrivilegeOnEntities, "-gnvim2:HasPrivilegeOnEntities", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__HasPrivilegeOnEntitiesResponse)
		return soap_closesock(soap);
	gnvim2__HasPrivilegeOnEntitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__HasPrivilegeOnEntitiesResponse.soap_get(soap, "gnvim2:HasPrivilegeOnEntitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CertMgrRefreshCACertificatesAndCRLs_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CertMgrRefreshCACertificatesAndCRLsRequestType *gnvim2__CertMgrRefreshCACertificatesAndCRLs_USCORETask, _gnvim2__CertMgrRefreshCACertificatesAndCRLs_USCORETaskResponse &gnvim2__CertMgrRefreshCACertificatesAndCRLs_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CertMgrRefreshCACertificatesAndCRLs_USCORETask soap_tmp___gnvim2__CertMgrRefreshCACertificatesAndCRLs_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CertMgrRefreshCACertificatesAndCRLs_USCORETask.gnvim2__CertMgrRefreshCACertificatesAndCRLs_USCORETask = gnvim2__CertMgrRefreshCACertificatesAndCRLs_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CertMgrRefreshCACertificatesAndCRLs_USCORETask(soap, &soap_tmp___gnvim2__CertMgrRefreshCACertificatesAndCRLs_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CertMgrRefreshCACertificatesAndCRLs_USCORETask(soap, &soap_tmp___gnvim2__CertMgrRefreshCACertificatesAndCRLs_USCORETask, "-gnvim2:CertMgrRefreshCACertificatesAndCRLs_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CertMgrRefreshCACertificatesAndCRLs_USCORETask(soap, &soap_tmp___gnvim2__CertMgrRefreshCACertificatesAndCRLs_USCORETask, "-gnvim2:CertMgrRefreshCACertificatesAndCRLs_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CertMgrRefreshCACertificatesAndCRLs_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CertMgrRefreshCACertificatesAndCRLs_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CertMgrRefreshCACertificatesAndCRLs_USCORETaskResponse.soap_get(soap, "gnvim2:CertMgrRefreshCACertificatesAndCRLs_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CertMgrRefreshCertificates_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CertMgrRefreshCertificatesRequestType *gnvim2__CertMgrRefreshCertificates_USCORETask, _gnvim2__CertMgrRefreshCertificates_USCORETaskResponse &gnvim2__CertMgrRefreshCertificates_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CertMgrRefreshCertificates_USCORETask soap_tmp___gnvim2__CertMgrRefreshCertificates_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CertMgrRefreshCertificates_USCORETask.gnvim2__CertMgrRefreshCertificates_USCORETask = gnvim2__CertMgrRefreshCertificates_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CertMgrRefreshCertificates_USCORETask(soap, &soap_tmp___gnvim2__CertMgrRefreshCertificates_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CertMgrRefreshCertificates_USCORETask(soap, &soap_tmp___gnvim2__CertMgrRefreshCertificates_USCORETask, "-gnvim2:CertMgrRefreshCertificates_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CertMgrRefreshCertificates_USCORETask(soap, &soap_tmp___gnvim2__CertMgrRefreshCertificates_USCORETask, "-gnvim2:CertMgrRefreshCertificates_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CertMgrRefreshCertificates_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CertMgrRefreshCertificates_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CertMgrRefreshCertificates_USCORETaskResponse.soap_get(soap, "gnvim2:CertMgrRefreshCertificates_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CertMgrRevokeCertificates_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CertMgrRevokeCertificatesRequestType *gnvim2__CertMgrRevokeCertificates_USCORETask, _gnvim2__CertMgrRevokeCertificates_USCORETaskResponse &gnvim2__CertMgrRevokeCertificates_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CertMgrRevokeCertificates_USCORETask soap_tmp___gnvim2__CertMgrRevokeCertificates_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CertMgrRevokeCertificates_USCORETask.gnvim2__CertMgrRevokeCertificates_USCORETask = gnvim2__CertMgrRevokeCertificates_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CertMgrRevokeCertificates_USCORETask(soap, &soap_tmp___gnvim2__CertMgrRevokeCertificates_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CertMgrRevokeCertificates_USCORETask(soap, &soap_tmp___gnvim2__CertMgrRevokeCertificates_USCORETask, "-gnvim2:CertMgrRevokeCertificates_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CertMgrRevokeCertificates_USCORETask(soap, &soap_tmp___gnvim2__CertMgrRevokeCertificates_USCORETask, "-gnvim2:CertMgrRevokeCertificates_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CertMgrRevokeCertificates_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CertMgrRevokeCertificates_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CertMgrRevokeCertificates_USCORETaskResponse.soap_get(soap, "gnvim2:CertMgrRevokeCertificates_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureCluster_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ReconfigureClusterRequestType *gnvim2__ReconfigureCluster_USCORETask, _gnvim2__ReconfigureCluster_USCORETaskResponse &gnvim2__ReconfigureCluster_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReconfigureCluster_USCORETask soap_tmp___gnvim2__ReconfigureCluster_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReconfigureCluster_USCORETask.gnvim2__ReconfigureCluster_USCORETask = gnvim2__ReconfigureCluster_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReconfigureCluster_USCORETask(soap, &soap_tmp___gnvim2__ReconfigureCluster_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReconfigureCluster_USCORETask(soap, &soap_tmp___gnvim2__ReconfigureCluster_USCORETask, "-gnvim2:ReconfigureCluster_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReconfigureCluster_USCORETask(soap, &soap_tmp___gnvim2__ReconfigureCluster_USCORETask, "-gnvim2:ReconfigureCluster_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReconfigureCluster_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ReconfigureCluster_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReconfigureCluster_USCORETaskResponse.soap_get(soap, "gnvim2:ReconfigureCluster_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ApplyRecommendation(const char *endpoint, const char *soap_action, gnvim2__ApplyRecommendationRequestType *gnvim2__ApplyRecommendation, _gnvim2__ApplyRecommendationResponse &gnvim2__ApplyRecommendationResponse)
{	struct soap *soap = this;
	struct __gnvim2__ApplyRecommendation soap_tmp___gnvim2__ApplyRecommendation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ApplyRecommendation.gnvim2__ApplyRecommendation = gnvim2__ApplyRecommendation;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ApplyRecommendation(soap, &soap_tmp___gnvim2__ApplyRecommendation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ApplyRecommendation(soap, &soap_tmp___gnvim2__ApplyRecommendation, "-gnvim2:ApplyRecommendation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ApplyRecommendation(soap, &soap_tmp___gnvim2__ApplyRecommendation, "-gnvim2:ApplyRecommendation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ApplyRecommendationResponse)
		return soap_closesock(soap);
	gnvim2__ApplyRecommendationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ApplyRecommendationResponse.soap_get(soap, "gnvim2:ApplyRecommendationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CancelRecommendation(const char *endpoint, const char *soap_action, gnvim2__CancelRecommendationRequestType *gnvim2__CancelRecommendation, _gnvim2__CancelRecommendationResponse &gnvim2__CancelRecommendationResponse)
{	struct soap *soap = this;
	struct __gnvim2__CancelRecommendation soap_tmp___gnvim2__CancelRecommendation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CancelRecommendation.gnvim2__CancelRecommendation = gnvim2__CancelRecommendation;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CancelRecommendation(soap, &soap_tmp___gnvim2__CancelRecommendation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CancelRecommendation(soap, &soap_tmp___gnvim2__CancelRecommendation, "-gnvim2:CancelRecommendation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CancelRecommendation(soap, &soap_tmp___gnvim2__CancelRecommendation, "-gnvim2:CancelRecommendation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CancelRecommendationResponse)
		return soap_closesock(soap);
	gnvim2__CancelRecommendationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CancelRecommendationResponse.soap_get(soap, "gnvim2:CancelRecommendationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RecommendHostsForVm(const char *endpoint, const char *soap_action, gnvim2__RecommendHostsForVmRequestType *gnvim2__RecommendHostsForVm, _gnvim2__RecommendHostsForVmResponse &gnvim2__RecommendHostsForVmResponse)
{	struct soap *soap = this;
	struct __gnvim2__RecommendHostsForVm soap_tmp___gnvim2__RecommendHostsForVm;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RecommendHostsForVm.gnvim2__RecommendHostsForVm = gnvim2__RecommendHostsForVm;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RecommendHostsForVm(soap, &soap_tmp___gnvim2__RecommendHostsForVm);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RecommendHostsForVm(soap, &soap_tmp___gnvim2__RecommendHostsForVm, "-gnvim2:RecommendHostsForVm", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RecommendHostsForVm(soap, &soap_tmp___gnvim2__RecommendHostsForVm, "-gnvim2:RecommendHostsForVm", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RecommendHostsForVmResponse)
		return soap_closesock(soap);
	gnvim2__RecommendHostsForVmResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RecommendHostsForVmResponse.soap_get(soap, "gnvim2:RecommendHostsForVmResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddHost_USCORETask(const char *endpoint, const char *soap_action, gnvim2__AddHostRequestType *gnvim2__AddHost_USCORETask, _gnvim2__AddHost_USCORETaskResponse &gnvim2__AddHost_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__AddHost_USCORETask soap_tmp___gnvim2__AddHost_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AddHost_USCORETask.gnvim2__AddHost_USCORETask = gnvim2__AddHost_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AddHost_USCORETask(soap, &soap_tmp___gnvim2__AddHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AddHost_USCORETask(soap, &soap_tmp___gnvim2__AddHost_USCORETask, "-gnvim2:AddHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AddHost_USCORETask(soap, &soap_tmp___gnvim2__AddHost_USCORETask, "-gnvim2:AddHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AddHost_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__AddHost_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AddHost_USCORETaskResponse.soap_get(soap, "gnvim2:AddHost_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MoveInto_USCORETask(const char *endpoint, const char *soap_action, gnvim2__MoveIntoRequestType *gnvim2__MoveInto_USCORETask, _gnvim2__MoveInto_USCORETaskResponse &gnvim2__MoveInto_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__MoveInto_USCORETask soap_tmp___gnvim2__MoveInto_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MoveInto_USCORETask.gnvim2__MoveInto_USCORETask = gnvim2__MoveInto_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MoveInto_USCORETask(soap, &soap_tmp___gnvim2__MoveInto_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MoveInto_USCORETask(soap, &soap_tmp___gnvim2__MoveInto_USCORETask, "-gnvim2:MoveInto_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MoveInto_USCORETask(soap, &soap_tmp___gnvim2__MoveInto_USCORETask, "-gnvim2:MoveInto_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MoveInto_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__MoveInto_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MoveInto_USCORETaskResponse.soap_get(soap, "gnvim2:MoveInto_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MoveHostInto_USCORETask(const char *endpoint, const char *soap_action, gnvim2__MoveHostIntoRequestType *gnvim2__MoveHostInto_USCORETask, _gnvim2__MoveHostInto_USCORETaskResponse &gnvim2__MoveHostInto_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__MoveHostInto_USCORETask soap_tmp___gnvim2__MoveHostInto_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MoveHostInto_USCORETask.gnvim2__MoveHostInto_USCORETask = gnvim2__MoveHostInto_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MoveHostInto_USCORETask(soap, &soap_tmp___gnvim2__MoveHostInto_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MoveHostInto_USCORETask(soap, &soap_tmp___gnvim2__MoveHostInto_USCORETask, "-gnvim2:MoveHostInto_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MoveHostInto_USCORETask(soap, &soap_tmp___gnvim2__MoveHostInto_USCORETask, "-gnvim2:MoveHostInto_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MoveHostInto_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__MoveHostInto_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MoveHostInto_USCORETaskResponse.soap_get(soap, "gnvim2:MoveHostInto_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshRecommendation(const char *endpoint, const char *soap_action, gnvim2__RefreshRecommendationRequestType *gnvim2__RefreshRecommendation, _gnvim2__RefreshRecommendationResponse &gnvim2__RefreshRecommendationResponse)
{	struct soap *soap = this;
	struct __gnvim2__RefreshRecommendation soap_tmp___gnvim2__RefreshRecommendation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RefreshRecommendation.gnvim2__RefreshRecommendation = gnvim2__RefreshRecommendation;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RefreshRecommendation(soap, &soap_tmp___gnvim2__RefreshRecommendation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RefreshRecommendation(soap, &soap_tmp___gnvim2__RefreshRecommendation, "-gnvim2:RefreshRecommendation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RefreshRecommendation(soap, &soap_tmp___gnvim2__RefreshRecommendation, "-gnvim2:RefreshRecommendation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RefreshRecommendationResponse)
		return soap_closesock(soap);
	gnvim2__RefreshRecommendationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RefreshRecommendationResponse.soap_get(soap, "gnvim2:RefreshRecommendationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EvcManager(const char *endpoint, const char *soap_action, gnvim2__EvcManagerRequestType *gnvim2__EvcManager, _gnvim2__EvcManagerResponse &gnvim2__EvcManagerResponse)
{	struct soap *soap = this;
	struct __gnvim2__EvcManager soap_tmp___gnvim2__EvcManager;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__EvcManager.gnvim2__EvcManager = gnvim2__EvcManager;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__EvcManager(soap, &soap_tmp___gnvim2__EvcManager);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__EvcManager(soap, &soap_tmp___gnvim2__EvcManager, "-gnvim2:EvcManager", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__EvcManager(soap, &soap_tmp___gnvim2__EvcManager, "-gnvim2:EvcManager", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__EvcManagerResponse)
		return soap_closesock(soap);
	gnvim2__EvcManagerResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__EvcManagerResponse.soap_get(soap, "gnvim2:EvcManagerResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveDasAdvancedRuntimeInfo(const char *endpoint, const char *soap_action, gnvim2__RetrieveDasAdvancedRuntimeInfoRequestType *gnvim2__RetrieveDasAdvancedRuntimeInfo, _gnvim2__RetrieveDasAdvancedRuntimeInfoResponse &gnvim2__RetrieveDasAdvancedRuntimeInfoResponse)
{	struct soap *soap = this;
	struct __gnvim2__RetrieveDasAdvancedRuntimeInfo soap_tmp___gnvim2__RetrieveDasAdvancedRuntimeInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RetrieveDasAdvancedRuntimeInfo.gnvim2__RetrieveDasAdvancedRuntimeInfo = gnvim2__RetrieveDasAdvancedRuntimeInfo;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RetrieveDasAdvancedRuntimeInfo(soap, &soap_tmp___gnvim2__RetrieveDasAdvancedRuntimeInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RetrieveDasAdvancedRuntimeInfo(soap, &soap_tmp___gnvim2__RetrieveDasAdvancedRuntimeInfo, "-gnvim2:RetrieveDasAdvancedRuntimeInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RetrieveDasAdvancedRuntimeInfo(soap, &soap_tmp___gnvim2__RetrieveDasAdvancedRuntimeInfo, "-gnvim2:RetrieveDasAdvancedRuntimeInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RetrieveDasAdvancedRuntimeInfoResponse)
		return soap_closesock(soap);
	gnvim2__RetrieveDasAdvancedRuntimeInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RetrieveDasAdvancedRuntimeInfoResponse.soap_get(soap, "gnvim2:RetrieveDasAdvancedRuntimeInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ClusterEnterMaintenanceMode(const char *endpoint, const char *soap_action, gnvim2__ClusterEnterMaintenanceModeRequestType *gnvim2__ClusterEnterMaintenanceMode, _gnvim2__ClusterEnterMaintenanceModeResponse &gnvim2__ClusterEnterMaintenanceModeResponse)
{	struct soap *soap = this;
	struct __gnvim2__ClusterEnterMaintenanceMode soap_tmp___gnvim2__ClusterEnterMaintenanceMode;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ClusterEnterMaintenanceMode.gnvim2__ClusterEnterMaintenanceMode = gnvim2__ClusterEnterMaintenanceMode;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ClusterEnterMaintenanceMode(soap, &soap_tmp___gnvim2__ClusterEnterMaintenanceMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ClusterEnterMaintenanceMode(soap, &soap_tmp___gnvim2__ClusterEnterMaintenanceMode, "-gnvim2:ClusterEnterMaintenanceMode", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ClusterEnterMaintenanceMode(soap, &soap_tmp___gnvim2__ClusterEnterMaintenanceMode, "-gnvim2:ClusterEnterMaintenanceMode", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ClusterEnterMaintenanceModeResponse)
		return soap_closesock(soap);
	gnvim2__ClusterEnterMaintenanceModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ClusterEnterMaintenanceModeResponse.soap_get(soap, "gnvim2:ClusterEnterMaintenanceModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::PlaceVm(const char *endpoint, const char *soap_action, gnvim2__PlaceVmRequestType *gnvim2__PlaceVm, _gnvim2__PlaceVmResponse &gnvim2__PlaceVmResponse)
{	struct soap *soap = this;
	struct __gnvim2__PlaceVm soap_tmp___gnvim2__PlaceVm;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__PlaceVm.gnvim2__PlaceVm = gnvim2__PlaceVm;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__PlaceVm(soap, &soap_tmp___gnvim2__PlaceVm);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__PlaceVm(soap, &soap_tmp___gnvim2__PlaceVm, "-gnvim2:PlaceVm", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__PlaceVm(soap, &soap_tmp___gnvim2__PlaceVm, "-gnvim2:PlaceVm", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__PlaceVmResponse)
		return soap_closesock(soap);
	gnvim2__PlaceVmResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__PlaceVmResponse.soap_get(soap, "gnvim2:PlaceVmResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FindRulesForVm(const char *endpoint, const char *soap_action, gnvim2__FindRulesForVmRequestType *gnvim2__FindRulesForVm, _gnvim2__FindRulesForVmResponse &gnvim2__FindRulesForVmResponse)
{	struct soap *soap = this;
	struct __gnvim2__FindRulesForVm soap_tmp___gnvim2__FindRulesForVm;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__FindRulesForVm.gnvim2__FindRulesForVm = gnvim2__FindRulesForVm;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__FindRulesForVm(soap, &soap_tmp___gnvim2__FindRulesForVm);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__FindRulesForVm(soap, &soap_tmp___gnvim2__FindRulesForVm, "-gnvim2:FindRulesForVm", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__FindRulesForVm(soap, &soap_tmp___gnvim2__FindRulesForVm, "-gnvim2:FindRulesForVm", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__FindRulesForVmResponse)
		return soap_closesock(soap);
	gnvim2__FindRulesForVmResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__FindRulesForVmResponse.soap_get(soap, "gnvim2:FindRulesForVmResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::StampAllRulesWithUuid_USCORETask(const char *endpoint, const char *soap_action, gnvim2__StampAllRulesWithUuidRequestType *gnvim2__StampAllRulesWithUuid_USCORETask, _gnvim2__StampAllRulesWithUuid_USCORETaskResponse &gnvim2__StampAllRulesWithUuid_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__StampAllRulesWithUuid_USCORETask soap_tmp___gnvim2__StampAllRulesWithUuid_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__StampAllRulesWithUuid_USCORETask.gnvim2__StampAllRulesWithUuid_USCORETask = gnvim2__StampAllRulesWithUuid_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__StampAllRulesWithUuid_USCORETask(soap, &soap_tmp___gnvim2__StampAllRulesWithUuid_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__StampAllRulesWithUuid_USCORETask(soap, &soap_tmp___gnvim2__StampAllRulesWithUuid_USCORETask, "-gnvim2:StampAllRulesWithUuid_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__StampAllRulesWithUuid_USCORETask(soap, &soap_tmp___gnvim2__StampAllRulesWithUuid_USCORETask, "-gnvim2:StampAllRulesWithUuid_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__StampAllRulesWithUuid_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__StampAllRulesWithUuid_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__StampAllRulesWithUuid_USCORETaskResponse.soap_get(soap, "gnvim2:StampAllRulesWithUuid_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::GetResourceUsage(const char *endpoint, const char *soap_action, gnvim2__GetResourceUsageRequestType *gnvim2__GetResourceUsage, _gnvim2__GetResourceUsageResponse &gnvim2__GetResourceUsageResponse)
{	struct soap *soap = this;
	struct __gnvim2__GetResourceUsage soap_tmp___gnvim2__GetResourceUsage;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__GetResourceUsage.gnvim2__GetResourceUsage = gnvim2__GetResourceUsage;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__GetResourceUsage(soap, &soap_tmp___gnvim2__GetResourceUsage);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__GetResourceUsage(soap, &soap_tmp___gnvim2__GetResourceUsage, "-gnvim2:GetResourceUsage", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__GetResourceUsage(soap, &soap_tmp___gnvim2__GetResourceUsage, "-gnvim2:GetResourceUsage", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__GetResourceUsageResponse)
		return soap_closesock(soap);
	gnvim2__GetResourceUsageResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__GetResourceUsageResponse.soap_get(soap, "gnvim2:GetResourceUsageResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureComputeResource_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ReconfigureComputeResourceRequestType *gnvim2__ReconfigureComputeResource_USCORETask, _gnvim2__ReconfigureComputeResource_USCORETaskResponse &gnvim2__ReconfigureComputeResource_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReconfigureComputeResource_USCORETask soap_tmp___gnvim2__ReconfigureComputeResource_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReconfigureComputeResource_USCORETask.gnvim2__ReconfigureComputeResource_USCORETask = gnvim2__ReconfigureComputeResource_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReconfigureComputeResource_USCORETask(soap, &soap_tmp___gnvim2__ReconfigureComputeResource_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReconfigureComputeResource_USCORETask(soap, &soap_tmp___gnvim2__ReconfigureComputeResource_USCORETask, "-gnvim2:ReconfigureComputeResource_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReconfigureComputeResource_USCORETask(soap, &soap_tmp___gnvim2__ReconfigureComputeResource_USCORETask, "-gnvim2:ReconfigureComputeResource_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReconfigureComputeResource_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ReconfigureComputeResource_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReconfigureComputeResource_USCORETaskResponse.soap_get(soap, "gnvim2:ReconfigureComputeResource_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddCustomFieldDef(const char *endpoint, const char *soap_action, gnvim2__AddCustomFieldDefRequestType *gnvim2__AddCustomFieldDef, _gnvim2__AddCustomFieldDefResponse &gnvim2__AddCustomFieldDefResponse)
{	struct soap *soap = this;
	struct __gnvim2__AddCustomFieldDef soap_tmp___gnvim2__AddCustomFieldDef;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AddCustomFieldDef.gnvim2__AddCustomFieldDef = gnvim2__AddCustomFieldDef;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AddCustomFieldDef(soap, &soap_tmp___gnvim2__AddCustomFieldDef);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AddCustomFieldDef(soap, &soap_tmp___gnvim2__AddCustomFieldDef, "-gnvim2:AddCustomFieldDef", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AddCustomFieldDef(soap, &soap_tmp___gnvim2__AddCustomFieldDef, "-gnvim2:AddCustomFieldDef", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AddCustomFieldDefResponse)
		return soap_closesock(soap);
	gnvim2__AddCustomFieldDefResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AddCustomFieldDefResponse.soap_get(soap, "gnvim2:AddCustomFieldDefResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveCustomFieldDef(const char *endpoint, const char *soap_action, gnvim2__RemoveCustomFieldDefRequestType *gnvim2__RemoveCustomFieldDef, _gnvim2__RemoveCustomFieldDefResponse &gnvim2__RemoveCustomFieldDefResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveCustomFieldDef soap_tmp___gnvim2__RemoveCustomFieldDef;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveCustomFieldDef.gnvim2__RemoveCustomFieldDef = gnvim2__RemoveCustomFieldDef;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveCustomFieldDef(soap, &soap_tmp___gnvim2__RemoveCustomFieldDef);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveCustomFieldDef(soap, &soap_tmp___gnvim2__RemoveCustomFieldDef, "-gnvim2:RemoveCustomFieldDef", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveCustomFieldDef(soap, &soap_tmp___gnvim2__RemoveCustomFieldDef, "-gnvim2:RemoveCustomFieldDef", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveCustomFieldDefResponse)
		return soap_closesock(soap);
	gnvim2__RemoveCustomFieldDefResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveCustomFieldDefResponse.soap_get(soap, "gnvim2:RemoveCustomFieldDefResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RenameCustomFieldDef(const char *endpoint, const char *soap_action, gnvim2__RenameCustomFieldDefRequestType *gnvim2__RenameCustomFieldDef, _gnvim2__RenameCustomFieldDefResponse &gnvim2__RenameCustomFieldDefResponse)
{	struct soap *soap = this;
	struct __gnvim2__RenameCustomFieldDef soap_tmp___gnvim2__RenameCustomFieldDef;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RenameCustomFieldDef.gnvim2__RenameCustomFieldDef = gnvim2__RenameCustomFieldDef;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RenameCustomFieldDef(soap, &soap_tmp___gnvim2__RenameCustomFieldDef);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RenameCustomFieldDef(soap, &soap_tmp___gnvim2__RenameCustomFieldDef, "-gnvim2:RenameCustomFieldDef", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RenameCustomFieldDef(soap, &soap_tmp___gnvim2__RenameCustomFieldDef, "-gnvim2:RenameCustomFieldDef", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RenameCustomFieldDefResponse)
		return soap_closesock(soap);
	gnvim2__RenameCustomFieldDefResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RenameCustomFieldDefResponse.soap_get(soap, "gnvim2:RenameCustomFieldDefResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetField(const char *endpoint, const char *soap_action, gnvim2__SetFieldRequestType *gnvim2__SetField, _gnvim2__SetFieldResponse &gnvim2__SetFieldResponse)
{	struct soap *soap = this;
	struct __gnvim2__SetField soap_tmp___gnvim2__SetField;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SetField.gnvim2__SetField = gnvim2__SetField;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SetField(soap, &soap_tmp___gnvim2__SetField);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SetField(soap, &soap_tmp___gnvim2__SetField, "-gnvim2:SetField", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SetField(soap, &soap_tmp___gnvim2__SetField, "-gnvim2:SetField", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SetFieldResponse)
		return soap_closesock(soap);
	gnvim2__SetFieldResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SetFieldResponse.soap_get(soap, "gnvim2:SetFieldResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DoesCustomizationSpecExist(const char *endpoint, const char *soap_action, gnvim2__DoesCustomizationSpecExistRequestType *gnvim2__DoesCustomizationSpecExist, _gnvim2__DoesCustomizationSpecExistResponse &gnvim2__DoesCustomizationSpecExistResponse)
{	struct soap *soap = this;
	struct __gnvim2__DoesCustomizationSpecExist soap_tmp___gnvim2__DoesCustomizationSpecExist;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DoesCustomizationSpecExist.gnvim2__DoesCustomizationSpecExist = gnvim2__DoesCustomizationSpecExist;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DoesCustomizationSpecExist(soap, &soap_tmp___gnvim2__DoesCustomizationSpecExist);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DoesCustomizationSpecExist(soap, &soap_tmp___gnvim2__DoesCustomizationSpecExist, "-gnvim2:DoesCustomizationSpecExist", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DoesCustomizationSpecExist(soap, &soap_tmp___gnvim2__DoesCustomizationSpecExist, "-gnvim2:DoesCustomizationSpecExist", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DoesCustomizationSpecExistResponse)
		return soap_closesock(soap);
	gnvim2__DoesCustomizationSpecExistResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DoesCustomizationSpecExistResponse.soap_get(soap, "gnvim2:DoesCustomizationSpecExistResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::GetCustomizationSpec(const char *endpoint, const char *soap_action, gnvim2__GetCustomizationSpecRequestType *gnvim2__GetCustomizationSpec, _gnvim2__GetCustomizationSpecResponse &gnvim2__GetCustomizationSpecResponse)
{	struct soap *soap = this;
	struct __gnvim2__GetCustomizationSpec soap_tmp___gnvim2__GetCustomizationSpec;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__GetCustomizationSpec.gnvim2__GetCustomizationSpec = gnvim2__GetCustomizationSpec;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__GetCustomizationSpec(soap, &soap_tmp___gnvim2__GetCustomizationSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__GetCustomizationSpec(soap, &soap_tmp___gnvim2__GetCustomizationSpec, "-gnvim2:GetCustomizationSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__GetCustomizationSpec(soap, &soap_tmp___gnvim2__GetCustomizationSpec, "-gnvim2:GetCustomizationSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__GetCustomizationSpecResponse)
		return soap_closesock(soap);
	gnvim2__GetCustomizationSpecResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__GetCustomizationSpecResponse.soap_get(soap, "gnvim2:GetCustomizationSpecResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateCustomizationSpec(const char *endpoint, const char *soap_action, gnvim2__CreateCustomizationSpecRequestType *gnvim2__CreateCustomizationSpec, _gnvim2__CreateCustomizationSpecResponse &gnvim2__CreateCustomizationSpecResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateCustomizationSpec soap_tmp___gnvim2__CreateCustomizationSpec;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateCustomizationSpec.gnvim2__CreateCustomizationSpec = gnvim2__CreateCustomizationSpec;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateCustomizationSpec(soap, &soap_tmp___gnvim2__CreateCustomizationSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateCustomizationSpec(soap, &soap_tmp___gnvim2__CreateCustomizationSpec, "-gnvim2:CreateCustomizationSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateCustomizationSpec(soap, &soap_tmp___gnvim2__CreateCustomizationSpec, "-gnvim2:CreateCustomizationSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateCustomizationSpecResponse)
		return soap_closesock(soap);
	gnvim2__CreateCustomizationSpecResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateCustomizationSpecResponse.soap_get(soap, "gnvim2:CreateCustomizationSpecResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::OverwriteCustomizationSpec(const char *endpoint, const char *soap_action, gnvim2__OverwriteCustomizationSpecRequestType *gnvim2__OverwriteCustomizationSpec, _gnvim2__OverwriteCustomizationSpecResponse &gnvim2__OverwriteCustomizationSpecResponse)
{	struct soap *soap = this;
	struct __gnvim2__OverwriteCustomizationSpec soap_tmp___gnvim2__OverwriteCustomizationSpec;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__OverwriteCustomizationSpec.gnvim2__OverwriteCustomizationSpec = gnvim2__OverwriteCustomizationSpec;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__OverwriteCustomizationSpec(soap, &soap_tmp___gnvim2__OverwriteCustomizationSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__OverwriteCustomizationSpec(soap, &soap_tmp___gnvim2__OverwriteCustomizationSpec, "-gnvim2:OverwriteCustomizationSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__OverwriteCustomizationSpec(soap, &soap_tmp___gnvim2__OverwriteCustomizationSpec, "-gnvim2:OverwriteCustomizationSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__OverwriteCustomizationSpecResponse)
		return soap_closesock(soap);
	gnvim2__OverwriteCustomizationSpecResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__OverwriteCustomizationSpecResponse.soap_get(soap, "gnvim2:OverwriteCustomizationSpecResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeleteCustomizationSpec(const char *endpoint, const char *soap_action, gnvim2__DeleteCustomizationSpecRequestType *gnvim2__DeleteCustomizationSpec, _gnvim2__DeleteCustomizationSpecResponse &gnvim2__DeleteCustomizationSpecResponse)
{	struct soap *soap = this;
	struct __gnvim2__DeleteCustomizationSpec soap_tmp___gnvim2__DeleteCustomizationSpec;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DeleteCustomizationSpec.gnvim2__DeleteCustomizationSpec = gnvim2__DeleteCustomizationSpec;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DeleteCustomizationSpec(soap, &soap_tmp___gnvim2__DeleteCustomizationSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DeleteCustomizationSpec(soap, &soap_tmp___gnvim2__DeleteCustomizationSpec, "-gnvim2:DeleteCustomizationSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DeleteCustomizationSpec(soap, &soap_tmp___gnvim2__DeleteCustomizationSpec, "-gnvim2:DeleteCustomizationSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DeleteCustomizationSpecResponse)
		return soap_closesock(soap);
	gnvim2__DeleteCustomizationSpecResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DeleteCustomizationSpecResponse.soap_get(soap, "gnvim2:DeleteCustomizationSpecResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DuplicateCustomizationSpec(const char *endpoint, const char *soap_action, gnvim2__DuplicateCustomizationSpecRequestType *gnvim2__DuplicateCustomizationSpec, _gnvim2__DuplicateCustomizationSpecResponse &gnvim2__DuplicateCustomizationSpecResponse)
{	struct soap *soap = this;
	struct __gnvim2__DuplicateCustomizationSpec soap_tmp___gnvim2__DuplicateCustomizationSpec;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DuplicateCustomizationSpec.gnvim2__DuplicateCustomizationSpec = gnvim2__DuplicateCustomizationSpec;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DuplicateCustomizationSpec(soap, &soap_tmp___gnvim2__DuplicateCustomizationSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DuplicateCustomizationSpec(soap, &soap_tmp___gnvim2__DuplicateCustomizationSpec, "-gnvim2:DuplicateCustomizationSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DuplicateCustomizationSpec(soap, &soap_tmp___gnvim2__DuplicateCustomizationSpec, "-gnvim2:DuplicateCustomizationSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DuplicateCustomizationSpecResponse)
		return soap_closesock(soap);
	gnvim2__DuplicateCustomizationSpecResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DuplicateCustomizationSpecResponse.soap_get(soap, "gnvim2:DuplicateCustomizationSpecResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RenameCustomizationSpec(const char *endpoint, const char *soap_action, gnvim2__RenameCustomizationSpecRequestType *gnvim2__RenameCustomizationSpec, _gnvim2__RenameCustomizationSpecResponse &gnvim2__RenameCustomizationSpecResponse)
{	struct soap *soap = this;
	struct __gnvim2__RenameCustomizationSpec soap_tmp___gnvim2__RenameCustomizationSpec;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RenameCustomizationSpec.gnvim2__RenameCustomizationSpec = gnvim2__RenameCustomizationSpec;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RenameCustomizationSpec(soap, &soap_tmp___gnvim2__RenameCustomizationSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RenameCustomizationSpec(soap, &soap_tmp___gnvim2__RenameCustomizationSpec, "-gnvim2:RenameCustomizationSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RenameCustomizationSpec(soap, &soap_tmp___gnvim2__RenameCustomizationSpec, "-gnvim2:RenameCustomizationSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RenameCustomizationSpecResponse)
		return soap_closesock(soap);
	gnvim2__RenameCustomizationSpecResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RenameCustomizationSpecResponse.soap_get(soap, "gnvim2:RenameCustomizationSpecResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CustomizationSpecItemToXml(const char *endpoint, const char *soap_action, gnvim2__CustomizationSpecItemToXmlRequestType *gnvim2__CustomizationSpecItemToXml, _gnvim2__CustomizationSpecItemToXmlResponse &gnvim2__CustomizationSpecItemToXmlResponse)
{	struct soap *soap = this;
	struct __gnvim2__CustomizationSpecItemToXml soap_tmp___gnvim2__CustomizationSpecItemToXml;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CustomizationSpecItemToXml.gnvim2__CustomizationSpecItemToXml = gnvim2__CustomizationSpecItemToXml;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CustomizationSpecItemToXml(soap, &soap_tmp___gnvim2__CustomizationSpecItemToXml);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CustomizationSpecItemToXml(soap, &soap_tmp___gnvim2__CustomizationSpecItemToXml, "-gnvim2:CustomizationSpecItemToXml", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CustomizationSpecItemToXml(soap, &soap_tmp___gnvim2__CustomizationSpecItemToXml, "-gnvim2:CustomizationSpecItemToXml", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CustomizationSpecItemToXmlResponse)
		return soap_closesock(soap);
	gnvim2__CustomizationSpecItemToXmlResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CustomizationSpecItemToXmlResponse.soap_get(soap, "gnvim2:CustomizationSpecItemToXmlResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::XmlToCustomizationSpecItem(const char *endpoint, const char *soap_action, gnvim2__XmlToCustomizationSpecItemRequestType *gnvim2__XmlToCustomizationSpecItem, _gnvim2__XmlToCustomizationSpecItemResponse &gnvim2__XmlToCustomizationSpecItemResponse)
{	struct soap *soap = this;
	struct __gnvim2__XmlToCustomizationSpecItem soap_tmp___gnvim2__XmlToCustomizationSpecItem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__XmlToCustomizationSpecItem.gnvim2__XmlToCustomizationSpecItem = gnvim2__XmlToCustomizationSpecItem;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__XmlToCustomizationSpecItem(soap, &soap_tmp___gnvim2__XmlToCustomizationSpecItem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__XmlToCustomizationSpecItem(soap, &soap_tmp___gnvim2__XmlToCustomizationSpecItem, "-gnvim2:XmlToCustomizationSpecItem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__XmlToCustomizationSpecItem(soap, &soap_tmp___gnvim2__XmlToCustomizationSpecItem, "-gnvim2:XmlToCustomizationSpecItem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__XmlToCustomizationSpecItemResponse)
		return soap_closesock(soap);
	gnvim2__XmlToCustomizationSpecItemResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__XmlToCustomizationSpecItemResponse.soap_get(soap, "gnvim2:XmlToCustomizationSpecItemResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CheckCustomizationResources(const char *endpoint, const char *soap_action, gnvim2__CheckCustomizationResourcesRequestType *gnvim2__CheckCustomizationResources, _gnvim2__CheckCustomizationResourcesResponse &gnvim2__CheckCustomizationResourcesResponse)
{	struct soap *soap = this;
	struct __gnvim2__CheckCustomizationResources soap_tmp___gnvim2__CheckCustomizationResources;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CheckCustomizationResources.gnvim2__CheckCustomizationResources = gnvim2__CheckCustomizationResources;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CheckCustomizationResources(soap, &soap_tmp___gnvim2__CheckCustomizationResources);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CheckCustomizationResources(soap, &soap_tmp___gnvim2__CheckCustomizationResources, "-gnvim2:CheckCustomizationResources", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CheckCustomizationResources(soap, &soap_tmp___gnvim2__CheckCustomizationResources, "-gnvim2:CheckCustomizationResources", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CheckCustomizationResourcesResponse)
		return soap_closesock(soap);
	gnvim2__CheckCustomizationResourcesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CheckCustomizationResourcesResponse.soap_get(soap, "gnvim2:CheckCustomizationResourcesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryConnectionInfo(const char *endpoint, const char *soap_action, gnvim2__QueryConnectionInfoRequestType *gnvim2__QueryConnectionInfo, _gnvim2__QueryConnectionInfoResponse &gnvim2__QueryConnectionInfoResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryConnectionInfo soap_tmp___gnvim2__QueryConnectionInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryConnectionInfo.gnvim2__QueryConnectionInfo = gnvim2__QueryConnectionInfo;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryConnectionInfo(soap, &soap_tmp___gnvim2__QueryConnectionInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryConnectionInfo(soap, &soap_tmp___gnvim2__QueryConnectionInfo, "-gnvim2:QueryConnectionInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryConnectionInfo(soap, &soap_tmp___gnvim2__QueryConnectionInfo, "-gnvim2:QueryConnectionInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryConnectionInfoResponse)
		return soap_closesock(soap);
	gnvim2__QueryConnectionInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryConnectionInfoResponse.soap_get(soap, "gnvim2:QueryConnectionInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryConnectionInfoViaSpec(const char *endpoint, const char *soap_action, gnvim2__QueryConnectionInfoViaSpecRequestType *gnvim2__QueryConnectionInfoViaSpec, _gnvim2__QueryConnectionInfoViaSpecResponse &gnvim2__QueryConnectionInfoViaSpecResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryConnectionInfoViaSpec soap_tmp___gnvim2__QueryConnectionInfoViaSpec;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryConnectionInfoViaSpec.gnvim2__QueryConnectionInfoViaSpec = gnvim2__QueryConnectionInfoViaSpec;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryConnectionInfoViaSpec(soap, &soap_tmp___gnvim2__QueryConnectionInfoViaSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryConnectionInfoViaSpec(soap, &soap_tmp___gnvim2__QueryConnectionInfoViaSpec, "-gnvim2:QueryConnectionInfoViaSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryConnectionInfoViaSpec(soap, &soap_tmp___gnvim2__QueryConnectionInfoViaSpec, "-gnvim2:QueryConnectionInfoViaSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryConnectionInfoViaSpecResponse)
		return soap_closesock(soap);
	gnvim2__QueryConnectionInfoViaSpecResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryConnectionInfoViaSpecResponse.soap_get(soap, "gnvim2:QueryConnectionInfoViaSpecResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::PowerOnMultiVM_USCORETask(const char *endpoint, const char *soap_action, gnvim2__PowerOnMultiVMRequestType *gnvim2__PowerOnMultiVM_USCORETask, _gnvim2__PowerOnMultiVM_USCORETaskResponse &gnvim2__PowerOnMultiVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__PowerOnMultiVM_USCORETask soap_tmp___gnvim2__PowerOnMultiVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__PowerOnMultiVM_USCORETask.gnvim2__PowerOnMultiVM_USCORETask = gnvim2__PowerOnMultiVM_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__PowerOnMultiVM_USCORETask(soap, &soap_tmp___gnvim2__PowerOnMultiVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__PowerOnMultiVM_USCORETask(soap, &soap_tmp___gnvim2__PowerOnMultiVM_USCORETask, "-gnvim2:PowerOnMultiVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__PowerOnMultiVM_USCORETask(soap, &soap_tmp___gnvim2__PowerOnMultiVM_USCORETask, "-gnvim2:PowerOnMultiVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__PowerOnMultiVM_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__PowerOnMultiVM_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__PowerOnMultiVM_USCORETaskResponse.soap_get(soap, "gnvim2:PowerOnMultiVM_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::queryDatacenterConfigOptionDescriptor(const char *endpoint, const char *soap_action, gnvim2__queryDatacenterConfigOptionDescriptorRequestType *gnvim2__queryDatacenterConfigOptionDescriptor, _gnvim2__queryDatacenterConfigOptionDescriptorResponse &gnvim2__queryDatacenterConfigOptionDescriptorResponse)
{	struct soap *soap = this;
	struct __gnvim2__queryDatacenterConfigOptionDescriptor soap_tmp___gnvim2__queryDatacenterConfigOptionDescriptor;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__queryDatacenterConfigOptionDescriptor.gnvim2__queryDatacenterConfigOptionDescriptor = gnvim2__queryDatacenterConfigOptionDescriptor;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__queryDatacenterConfigOptionDescriptor(soap, &soap_tmp___gnvim2__queryDatacenterConfigOptionDescriptor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__queryDatacenterConfigOptionDescriptor(soap, &soap_tmp___gnvim2__queryDatacenterConfigOptionDescriptor, "-gnvim2:queryDatacenterConfigOptionDescriptor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__queryDatacenterConfigOptionDescriptor(soap, &soap_tmp___gnvim2__queryDatacenterConfigOptionDescriptor, "-gnvim2:queryDatacenterConfigOptionDescriptor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__queryDatacenterConfigOptionDescriptorResponse)
		return soap_closesock(soap);
	gnvim2__queryDatacenterConfigOptionDescriptorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__queryDatacenterConfigOptionDescriptorResponse.soap_get(soap, "gnvim2:queryDatacenterConfigOptionDescriptorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureDatacenter_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ReconfigureDatacenterRequestType *gnvim2__ReconfigureDatacenter_USCORETask, _gnvim2__ReconfigureDatacenter_USCORETaskResponse &gnvim2__ReconfigureDatacenter_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReconfigureDatacenter_USCORETask soap_tmp___gnvim2__ReconfigureDatacenter_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReconfigureDatacenter_USCORETask.gnvim2__ReconfigureDatacenter_USCORETask = gnvim2__ReconfigureDatacenter_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReconfigureDatacenter_USCORETask(soap, &soap_tmp___gnvim2__ReconfigureDatacenter_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReconfigureDatacenter_USCORETask(soap, &soap_tmp___gnvim2__ReconfigureDatacenter_USCORETask, "-gnvim2:ReconfigureDatacenter_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReconfigureDatacenter_USCORETask(soap, &soap_tmp___gnvim2__ReconfigureDatacenter_USCORETask, "-gnvim2:ReconfigureDatacenter_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReconfigureDatacenter_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ReconfigureDatacenter_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReconfigureDatacenter_USCORETaskResponse.soap_get(soap, "gnvim2:ReconfigureDatacenter_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshDatastore(const char *endpoint, const char *soap_action, gnvim2__RefreshDatastoreRequestType *gnvim2__RefreshDatastore, _gnvim2__RefreshDatastoreResponse &gnvim2__RefreshDatastoreResponse)
{	struct soap *soap = this;
	struct __gnvim2__RefreshDatastore soap_tmp___gnvim2__RefreshDatastore;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RefreshDatastore.gnvim2__RefreshDatastore = gnvim2__RefreshDatastore;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RefreshDatastore(soap, &soap_tmp___gnvim2__RefreshDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RefreshDatastore(soap, &soap_tmp___gnvim2__RefreshDatastore, "-gnvim2:RefreshDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RefreshDatastore(soap, &soap_tmp___gnvim2__RefreshDatastore, "-gnvim2:RefreshDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RefreshDatastoreResponse)
		return soap_closesock(soap);
	gnvim2__RefreshDatastoreResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RefreshDatastoreResponse.soap_get(soap, "gnvim2:RefreshDatastoreResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshDatastoreStorageInfo(const char *endpoint, const char *soap_action, gnvim2__RefreshDatastoreStorageInfoRequestType *gnvim2__RefreshDatastoreStorageInfo, _gnvim2__RefreshDatastoreStorageInfoResponse &gnvim2__RefreshDatastoreStorageInfoResponse)
{	struct soap *soap = this;
	struct __gnvim2__RefreshDatastoreStorageInfo soap_tmp___gnvim2__RefreshDatastoreStorageInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RefreshDatastoreStorageInfo.gnvim2__RefreshDatastoreStorageInfo = gnvim2__RefreshDatastoreStorageInfo;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RefreshDatastoreStorageInfo(soap, &soap_tmp___gnvim2__RefreshDatastoreStorageInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RefreshDatastoreStorageInfo(soap, &soap_tmp___gnvim2__RefreshDatastoreStorageInfo, "-gnvim2:RefreshDatastoreStorageInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RefreshDatastoreStorageInfo(soap, &soap_tmp___gnvim2__RefreshDatastoreStorageInfo, "-gnvim2:RefreshDatastoreStorageInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RefreshDatastoreStorageInfoResponse)
		return soap_closesock(soap);
	gnvim2__RefreshDatastoreStorageInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RefreshDatastoreStorageInfoResponse.soap_get(soap, "gnvim2:RefreshDatastoreStorageInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateVirtualMachineFiles_USCORETask(const char *endpoint, const char *soap_action, gnvim2__UpdateVirtualMachineFilesRequestType *gnvim2__UpdateVirtualMachineFiles_USCORETask, _gnvim2__UpdateVirtualMachineFiles_USCORETaskResponse &gnvim2__UpdateVirtualMachineFiles_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateVirtualMachineFiles_USCORETask soap_tmp___gnvim2__UpdateVirtualMachineFiles_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateVirtualMachineFiles_USCORETask.gnvim2__UpdateVirtualMachineFiles_USCORETask = gnvim2__UpdateVirtualMachineFiles_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateVirtualMachineFiles_USCORETask(soap, &soap_tmp___gnvim2__UpdateVirtualMachineFiles_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateVirtualMachineFiles_USCORETask(soap, &soap_tmp___gnvim2__UpdateVirtualMachineFiles_USCORETask, "-gnvim2:UpdateVirtualMachineFiles_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateVirtualMachineFiles_USCORETask(soap, &soap_tmp___gnvim2__UpdateVirtualMachineFiles_USCORETask, "-gnvim2:UpdateVirtualMachineFiles_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateVirtualMachineFiles_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__UpdateVirtualMachineFiles_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateVirtualMachineFiles_USCORETaskResponse.soap_get(soap, "gnvim2:UpdateVirtualMachineFiles_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RenameDatastore(const char *endpoint, const char *soap_action, gnvim2__RenameDatastoreRequestType *gnvim2__RenameDatastore, _gnvim2__RenameDatastoreResponse &gnvim2__RenameDatastoreResponse)
{	struct soap *soap = this;
	struct __gnvim2__RenameDatastore soap_tmp___gnvim2__RenameDatastore;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RenameDatastore.gnvim2__RenameDatastore = gnvim2__RenameDatastore;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RenameDatastore(soap, &soap_tmp___gnvim2__RenameDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RenameDatastore(soap, &soap_tmp___gnvim2__RenameDatastore, "-gnvim2:RenameDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RenameDatastore(soap, &soap_tmp___gnvim2__RenameDatastore, "-gnvim2:RenameDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RenameDatastoreResponse)
		return soap_closesock(soap);
	gnvim2__RenameDatastoreResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RenameDatastoreResponse.soap_get(soap, "gnvim2:RenameDatastoreResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DestroyDatastore(const char *endpoint, const char *soap_action, gnvim2__DestroyDatastoreRequestType *gnvim2__DestroyDatastore, _gnvim2__DestroyDatastoreResponse &gnvim2__DestroyDatastoreResponse)
{	struct soap *soap = this;
	struct __gnvim2__DestroyDatastore soap_tmp___gnvim2__DestroyDatastore;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DestroyDatastore.gnvim2__DestroyDatastore = gnvim2__DestroyDatastore;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DestroyDatastore(soap, &soap_tmp___gnvim2__DestroyDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DestroyDatastore(soap, &soap_tmp___gnvim2__DestroyDatastore, "-gnvim2:DestroyDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DestroyDatastore(soap, &soap_tmp___gnvim2__DestroyDatastore, "-gnvim2:DestroyDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DestroyDatastoreResponse)
		return soap_closesock(soap);
	gnvim2__DestroyDatastoreResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DestroyDatastoreResponse.soap_get(soap, "gnvim2:DestroyDatastoreResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DatastoreEnterMaintenanceMode(const char *endpoint, const char *soap_action, gnvim2__DatastoreEnterMaintenanceModeRequestType *gnvim2__DatastoreEnterMaintenanceMode, _gnvim2__DatastoreEnterMaintenanceModeResponse &gnvim2__DatastoreEnterMaintenanceModeResponse)
{	struct soap *soap = this;
	struct __gnvim2__DatastoreEnterMaintenanceMode soap_tmp___gnvim2__DatastoreEnterMaintenanceMode;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DatastoreEnterMaintenanceMode.gnvim2__DatastoreEnterMaintenanceMode = gnvim2__DatastoreEnterMaintenanceMode;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DatastoreEnterMaintenanceMode(soap, &soap_tmp___gnvim2__DatastoreEnterMaintenanceMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DatastoreEnterMaintenanceMode(soap, &soap_tmp___gnvim2__DatastoreEnterMaintenanceMode, "-gnvim2:DatastoreEnterMaintenanceMode", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DatastoreEnterMaintenanceMode(soap, &soap_tmp___gnvim2__DatastoreEnterMaintenanceMode, "-gnvim2:DatastoreEnterMaintenanceMode", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DatastoreEnterMaintenanceModeResponse)
		return soap_closesock(soap);
	gnvim2__DatastoreEnterMaintenanceModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DatastoreEnterMaintenanceModeResponse.soap_get(soap, "gnvim2:DatastoreEnterMaintenanceModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DatastoreExitMaintenanceMode_USCORETask(const char *endpoint, const char *soap_action, gnvim2__DatastoreExitMaintenanceModeRequestType *gnvim2__DatastoreExitMaintenanceMode_USCORETask, _gnvim2__DatastoreExitMaintenanceMode_USCORETaskResponse &gnvim2__DatastoreExitMaintenanceMode_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__DatastoreExitMaintenanceMode_USCORETask soap_tmp___gnvim2__DatastoreExitMaintenanceMode_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DatastoreExitMaintenanceMode_USCORETask.gnvim2__DatastoreExitMaintenanceMode_USCORETask = gnvim2__DatastoreExitMaintenanceMode_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DatastoreExitMaintenanceMode_USCORETask(soap, &soap_tmp___gnvim2__DatastoreExitMaintenanceMode_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DatastoreExitMaintenanceMode_USCORETask(soap, &soap_tmp___gnvim2__DatastoreExitMaintenanceMode_USCORETask, "-gnvim2:DatastoreExitMaintenanceMode_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DatastoreExitMaintenanceMode_USCORETask(soap, &soap_tmp___gnvim2__DatastoreExitMaintenanceMode_USCORETask, "-gnvim2:DatastoreExitMaintenanceMode_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DatastoreExitMaintenanceMode_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__DatastoreExitMaintenanceMode_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DatastoreExitMaintenanceMode_USCORETaskResponse.soap_get(soap, "gnvim2:DatastoreExitMaintenanceMode_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateDirectory(const char *endpoint, const char *soap_action, gnvim2__CreateDirectoryRequestType *gnvim2__CreateDirectory, _gnvim2__CreateDirectoryResponse &gnvim2__CreateDirectoryResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateDirectory soap_tmp___gnvim2__CreateDirectory;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateDirectory.gnvim2__CreateDirectory = gnvim2__CreateDirectory;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateDirectory(soap, &soap_tmp___gnvim2__CreateDirectory);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateDirectory(soap, &soap_tmp___gnvim2__CreateDirectory, "-gnvim2:CreateDirectory", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateDirectory(soap, &soap_tmp___gnvim2__CreateDirectory, "-gnvim2:CreateDirectory", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateDirectoryResponse)
		return soap_closesock(soap);
	gnvim2__CreateDirectoryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateDirectoryResponse.soap_get(soap, "gnvim2:CreateDirectoryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeleteDirectory(const char *endpoint, const char *soap_action, gnvim2__DeleteDirectoryRequestType *gnvim2__DeleteDirectory, _gnvim2__DeleteDirectoryResponse &gnvim2__DeleteDirectoryResponse)
{	struct soap *soap = this;
	struct __gnvim2__DeleteDirectory soap_tmp___gnvim2__DeleteDirectory;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DeleteDirectory.gnvim2__DeleteDirectory = gnvim2__DeleteDirectory;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DeleteDirectory(soap, &soap_tmp___gnvim2__DeleteDirectory);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DeleteDirectory(soap, &soap_tmp___gnvim2__DeleteDirectory, "-gnvim2:DeleteDirectory", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DeleteDirectory(soap, &soap_tmp___gnvim2__DeleteDirectory, "-gnvim2:DeleteDirectory", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DeleteDirectoryResponse)
		return soap_closesock(soap);
	gnvim2__DeleteDirectoryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DeleteDirectoryResponse.soap_get(soap, "gnvim2:DeleteDirectoryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryDescriptions(const char *endpoint, const char *soap_action, gnvim2__QueryDescriptionsRequestType *gnvim2__QueryDescriptions, _gnvim2__QueryDescriptionsResponse &gnvim2__QueryDescriptionsResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryDescriptions soap_tmp___gnvim2__QueryDescriptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryDescriptions.gnvim2__QueryDescriptions = gnvim2__QueryDescriptions;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryDescriptions(soap, &soap_tmp___gnvim2__QueryDescriptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryDescriptions(soap, &soap_tmp___gnvim2__QueryDescriptions, "-gnvim2:QueryDescriptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryDescriptions(soap, &soap_tmp___gnvim2__QueryDescriptions, "-gnvim2:QueryDescriptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryDescriptionsResponse)
		return soap_closesock(soap);
	gnvim2__QueryDescriptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryDescriptionsResponse.soap_get(soap, "gnvim2:QueryDescriptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::BrowseDiagnosticLog(const char *endpoint, const char *soap_action, gnvim2__BrowseDiagnosticLogRequestType *gnvim2__BrowseDiagnosticLog, _gnvim2__BrowseDiagnosticLogResponse &gnvim2__BrowseDiagnosticLogResponse)
{	struct soap *soap = this;
	struct __gnvim2__BrowseDiagnosticLog soap_tmp___gnvim2__BrowseDiagnosticLog;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__BrowseDiagnosticLog.gnvim2__BrowseDiagnosticLog = gnvim2__BrowseDiagnosticLog;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__BrowseDiagnosticLog(soap, &soap_tmp___gnvim2__BrowseDiagnosticLog);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__BrowseDiagnosticLog(soap, &soap_tmp___gnvim2__BrowseDiagnosticLog, "-gnvim2:BrowseDiagnosticLog", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__BrowseDiagnosticLog(soap, &soap_tmp___gnvim2__BrowseDiagnosticLog, "-gnvim2:BrowseDiagnosticLog", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__BrowseDiagnosticLogResponse)
		return soap_closesock(soap);
	gnvim2__BrowseDiagnosticLogResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__BrowseDiagnosticLogResponse.soap_get(soap, "gnvim2:BrowseDiagnosticLogResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::GenerateLogBundles_USCORETask(const char *endpoint, const char *soap_action, gnvim2__GenerateLogBundlesRequestType *gnvim2__GenerateLogBundles_USCORETask, _gnvim2__GenerateLogBundles_USCORETaskResponse &gnvim2__GenerateLogBundles_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__GenerateLogBundles_USCORETask soap_tmp___gnvim2__GenerateLogBundles_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__GenerateLogBundles_USCORETask.gnvim2__GenerateLogBundles_USCORETask = gnvim2__GenerateLogBundles_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__GenerateLogBundles_USCORETask(soap, &soap_tmp___gnvim2__GenerateLogBundles_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__GenerateLogBundles_USCORETask(soap, &soap_tmp___gnvim2__GenerateLogBundles_USCORETask, "-gnvim2:GenerateLogBundles_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__GenerateLogBundles_USCORETask(soap, &soap_tmp___gnvim2__GenerateLogBundles_USCORETask, "-gnvim2:GenerateLogBundles_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__GenerateLogBundles_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__GenerateLogBundles_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__GenerateLogBundles_USCORETaskResponse.soap_get(soap, "gnvim2:GenerateLogBundles_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FetchDVPortKeys(const char *endpoint, const char *soap_action, gnvim2__FetchDVPortKeysRequestType *gnvim2__FetchDVPortKeys, _gnvim2__FetchDVPortKeysResponse &gnvim2__FetchDVPortKeysResponse)
{	struct soap *soap = this;
	struct __gnvim2__FetchDVPortKeys soap_tmp___gnvim2__FetchDVPortKeys;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__FetchDVPortKeys.gnvim2__FetchDVPortKeys = gnvim2__FetchDVPortKeys;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__FetchDVPortKeys(soap, &soap_tmp___gnvim2__FetchDVPortKeys);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__FetchDVPortKeys(soap, &soap_tmp___gnvim2__FetchDVPortKeys, "-gnvim2:FetchDVPortKeys", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__FetchDVPortKeys(soap, &soap_tmp___gnvim2__FetchDVPortKeys, "-gnvim2:FetchDVPortKeys", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__FetchDVPortKeysResponse)
		return soap_closesock(soap);
	gnvim2__FetchDVPortKeysResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__FetchDVPortKeysResponse.soap_get(soap, "gnvim2:FetchDVPortKeysResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FetchDVPorts(const char *endpoint, const char *soap_action, gnvim2__FetchDVPortsRequestType *gnvim2__FetchDVPorts, _gnvim2__FetchDVPortsResponse &gnvim2__FetchDVPortsResponse)
{	struct soap *soap = this;
	struct __gnvim2__FetchDVPorts soap_tmp___gnvim2__FetchDVPorts;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__FetchDVPorts.gnvim2__FetchDVPorts = gnvim2__FetchDVPorts;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__FetchDVPorts(soap, &soap_tmp___gnvim2__FetchDVPorts);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__FetchDVPorts(soap, &soap_tmp___gnvim2__FetchDVPorts, "-gnvim2:FetchDVPorts", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__FetchDVPorts(soap, &soap_tmp___gnvim2__FetchDVPorts, "-gnvim2:FetchDVPorts", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__FetchDVPortsResponse)
		return soap_closesock(soap);
	gnvim2__FetchDVPortsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__FetchDVPortsResponse.soap_get(soap, "gnvim2:FetchDVPortsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryUsedVlanIdInDvs(const char *endpoint, const char *soap_action, gnvim2__QueryUsedVlanIdInDvsRequestType *gnvim2__QueryUsedVlanIdInDvs, _gnvim2__QueryUsedVlanIdInDvsResponse &gnvim2__QueryUsedVlanIdInDvsResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryUsedVlanIdInDvs soap_tmp___gnvim2__QueryUsedVlanIdInDvs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryUsedVlanIdInDvs.gnvim2__QueryUsedVlanIdInDvs = gnvim2__QueryUsedVlanIdInDvs;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryUsedVlanIdInDvs(soap, &soap_tmp___gnvim2__QueryUsedVlanIdInDvs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryUsedVlanIdInDvs(soap, &soap_tmp___gnvim2__QueryUsedVlanIdInDvs, "-gnvim2:QueryUsedVlanIdInDvs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryUsedVlanIdInDvs(soap, &soap_tmp___gnvim2__QueryUsedVlanIdInDvs, "-gnvim2:QueryUsedVlanIdInDvs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryUsedVlanIdInDvsResponse)
		return soap_closesock(soap);
	gnvim2__QueryUsedVlanIdInDvsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryUsedVlanIdInDvsResponse.soap_get(soap, "gnvim2:QueryUsedVlanIdInDvsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureDvs_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ReconfigureDvsRequestType *gnvim2__ReconfigureDvs_USCORETask, _gnvim2__ReconfigureDvs_USCORETaskResponse &gnvim2__ReconfigureDvs_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReconfigureDvs_USCORETask soap_tmp___gnvim2__ReconfigureDvs_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReconfigureDvs_USCORETask.gnvim2__ReconfigureDvs_USCORETask = gnvim2__ReconfigureDvs_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReconfigureDvs_USCORETask(soap, &soap_tmp___gnvim2__ReconfigureDvs_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReconfigureDvs_USCORETask(soap, &soap_tmp___gnvim2__ReconfigureDvs_USCORETask, "-gnvim2:ReconfigureDvs_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReconfigureDvs_USCORETask(soap, &soap_tmp___gnvim2__ReconfigureDvs_USCORETask, "-gnvim2:ReconfigureDvs_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReconfigureDvs_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ReconfigureDvs_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReconfigureDvs_USCORETaskResponse.soap_get(soap, "gnvim2:ReconfigureDvs_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::PerformDvsProductSpecOperation_USCORETask(const char *endpoint, const char *soap_action, gnvim2__PerformDvsProductSpecOperationRequestType *gnvim2__PerformDvsProductSpecOperation_USCORETask, _gnvim2__PerformDvsProductSpecOperation_USCORETaskResponse &gnvim2__PerformDvsProductSpecOperation_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__PerformDvsProductSpecOperation_USCORETask soap_tmp___gnvim2__PerformDvsProductSpecOperation_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__PerformDvsProductSpecOperation_USCORETask.gnvim2__PerformDvsProductSpecOperation_USCORETask = gnvim2__PerformDvsProductSpecOperation_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__PerformDvsProductSpecOperation_USCORETask(soap, &soap_tmp___gnvim2__PerformDvsProductSpecOperation_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__PerformDvsProductSpecOperation_USCORETask(soap, &soap_tmp___gnvim2__PerformDvsProductSpecOperation_USCORETask, "-gnvim2:PerformDvsProductSpecOperation_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__PerformDvsProductSpecOperation_USCORETask(soap, &soap_tmp___gnvim2__PerformDvsProductSpecOperation_USCORETask, "-gnvim2:PerformDvsProductSpecOperation_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__PerformDvsProductSpecOperation_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__PerformDvsProductSpecOperation_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__PerformDvsProductSpecOperation_USCORETaskResponse.soap_get(soap, "gnvim2:PerformDvsProductSpecOperation_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MergeDvs_USCORETask(const char *endpoint, const char *soap_action, gnvim2__MergeDvsRequestType *gnvim2__MergeDvs_USCORETask, _gnvim2__MergeDvs_USCORETaskResponse &gnvim2__MergeDvs_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__MergeDvs_USCORETask soap_tmp___gnvim2__MergeDvs_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MergeDvs_USCORETask.gnvim2__MergeDvs_USCORETask = gnvim2__MergeDvs_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MergeDvs_USCORETask(soap, &soap_tmp___gnvim2__MergeDvs_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MergeDvs_USCORETask(soap, &soap_tmp___gnvim2__MergeDvs_USCORETask, "-gnvim2:MergeDvs_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MergeDvs_USCORETask(soap, &soap_tmp___gnvim2__MergeDvs_USCORETask, "-gnvim2:MergeDvs_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MergeDvs_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__MergeDvs_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MergeDvs_USCORETaskResponse.soap_get(soap, "gnvim2:MergeDvs_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddDVPortgroup_USCORETask(const char *endpoint, const char *soap_action, gnvim2__AddDVPortgroupRequestType *gnvim2__AddDVPortgroup_USCORETask, _gnvim2__AddDVPortgroup_USCORETaskResponse &gnvim2__AddDVPortgroup_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__AddDVPortgroup_USCORETask soap_tmp___gnvim2__AddDVPortgroup_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AddDVPortgroup_USCORETask.gnvim2__AddDVPortgroup_USCORETask = gnvim2__AddDVPortgroup_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AddDVPortgroup_USCORETask(soap, &soap_tmp___gnvim2__AddDVPortgroup_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AddDVPortgroup_USCORETask(soap, &soap_tmp___gnvim2__AddDVPortgroup_USCORETask, "-gnvim2:AddDVPortgroup_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AddDVPortgroup_USCORETask(soap, &soap_tmp___gnvim2__AddDVPortgroup_USCORETask, "-gnvim2:AddDVPortgroup_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AddDVPortgroup_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__AddDVPortgroup_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AddDVPortgroup_USCORETaskResponse.soap_get(soap, "gnvim2:AddDVPortgroup_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MoveDVPort_USCORETask(const char *endpoint, const char *soap_action, gnvim2__MoveDVPortRequestType *gnvim2__MoveDVPort_USCORETask, _gnvim2__MoveDVPort_USCORETaskResponse &gnvim2__MoveDVPort_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__MoveDVPort_USCORETask soap_tmp___gnvim2__MoveDVPort_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MoveDVPort_USCORETask.gnvim2__MoveDVPort_USCORETask = gnvim2__MoveDVPort_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MoveDVPort_USCORETask(soap, &soap_tmp___gnvim2__MoveDVPort_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MoveDVPort_USCORETask(soap, &soap_tmp___gnvim2__MoveDVPort_USCORETask, "-gnvim2:MoveDVPort_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MoveDVPort_USCORETask(soap, &soap_tmp___gnvim2__MoveDVPort_USCORETask, "-gnvim2:MoveDVPort_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MoveDVPort_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__MoveDVPort_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MoveDVPort_USCORETaskResponse.soap_get(soap, "gnvim2:MoveDVPort_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateDvsCapability(const char *endpoint, const char *soap_action, gnvim2__UpdateDvsCapabilityRequestType *gnvim2__UpdateDvsCapability, _gnvim2__UpdateDvsCapabilityResponse &gnvim2__UpdateDvsCapabilityResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateDvsCapability soap_tmp___gnvim2__UpdateDvsCapability;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateDvsCapability.gnvim2__UpdateDvsCapability = gnvim2__UpdateDvsCapability;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateDvsCapability(soap, &soap_tmp___gnvim2__UpdateDvsCapability);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateDvsCapability(soap, &soap_tmp___gnvim2__UpdateDvsCapability, "-gnvim2:UpdateDvsCapability", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateDvsCapability(soap, &soap_tmp___gnvim2__UpdateDvsCapability, "-gnvim2:UpdateDvsCapability", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateDvsCapabilityResponse)
		return soap_closesock(soap);
	gnvim2__UpdateDvsCapabilityResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateDvsCapabilityResponse.soap_get(soap, "gnvim2:UpdateDvsCapabilityResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureDVPort_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ReconfigureDVPortRequestType *gnvim2__ReconfigureDVPort_USCORETask, _gnvim2__ReconfigureDVPort_USCORETaskResponse &gnvim2__ReconfigureDVPort_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReconfigureDVPort_USCORETask soap_tmp___gnvim2__ReconfigureDVPort_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReconfigureDVPort_USCORETask.gnvim2__ReconfigureDVPort_USCORETask = gnvim2__ReconfigureDVPort_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReconfigureDVPort_USCORETask(soap, &soap_tmp___gnvim2__ReconfigureDVPort_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReconfigureDVPort_USCORETask(soap, &soap_tmp___gnvim2__ReconfigureDVPort_USCORETask, "-gnvim2:ReconfigureDVPort_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReconfigureDVPort_USCORETask(soap, &soap_tmp___gnvim2__ReconfigureDVPort_USCORETask, "-gnvim2:ReconfigureDVPort_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReconfigureDVPort_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ReconfigureDVPort_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReconfigureDVPort_USCORETaskResponse.soap_get(soap, "gnvim2:ReconfigureDVPort_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshDVPortState(const char *endpoint, const char *soap_action, gnvim2__RefreshDVPortStateRequestType *gnvim2__RefreshDVPortState, _gnvim2__RefreshDVPortStateResponse &gnvim2__RefreshDVPortStateResponse)
{	struct soap *soap = this;
	struct __gnvim2__RefreshDVPortState soap_tmp___gnvim2__RefreshDVPortState;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RefreshDVPortState.gnvim2__RefreshDVPortState = gnvim2__RefreshDVPortState;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RefreshDVPortState(soap, &soap_tmp___gnvim2__RefreshDVPortState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RefreshDVPortState(soap, &soap_tmp___gnvim2__RefreshDVPortState, "-gnvim2:RefreshDVPortState", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RefreshDVPortState(soap, &soap_tmp___gnvim2__RefreshDVPortState, "-gnvim2:RefreshDVPortState", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RefreshDVPortStateResponse)
		return soap_closesock(soap);
	gnvim2__RefreshDVPortStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RefreshDVPortStateResponse.soap_get(soap, "gnvim2:RefreshDVPortStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RectifyDvsHost_USCORETask(const char *endpoint, const char *soap_action, gnvim2__RectifyDvsHostRequestType *gnvim2__RectifyDvsHost_USCORETask, _gnvim2__RectifyDvsHost_USCORETaskResponse &gnvim2__RectifyDvsHost_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__RectifyDvsHost_USCORETask soap_tmp___gnvim2__RectifyDvsHost_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RectifyDvsHost_USCORETask.gnvim2__RectifyDvsHost_USCORETask = gnvim2__RectifyDvsHost_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RectifyDvsHost_USCORETask(soap, &soap_tmp___gnvim2__RectifyDvsHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RectifyDvsHost_USCORETask(soap, &soap_tmp___gnvim2__RectifyDvsHost_USCORETask, "-gnvim2:RectifyDvsHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RectifyDvsHost_USCORETask(soap, &soap_tmp___gnvim2__RectifyDvsHost_USCORETask, "-gnvim2:RectifyDvsHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RectifyDvsHost_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__RectifyDvsHost_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RectifyDvsHost_USCORETaskResponse.soap_get(soap, "gnvim2:RectifyDvsHost_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateNetworkResourcePool(const char *endpoint, const char *soap_action, gnvim2__UpdateNetworkResourcePoolRequestType *gnvim2__UpdateNetworkResourcePool, _gnvim2__UpdateNetworkResourcePoolResponse &gnvim2__UpdateNetworkResourcePoolResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateNetworkResourcePool soap_tmp___gnvim2__UpdateNetworkResourcePool;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateNetworkResourcePool.gnvim2__UpdateNetworkResourcePool = gnvim2__UpdateNetworkResourcePool;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateNetworkResourcePool(soap, &soap_tmp___gnvim2__UpdateNetworkResourcePool);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateNetworkResourcePool(soap, &soap_tmp___gnvim2__UpdateNetworkResourcePool, "-gnvim2:UpdateNetworkResourcePool", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateNetworkResourcePool(soap, &soap_tmp___gnvim2__UpdateNetworkResourcePool, "-gnvim2:UpdateNetworkResourcePool", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateNetworkResourcePoolResponse)
		return soap_closesock(soap);
	gnvim2__UpdateNetworkResourcePoolResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateNetworkResourcePoolResponse.soap_get(soap, "gnvim2:UpdateNetworkResourcePoolResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddNetworkResourcePool(const char *endpoint, const char *soap_action, gnvim2__AddNetworkResourcePoolRequestType *gnvim2__AddNetworkResourcePool, _gnvim2__AddNetworkResourcePoolResponse &gnvim2__AddNetworkResourcePoolResponse)
{	struct soap *soap = this;
	struct __gnvim2__AddNetworkResourcePool soap_tmp___gnvim2__AddNetworkResourcePool;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AddNetworkResourcePool.gnvim2__AddNetworkResourcePool = gnvim2__AddNetworkResourcePool;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AddNetworkResourcePool(soap, &soap_tmp___gnvim2__AddNetworkResourcePool);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AddNetworkResourcePool(soap, &soap_tmp___gnvim2__AddNetworkResourcePool, "-gnvim2:AddNetworkResourcePool", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AddNetworkResourcePool(soap, &soap_tmp___gnvim2__AddNetworkResourcePool, "-gnvim2:AddNetworkResourcePool", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AddNetworkResourcePoolResponse)
		return soap_closesock(soap);
	gnvim2__AddNetworkResourcePoolResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AddNetworkResourcePoolResponse.soap_get(soap, "gnvim2:AddNetworkResourcePoolResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveNetworkResourcePool(const char *endpoint, const char *soap_action, gnvim2__RemoveNetworkResourcePoolRequestType *gnvim2__RemoveNetworkResourcePool, _gnvim2__RemoveNetworkResourcePoolResponse &gnvim2__RemoveNetworkResourcePoolResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveNetworkResourcePool soap_tmp___gnvim2__RemoveNetworkResourcePool;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveNetworkResourcePool.gnvim2__RemoveNetworkResourcePool = gnvim2__RemoveNetworkResourcePool;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveNetworkResourcePool(soap, &soap_tmp___gnvim2__RemoveNetworkResourcePool);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveNetworkResourcePool(soap, &soap_tmp___gnvim2__RemoveNetworkResourcePool, "-gnvim2:RemoveNetworkResourcePool", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveNetworkResourcePool(soap, &soap_tmp___gnvim2__RemoveNetworkResourcePool, "-gnvim2:RemoveNetworkResourcePool", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveNetworkResourcePoolResponse)
		return soap_closesock(soap);
	gnvim2__RemoveNetworkResourcePoolResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveNetworkResourcePoolResponse.soap_get(soap, "gnvim2:RemoveNetworkResourcePoolResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DvsReconfigureVmVnicNetworkResourcePool_USCORETask(const char *endpoint, const char *soap_action, gnvim2__DvsReconfigureVmVnicNetworkResourcePoolRequestType *gnvim2__DvsReconfigureVmVnicNetworkResourcePool_USCORETask, _gnvim2__DvsReconfigureVmVnicNetworkResourcePool_USCORETaskResponse &gnvim2__DvsReconfigureVmVnicNetworkResourcePool_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__DvsReconfigureVmVnicNetworkResourcePool_USCORETask soap_tmp___gnvim2__DvsReconfigureVmVnicNetworkResourcePool_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DvsReconfigureVmVnicNetworkResourcePool_USCORETask.gnvim2__DvsReconfigureVmVnicNetworkResourcePool_USCORETask = gnvim2__DvsReconfigureVmVnicNetworkResourcePool_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DvsReconfigureVmVnicNetworkResourcePool_USCORETask(soap, &soap_tmp___gnvim2__DvsReconfigureVmVnicNetworkResourcePool_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DvsReconfigureVmVnicNetworkResourcePool_USCORETask(soap, &soap_tmp___gnvim2__DvsReconfigureVmVnicNetworkResourcePool_USCORETask, "-gnvim2:DvsReconfigureVmVnicNetworkResourcePool_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DvsReconfigureVmVnicNetworkResourcePool_USCORETask(soap, &soap_tmp___gnvim2__DvsReconfigureVmVnicNetworkResourcePool_USCORETask, "-gnvim2:DvsReconfigureVmVnicNetworkResourcePool_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DvsReconfigureVmVnicNetworkResourcePool_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__DvsReconfigureVmVnicNetworkResourcePool_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DvsReconfigureVmVnicNetworkResourcePool_USCORETaskResponse.soap_get(soap, "gnvim2:DvsReconfigureVmVnicNetworkResourcePool_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EnableNetworkResourceManagement(const char *endpoint, const char *soap_action, gnvim2__EnableNetworkResourceManagementRequestType *gnvim2__EnableNetworkResourceManagement, _gnvim2__EnableNetworkResourceManagementResponse &gnvim2__EnableNetworkResourceManagementResponse)
{	struct soap *soap = this;
	struct __gnvim2__EnableNetworkResourceManagement soap_tmp___gnvim2__EnableNetworkResourceManagement;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__EnableNetworkResourceManagement.gnvim2__EnableNetworkResourceManagement = gnvim2__EnableNetworkResourceManagement;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__EnableNetworkResourceManagement(soap, &soap_tmp___gnvim2__EnableNetworkResourceManagement);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__EnableNetworkResourceManagement(soap, &soap_tmp___gnvim2__EnableNetworkResourceManagement, "-gnvim2:EnableNetworkResourceManagement", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__EnableNetworkResourceManagement(soap, &soap_tmp___gnvim2__EnableNetworkResourceManagement, "-gnvim2:EnableNetworkResourceManagement", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__EnableNetworkResourceManagementResponse)
		return soap_closesock(soap);
	gnvim2__EnableNetworkResourceManagementResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__EnableNetworkResourceManagementResponse.soap_get(soap, "gnvim2:EnableNetworkResourceManagementResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DVSRollback_USCORETask(const char *endpoint, const char *soap_action, gnvim2__DVSRollbackRequestType *gnvim2__DVSRollback_USCORETask, _gnvim2__DVSRollback_USCORETaskResponse &gnvim2__DVSRollback_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__DVSRollback_USCORETask soap_tmp___gnvim2__DVSRollback_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DVSRollback_USCORETask.gnvim2__DVSRollback_USCORETask = gnvim2__DVSRollback_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DVSRollback_USCORETask(soap, &soap_tmp___gnvim2__DVSRollback_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DVSRollback_USCORETask(soap, &soap_tmp___gnvim2__DVSRollback_USCORETask, "-gnvim2:DVSRollback_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DVSRollback_USCORETask(soap, &soap_tmp___gnvim2__DVSRollback_USCORETask, "-gnvim2:DVSRollback_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DVSRollback_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__DVSRollback_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DVSRollback_USCORETaskResponse.soap_get(soap, "gnvim2:DVSRollback_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateDVPortgroup_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CreateDVPortgroupRequestType *gnvim2__CreateDVPortgroup_USCORETask, _gnvim2__CreateDVPortgroup_USCORETaskResponse &gnvim2__CreateDVPortgroup_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateDVPortgroup_USCORETask soap_tmp___gnvim2__CreateDVPortgroup_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateDVPortgroup_USCORETask.gnvim2__CreateDVPortgroup_USCORETask = gnvim2__CreateDVPortgroup_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateDVPortgroup_USCORETask(soap, &soap_tmp___gnvim2__CreateDVPortgroup_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateDVPortgroup_USCORETask(soap, &soap_tmp___gnvim2__CreateDVPortgroup_USCORETask, "-gnvim2:CreateDVPortgroup_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateDVPortgroup_USCORETask(soap, &soap_tmp___gnvim2__CreateDVPortgroup_USCORETask, "-gnvim2:CreateDVPortgroup_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateDVPortgroup_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CreateDVPortgroup_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateDVPortgroup_USCORETaskResponse.soap_get(soap, "gnvim2:CreateDVPortgroup_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateDVSHealthCheckConfig_USCORETask(const char *endpoint, const char *soap_action, gnvim2__UpdateDVSHealthCheckConfigRequestType *gnvim2__UpdateDVSHealthCheckConfig_USCORETask, _gnvim2__UpdateDVSHealthCheckConfig_USCORETaskResponse &gnvim2__UpdateDVSHealthCheckConfig_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateDVSHealthCheckConfig_USCORETask soap_tmp___gnvim2__UpdateDVSHealthCheckConfig_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateDVSHealthCheckConfig_USCORETask.gnvim2__UpdateDVSHealthCheckConfig_USCORETask = gnvim2__UpdateDVSHealthCheckConfig_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateDVSHealthCheckConfig_USCORETask(soap, &soap_tmp___gnvim2__UpdateDVSHealthCheckConfig_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateDVSHealthCheckConfig_USCORETask(soap, &soap_tmp___gnvim2__UpdateDVSHealthCheckConfig_USCORETask, "-gnvim2:UpdateDVSHealthCheckConfig_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateDVSHealthCheckConfig_USCORETask(soap, &soap_tmp___gnvim2__UpdateDVSHealthCheckConfig_USCORETask, "-gnvim2:UpdateDVSHealthCheckConfig_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateDVSHealthCheckConfig_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__UpdateDVSHealthCheckConfig_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateDVSHealthCheckConfig_USCORETaskResponse.soap_get(soap, "gnvim2:UpdateDVSHealthCheckConfig_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::LookupDvPortGroup(const char *endpoint, const char *soap_action, gnvim2__LookupDvPortGroupRequestType *gnvim2__LookupDvPortGroup, _gnvim2__LookupDvPortGroupResponse &gnvim2__LookupDvPortGroupResponse)
{	struct soap *soap = this;
	struct __gnvim2__LookupDvPortGroup soap_tmp___gnvim2__LookupDvPortGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__LookupDvPortGroup.gnvim2__LookupDvPortGroup = gnvim2__LookupDvPortGroup;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__LookupDvPortGroup(soap, &soap_tmp___gnvim2__LookupDvPortGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__LookupDvPortGroup(soap, &soap_tmp___gnvim2__LookupDvPortGroup, "-gnvim2:LookupDvPortGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__LookupDvPortGroup(soap, &soap_tmp___gnvim2__LookupDvPortGroup, "-gnvim2:LookupDvPortGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__LookupDvPortGroupResponse)
		return soap_closesock(soap);
	gnvim2__LookupDvPortGroupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__LookupDvPortGroupResponse.soap_get(soap, "gnvim2:LookupDvPortGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryConfigOptionDescriptor(const char *endpoint, const char *soap_action, gnvim2__QueryConfigOptionDescriptorRequestType *gnvim2__QueryConfigOptionDescriptor, _gnvim2__QueryConfigOptionDescriptorResponse &gnvim2__QueryConfigOptionDescriptorResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryConfigOptionDescriptor soap_tmp___gnvim2__QueryConfigOptionDescriptor;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryConfigOptionDescriptor.gnvim2__QueryConfigOptionDescriptor = gnvim2__QueryConfigOptionDescriptor;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryConfigOptionDescriptor(soap, &soap_tmp___gnvim2__QueryConfigOptionDescriptor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryConfigOptionDescriptor(soap, &soap_tmp___gnvim2__QueryConfigOptionDescriptor, "-gnvim2:QueryConfigOptionDescriptor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryConfigOptionDescriptor(soap, &soap_tmp___gnvim2__QueryConfigOptionDescriptor, "-gnvim2:QueryConfigOptionDescriptor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryConfigOptionDescriptorResponse)
		return soap_closesock(soap);
	gnvim2__QueryConfigOptionDescriptorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryConfigOptionDescriptorResponse.soap_get(soap, "gnvim2:QueryConfigOptionDescriptorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryConfigOption(const char *endpoint, const char *soap_action, gnvim2__QueryConfigOptionRequestType *gnvim2__QueryConfigOption, _gnvim2__QueryConfigOptionResponse &gnvim2__QueryConfigOptionResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryConfigOption soap_tmp___gnvim2__QueryConfigOption;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryConfigOption.gnvim2__QueryConfigOption = gnvim2__QueryConfigOption;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryConfigOption(soap, &soap_tmp___gnvim2__QueryConfigOption);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryConfigOption(soap, &soap_tmp___gnvim2__QueryConfigOption, "-gnvim2:QueryConfigOption", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryConfigOption(soap, &soap_tmp___gnvim2__QueryConfigOption, "-gnvim2:QueryConfigOption", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryConfigOptionResponse)
		return soap_closesock(soap);
	gnvim2__QueryConfigOptionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryConfigOptionResponse.soap_get(soap, "gnvim2:QueryConfigOptionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryConfigOptionEx(const char *endpoint, const char *soap_action, gnvim2__QueryConfigOptionExRequestType *gnvim2__QueryConfigOptionEx, _gnvim2__QueryConfigOptionExResponse &gnvim2__QueryConfigOptionExResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryConfigOptionEx soap_tmp___gnvim2__QueryConfigOptionEx;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryConfigOptionEx.gnvim2__QueryConfigOptionEx = gnvim2__QueryConfigOptionEx;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryConfigOptionEx(soap, &soap_tmp___gnvim2__QueryConfigOptionEx);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryConfigOptionEx(soap, &soap_tmp___gnvim2__QueryConfigOptionEx, "-gnvim2:QueryConfigOptionEx", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryConfigOptionEx(soap, &soap_tmp___gnvim2__QueryConfigOptionEx, "-gnvim2:QueryConfigOptionEx", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryConfigOptionExResponse)
		return soap_closesock(soap);
	gnvim2__QueryConfigOptionExResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryConfigOptionExResponse.soap_get(soap, "gnvim2:QueryConfigOptionExResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryConfigTarget(const char *endpoint, const char *soap_action, gnvim2__QueryConfigTargetRequestType *gnvim2__QueryConfigTarget, _gnvim2__QueryConfigTargetResponse &gnvim2__QueryConfigTargetResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryConfigTarget soap_tmp___gnvim2__QueryConfigTarget;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryConfigTarget.gnvim2__QueryConfigTarget = gnvim2__QueryConfigTarget;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryConfigTarget(soap, &soap_tmp___gnvim2__QueryConfigTarget);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryConfigTarget(soap, &soap_tmp___gnvim2__QueryConfigTarget, "-gnvim2:QueryConfigTarget", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryConfigTarget(soap, &soap_tmp___gnvim2__QueryConfigTarget, "-gnvim2:QueryConfigTarget", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryConfigTargetResponse)
		return soap_closesock(soap);
	gnvim2__QueryConfigTargetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryConfigTargetResponse.soap_get(soap, "gnvim2:QueryConfigTargetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryTargetCapabilities(const char *endpoint, const char *soap_action, gnvim2__QueryTargetCapabilitiesRequestType *gnvim2__QueryTargetCapabilities, _gnvim2__QueryTargetCapabilitiesResponse &gnvim2__QueryTargetCapabilitiesResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryTargetCapabilities soap_tmp___gnvim2__QueryTargetCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryTargetCapabilities.gnvim2__QueryTargetCapabilities = gnvim2__QueryTargetCapabilities;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryTargetCapabilities(soap, &soap_tmp___gnvim2__QueryTargetCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryTargetCapabilities(soap, &soap_tmp___gnvim2__QueryTargetCapabilities, "-gnvim2:QueryTargetCapabilities", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryTargetCapabilities(soap, &soap_tmp___gnvim2__QueryTargetCapabilities, "-gnvim2:QueryTargetCapabilities", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryTargetCapabilitiesResponse)
		return soap_closesock(soap);
	gnvim2__QueryTargetCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryTargetCapabilitiesResponse.soap_get(soap, "gnvim2:QueryTargetCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::setCustomValue(const char *endpoint, const char *soap_action, gnvim2__setCustomValueRequestType *gnvim2__setCustomValue, _gnvim2__setCustomValueResponse &gnvim2__setCustomValueResponse)
{	struct soap *soap = this;
	struct __gnvim2__setCustomValue soap_tmp___gnvim2__setCustomValue;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__setCustomValue.gnvim2__setCustomValue = gnvim2__setCustomValue;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__setCustomValue(soap, &soap_tmp___gnvim2__setCustomValue);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__setCustomValue(soap, &soap_tmp___gnvim2__setCustomValue, "-gnvim2:setCustomValue", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__setCustomValue(soap, &soap_tmp___gnvim2__setCustomValue, "-gnvim2:setCustomValue", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__setCustomValueResponse)
		return soap_closesock(soap);
	gnvim2__setCustomValueResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__setCustomValueResponse.soap_get(soap, "gnvim2:setCustomValueResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UnregisterExtension(const char *endpoint, const char *soap_action, gnvim2__UnregisterExtensionRequestType *gnvim2__UnregisterExtension, _gnvim2__UnregisterExtensionResponse &gnvim2__UnregisterExtensionResponse)
{	struct soap *soap = this;
	struct __gnvim2__UnregisterExtension soap_tmp___gnvim2__UnregisterExtension;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UnregisterExtension.gnvim2__UnregisterExtension = gnvim2__UnregisterExtension;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UnregisterExtension(soap, &soap_tmp___gnvim2__UnregisterExtension);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UnregisterExtension(soap, &soap_tmp___gnvim2__UnregisterExtension, "-gnvim2:UnregisterExtension", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UnregisterExtension(soap, &soap_tmp___gnvim2__UnregisterExtension, "-gnvim2:UnregisterExtension", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UnregisterExtensionResponse)
		return soap_closesock(soap);
	gnvim2__UnregisterExtensionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UnregisterExtensionResponse.soap_get(soap, "gnvim2:UnregisterExtensionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FindExtension(const char *endpoint, const char *soap_action, gnvim2__FindExtensionRequestType *gnvim2__FindExtension, _gnvim2__FindExtensionResponse &gnvim2__FindExtensionResponse)
{	struct soap *soap = this;
	struct __gnvim2__FindExtension soap_tmp___gnvim2__FindExtension;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__FindExtension.gnvim2__FindExtension = gnvim2__FindExtension;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__FindExtension(soap, &soap_tmp___gnvim2__FindExtension);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__FindExtension(soap, &soap_tmp___gnvim2__FindExtension, "-gnvim2:FindExtension", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__FindExtension(soap, &soap_tmp___gnvim2__FindExtension, "-gnvim2:FindExtension", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__FindExtensionResponse)
		return soap_closesock(soap);
	gnvim2__FindExtensionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__FindExtensionResponse.soap_get(soap, "gnvim2:FindExtensionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RegisterExtension(const char *endpoint, const char *soap_action, gnvim2__RegisterExtensionRequestType *gnvim2__RegisterExtension, _gnvim2__RegisterExtensionResponse &gnvim2__RegisterExtensionResponse)
{	struct soap *soap = this;
	struct __gnvim2__RegisterExtension soap_tmp___gnvim2__RegisterExtension;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RegisterExtension.gnvim2__RegisterExtension = gnvim2__RegisterExtension;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RegisterExtension(soap, &soap_tmp___gnvim2__RegisterExtension);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RegisterExtension(soap, &soap_tmp___gnvim2__RegisterExtension, "-gnvim2:RegisterExtension", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RegisterExtension(soap, &soap_tmp___gnvim2__RegisterExtension, "-gnvim2:RegisterExtension", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RegisterExtensionResponse)
		return soap_closesock(soap);
	gnvim2__RegisterExtensionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RegisterExtensionResponse.soap_get(soap, "gnvim2:RegisterExtensionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateExtension(const char *endpoint, const char *soap_action, gnvim2__UpdateExtensionRequestType *gnvim2__UpdateExtension, _gnvim2__UpdateExtensionResponse &gnvim2__UpdateExtensionResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateExtension soap_tmp___gnvim2__UpdateExtension;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateExtension.gnvim2__UpdateExtension = gnvim2__UpdateExtension;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateExtension(soap, &soap_tmp___gnvim2__UpdateExtension);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateExtension(soap, &soap_tmp___gnvim2__UpdateExtension, "-gnvim2:UpdateExtension", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateExtension(soap, &soap_tmp___gnvim2__UpdateExtension, "-gnvim2:UpdateExtension", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateExtensionResponse)
		return soap_closesock(soap);
	gnvim2__UpdateExtensionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateExtensionResponse.soap_get(soap, "gnvim2:UpdateExtensionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::GetPublicKey(const char *endpoint, const char *soap_action, gnvim2__GetPublicKeyRequestType *gnvim2__GetPublicKey, _gnvim2__GetPublicKeyResponse &gnvim2__GetPublicKeyResponse)
{	struct soap *soap = this;
	struct __gnvim2__GetPublicKey soap_tmp___gnvim2__GetPublicKey;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__GetPublicKey.gnvim2__GetPublicKey = gnvim2__GetPublicKey;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__GetPublicKey(soap, &soap_tmp___gnvim2__GetPublicKey);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__GetPublicKey(soap, &soap_tmp___gnvim2__GetPublicKey, "-gnvim2:GetPublicKey", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__GetPublicKey(soap, &soap_tmp___gnvim2__GetPublicKey, "-gnvim2:GetPublicKey", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__GetPublicKeyResponse)
		return soap_closesock(soap);
	gnvim2__GetPublicKeyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__GetPublicKeyResponse.soap_get(soap, "gnvim2:GetPublicKeyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetPublicKey(const char *endpoint, const char *soap_action, gnvim2__SetPublicKeyRequestType *gnvim2__SetPublicKey, _gnvim2__SetPublicKeyResponse &gnvim2__SetPublicKeyResponse)
{	struct soap *soap = this;
	struct __gnvim2__SetPublicKey soap_tmp___gnvim2__SetPublicKey;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SetPublicKey.gnvim2__SetPublicKey = gnvim2__SetPublicKey;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SetPublicKey(soap, &soap_tmp___gnvim2__SetPublicKey);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SetPublicKey(soap, &soap_tmp___gnvim2__SetPublicKey, "-gnvim2:SetPublicKey", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SetPublicKey(soap, &soap_tmp___gnvim2__SetPublicKey, "-gnvim2:SetPublicKey", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SetPublicKeyResponse)
		return soap_closesock(soap);
	gnvim2__SetPublicKeyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SetPublicKeyResponse.soap_get(soap, "gnvim2:SetPublicKeyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetExtensionCertificate(const char *endpoint, const char *soap_action, gnvim2__SetExtensionCertificateRequestType *gnvim2__SetExtensionCertificate, _gnvim2__SetExtensionCertificateResponse &gnvim2__SetExtensionCertificateResponse)
{	struct soap *soap = this;
	struct __gnvim2__SetExtensionCertificate soap_tmp___gnvim2__SetExtensionCertificate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SetExtensionCertificate.gnvim2__SetExtensionCertificate = gnvim2__SetExtensionCertificate;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SetExtensionCertificate(soap, &soap_tmp___gnvim2__SetExtensionCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SetExtensionCertificate(soap, &soap_tmp___gnvim2__SetExtensionCertificate, "-gnvim2:SetExtensionCertificate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SetExtensionCertificate(soap, &soap_tmp___gnvim2__SetExtensionCertificate, "-gnvim2:SetExtensionCertificate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SetExtensionCertificateResponse)
		return soap_closesock(soap);
	gnvim2__SetExtensionCertificateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SetExtensionCertificateResponse.soap_get(soap, "gnvim2:SetExtensionCertificateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryManagedBy(const char *endpoint, const char *soap_action, gnvim2__QueryManagedByRequestType *gnvim2__QueryManagedBy, _gnvim2__QueryManagedByResponse &gnvim2__QueryManagedByResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryManagedBy soap_tmp___gnvim2__QueryManagedBy;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryManagedBy.gnvim2__QueryManagedBy = gnvim2__QueryManagedBy;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryManagedBy(soap, &soap_tmp___gnvim2__QueryManagedBy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryManagedBy(soap, &soap_tmp___gnvim2__QueryManagedBy, "-gnvim2:QueryManagedBy", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryManagedBy(soap, &soap_tmp___gnvim2__QueryManagedBy, "-gnvim2:QueryManagedBy", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryManagedByResponse)
		return soap_closesock(soap);
	gnvim2__QueryManagedByResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryManagedByResponse.soap_get(soap, "gnvim2:QueryManagedByResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryExtensionIpAllocationUsage(const char *endpoint, const char *soap_action, gnvim2__QueryExtensionIpAllocationUsageRequestType *gnvim2__QueryExtensionIpAllocationUsage, _gnvim2__QueryExtensionIpAllocationUsageResponse &gnvim2__QueryExtensionIpAllocationUsageResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryExtensionIpAllocationUsage soap_tmp___gnvim2__QueryExtensionIpAllocationUsage;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryExtensionIpAllocationUsage.gnvim2__QueryExtensionIpAllocationUsage = gnvim2__QueryExtensionIpAllocationUsage;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryExtensionIpAllocationUsage(soap, &soap_tmp___gnvim2__QueryExtensionIpAllocationUsage);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryExtensionIpAllocationUsage(soap, &soap_tmp___gnvim2__QueryExtensionIpAllocationUsage, "-gnvim2:QueryExtensionIpAllocationUsage", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryExtensionIpAllocationUsage(soap, &soap_tmp___gnvim2__QueryExtensionIpAllocationUsage, "-gnvim2:QueryExtensionIpAllocationUsage", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryExtensionIpAllocationUsageResponse)
		return soap_closesock(soap);
	gnvim2__QueryExtensionIpAllocationUsageResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryExtensionIpAllocationUsageResponse.soap_get(soap, "gnvim2:QueryExtensionIpAllocationUsageResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MoveDatastoreFile_USCORETask(const char *endpoint, const char *soap_action, gnvim2__MoveDatastoreFileRequestType *gnvim2__MoveDatastoreFile_USCORETask, _gnvim2__MoveDatastoreFile_USCORETaskResponse &gnvim2__MoveDatastoreFile_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__MoveDatastoreFile_USCORETask soap_tmp___gnvim2__MoveDatastoreFile_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MoveDatastoreFile_USCORETask.gnvim2__MoveDatastoreFile_USCORETask = gnvim2__MoveDatastoreFile_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MoveDatastoreFile_USCORETask(soap, &soap_tmp___gnvim2__MoveDatastoreFile_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MoveDatastoreFile_USCORETask(soap, &soap_tmp___gnvim2__MoveDatastoreFile_USCORETask, "-gnvim2:MoveDatastoreFile_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MoveDatastoreFile_USCORETask(soap, &soap_tmp___gnvim2__MoveDatastoreFile_USCORETask, "-gnvim2:MoveDatastoreFile_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MoveDatastoreFile_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__MoveDatastoreFile_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MoveDatastoreFile_USCORETaskResponse.soap_get(soap, "gnvim2:MoveDatastoreFile_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CopyDatastoreFile_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CopyDatastoreFileRequestType *gnvim2__CopyDatastoreFile_USCORETask, _gnvim2__CopyDatastoreFile_USCORETaskResponse &gnvim2__CopyDatastoreFile_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CopyDatastoreFile_USCORETask soap_tmp___gnvim2__CopyDatastoreFile_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CopyDatastoreFile_USCORETask.gnvim2__CopyDatastoreFile_USCORETask = gnvim2__CopyDatastoreFile_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CopyDatastoreFile_USCORETask(soap, &soap_tmp___gnvim2__CopyDatastoreFile_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CopyDatastoreFile_USCORETask(soap, &soap_tmp___gnvim2__CopyDatastoreFile_USCORETask, "-gnvim2:CopyDatastoreFile_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CopyDatastoreFile_USCORETask(soap, &soap_tmp___gnvim2__CopyDatastoreFile_USCORETask, "-gnvim2:CopyDatastoreFile_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CopyDatastoreFile_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CopyDatastoreFile_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CopyDatastoreFile_USCORETaskResponse.soap_get(soap, "gnvim2:CopyDatastoreFile_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeleteDatastoreFile_USCORETask(const char *endpoint, const char *soap_action, gnvim2__DeleteDatastoreFileRequestType *gnvim2__DeleteDatastoreFile_USCORETask, _gnvim2__DeleteDatastoreFile_USCORETaskResponse &gnvim2__DeleteDatastoreFile_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__DeleteDatastoreFile_USCORETask soap_tmp___gnvim2__DeleteDatastoreFile_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DeleteDatastoreFile_USCORETask.gnvim2__DeleteDatastoreFile_USCORETask = gnvim2__DeleteDatastoreFile_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DeleteDatastoreFile_USCORETask(soap, &soap_tmp___gnvim2__DeleteDatastoreFile_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DeleteDatastoreFile_USCORETask(soap, &soap_tmp___gnvim2__DeleteDatastoreFile_USCORETask, "-gnvim2:DeleteDatastoreFile_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DeleteDatastoreFile_USCORETask(soap, &soap_tmp___gnvim2__DeleteDatastoreFile_USCORETask, "-gnvim2:DeleteDatastoreFile_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DeleteDatastoreFile_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__DeleteDatastoreFile_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DeleteDatastoreFile_USCORETaskResponse.soap_get(soap, "gnvim2:DeleteDatastoreFile_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MakeDirectory(const char *endpoint, const char *soap_action, gnvim2__MakeDirectoryRequestType *gnvim2__MakeDirectory, _gnvim2__MakeDirectoryResponse &gnvim2__MakeDirectoryResponse)
{	struct soap *soap = this;
	struct __gnvim2__MakeDirectory soap_tmp___gnvim2__MakeDirectory;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MakeDirectory.gnvim2__MakeDirectory = gnvim2__MakeDirectory;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MakeDirectory(soap, &soap_tmp___gnvim2__MakeDirectory);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MakeDirectory(soap, &soap_tmp___gnvim2__MakeDirectory, "-gnvim2:MakeDirectory", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MakeDirectory(soap, &soap_tmp___gnvim2__MakeDirectory, "-gnvim2:MakeDirectory", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MakeDirectoryResponse)
		return soap_closesock(soap);
	gnvim2__MakeDirectoryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MakeDirectoryResponse.soap_get(soap, "gnvim2:MakeDirectoryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ChangeOwner(const char *endpoint, const char *soap_action, gnvim2__ChangeOwnerRequestType *gnvim2__ChangeOwner, _gnvim2__ChangeOwnerResponse &gnvim2__ChangeOwnerResponse)
{	struct soap *soap = this;
	struct __gnvim2__ChangeOwner soap_tmp___gnvim2__ChangeOwner;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ChangeOwner.gnvim2__ChangeOwner = gnvim2__ChangeOwner;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ChangeOwner(soap, &soap_tmp___gnvim2__ChangeOwner);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ChangeOwner(soap, &soap_tmp___gnvim2__ChangeOwner, "-gnvim2:ChangeOwner", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ChangeOwner(soap, &soap_tmp___gnvim2__ChangeOwner, "-gnvim2:ChangeOwner", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ChangeOwnerResponse)
		return soap_closesock(soap);
	gnvim2__ChangeOwnerResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ChangeOwnerResponse.soap_get(soap, "gnvim2:ChangeOwnerResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateFolder(const char *endpoint, const char *soap_action, gnvim2__CreateFolderRequestType *gnvim2__CreateFolder, _gnvim2__CreateFolderResponse &gnvim2__CreateFolderResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateFolder soap_tmp___gnvim2__CreateFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateFolder.gnvim2__CreateFolder = gnvim2__CreateFolder;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateFolder(soap, &soap_tmp___gnvim2__CreateFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateFolder(soap, &soap_tmp___gnvim2__CreateFolder, "-gnvim2:CreateFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateFolder(soap, &soap_tmp___gnvim2__CreateFolder, "-gnvim2:CreateFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateFolderResponse)
		return soap_closesock(soap);
	gnvim2__CreateFolderResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateFolderResponse.soap_get(soap, "gnvim2:CreateFolderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MoveIntoFolder_USCORETask(const char *endpoint, const char *soap_action, gnvim2__MoveIntoFolderRequestType *gnvim2__MoveIntoFolder_USCORETask, _gnvim2__MoveIntoFolder_USCORETaskResponse &gnvim2__MoveIntoFolder_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__MoveIntoFolder_USCORETask soap_tmp___gnvim2__MoveIntoFolder_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MoveIntoFolder_USCORETask.gnvim2__MoveIntoFolder_USCORETask = gnvim2__MoveIntoFolder_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MoveIntoFolder_USCORETask(soap, &soap_tmp___gnvim2__MoveIntoFolder_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MoveIntoFolder_USCORETask(soap, &soap_tmp___gnvim2__MoveIntoFolder_USCORETask, "-gnvim2:MoveIntoFolder_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MoveIntoFolder_USCORETask(soap, &soap_tmp___gnvim2__MoveIntoFolder_USCORETask, "-gnvim2:MoveIntoFolder_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MoveIntoFolder_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__MoveIntoFolder_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MoveIntoFolder_USCORETaskResponse.soap_get(soap, "gnvim2:MoveIntoFolder_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateVM_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CreateVMRequestType *gnvim2__CreateVM_USCORETask, _gnvim2__CreateVM_USCORETaskResponse &gnvim2__CreateVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateVM_USCORETask soap_tmp___gnvim2__CreateVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateVM_USCORETask.gnvim2__CreateVM_USCORETask = gnvim2__CreateVM_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateVM_USCORETask(soap, &soap_tmp___gnvim2__CreateVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateVM_USCORETask(soap, &soap_tmp___gnvim2__CreateVM_USCORETask, "-gnvim2:CreateVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateVM_USCORETask(soap, &soap_tmp___gnvim2__CreateVM_USCORETask, "-gnvim2:CreateVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateVM_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CreateVM_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateVM_USCORETaskResponse.soap_get(soap, "gnvim2:CreateVM_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RegisterVM_USCORETask(const char *endpoint, const char *soap_action, gnvim2__RegisterVMRequestType *gnvim2__RegisterVM_USCORETask, _gnvim2__RegisterVM_USCORETaskResponse &gnvim2__RegisterVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__RegisterVM_USCORETask soap_tmp___gnvim2__RegisterVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RegisterVM_USCORETask.gnvim2__RegisterVM_USCORETask = gnvim2__RegisterVM_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RegisterVM_USCORETask(soap, &soap_tmp___gnvim2__RegisterVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RegisterVM_USCORETask(soap, &soap_tmp___gnvim2__RegisterVM_USCORETask, "-gnvim2:RegisterVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RegisterVM_USCORETask(soap, &soap_tmp___gnvim2__RegisterVM_USCORETask, "-gnvim2:RegisterVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RegisterVM_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__RegisterVM_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RegisterVM_USCORETaskResponse.soap_get(soap, "gnvim2:RegisterVM_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateCluster(const char *endpoint, const char *soap_action, gnvim2__CreateClusterRequestType *gnvim2__CreateCluster, _gnvim2__CreateClusterResponse &gnvim2__CreateClusterResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateCluster soap_tmp___gnvim2__CreateCluster;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateCluster.gnvim2__CreateCluster = gnvim2__CreateCluster;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateCluster(soap, &soap_tmp___gnvim2__CreateCluster);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateCluster(soap, &soap_tmp___gnvim2__CreateCluster, "-gnvim2:CreateCluster", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateCluster(soap, &soap_tmp___gnvim2__CreateCluster, "-gnvim2:CreateCluster", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateClusterResponse)
		return soap_closesock(soap);
	gnvim2__CreateClusterResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateClusterResponse.soap_get(soap, "gnvim2:CreateClusterResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateClusterEx(const char *endpoint, const char *soap_action, gnvim2__CreateClusterExRequestType *gnvim2__CreateClusterEx, _gnvim2__CreateClusterExResponse &gnvim2__CreateClusterExResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateClusterEx soap_tmp___gnvim2__CreateClusterEx;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateClusterEx.gnvim2__CreateClusterEx = gnvim2__CreateClusterEx;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateClusterEx(soap, &soap_tmp___gnvim2__CreateClusterEx);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateClusterEx(soap, &soap_tmp___gnvim2__CreateClusterEx, "-gnvim2:CreateClusterEx", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateClusterEx(soap, &soap_tmp___gnvim2__CreateClusterEx, "-gnvim2:CreateClusterEx", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateClusterExResponse)
		return soap_closesock(soap);
	gnvim2__CreateClusterExResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateClusterExResponse.soap_get(soap, "gnvim2:CreateClusterExResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddStandaloneHost_USCORETask(const char *endpoint, const char *soap_action, gnvim2__AddStandaloneHostRequestType *gnvim2__AddStandaloneHost_USCORETask, _gnvim2__AddStandaloneHost_USCORETaskResponse &gnvim2__AddStandaloneHost_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__AddStandaloneHost_USCORETask soap_tmp___gnvim2__AddStandaloneHost_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AddStandaloneHost_USCORETask.gnvim2__AddStandaloneHost_USCORETask = gnvim2__AddStandaloneHost_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AddStandaloneHost_USCORETask(soap, &soap_tmp___gnvim2__AddStandaloneHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AddStandaloneHost_USCORETask(soap, &soap_tmp___gnvim2__AddStandaloneHost_USCORETask, "-gnvim2:AddStandaloneHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AddStandaloneHost_USCORETask(soap, &soap_tmp___gnvim2__AddStandaloneHost_USCORETask, "-gnvim2:AddStandaloneHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AddStandaloneHost_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__AddStandaloneHost_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AddStandaloneHost_USCORETaskResponse.soap_get(soap, "gnvim2:AddStandaloneHost_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateDatacenter(const char *endpoint, const char *soap_action, gnvim2__CreateDatacenterRequestType *gnvim2__CreateDatacenter, _gnvim2__CreateDatacenterResponse &gnvim2__CreateDatacenterResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateDatacenter soap_tmp___gnvim2__CreateDatacenter;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateDatacenter.gnvim2__CreateDatacenter = gnvim2__CreateDatacenter;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateDatacenter(soap, &soap_tmp___gnvim2__CreateDatacenter);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateDatacenter(soap, &soap_tmp___gnvim2__CreateDatacenter, "-gnvim2:CreateDatacenter", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateDatacenter(soap, &soap_tmp___gnvim2__CreateDatacenter, "-gnvim2:CreateDatacenter", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateDatacenterResponse)
		return soap_closesock(soap);
	gnvim2__CreateDatacenterResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateDatacenterResponse.soap_get(soap, "gnvim2:CreateDatacenterResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UnregisterAndDestroy_USCORETask(const char *endpoint, const char *soap_action, gnvim2__UnregisterAndDestroyRequestType *gnvim2__UnregisterAndDestroy_USCORETask, _gnvim2__UnregisterAndDestroy_USCORETaskResponse &gnvim2__UnregisterAndDestroy_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__UnregisterAndDestroy_USCORETask soap_tmp___gnvim2__UnregisterAndDestroy_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UnregisterAndDestroy_USCORETask.gnvim2__UnregisterAndDestroy_USCORETask = gnvim2__UnregisterAndDestroy_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UnregisterAndDestroy_USCORETask(soap, &soap_tmp___gnvim2__UnregisterAndDestroy_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UnregisterAndDestroy_USCORETask(soap, &soap_tmp___gnvim2__UnregisterAndDestroy_USCORETask, "-gnvim2:UnregisterAndDestroy_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UnregisterAndDestroy_USCORETask(soap, &soap_tmp___gnvim2__UnregisterAndDestroy_USCORETask, "-gnvim2:UnregisterAndDestroy_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UnregisterAndDestroy_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__UnregisterAndDestroy_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UnregisterAndDestroy_USCORETaskResponse.soap_get(soap, "gnvim2:UnregisterAndDestroy_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateDVS_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CreateDVSRequestType *gnvim2__CreateDVS_USCORETask, _gnvim2__CreateDVS_USCORETaskResponse &gnvim2__CreateDVS_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateDVS_USCORETask soap_tmp___gnvim2__CreateDVS_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateDVS_USCORETask.gnvim2__CreateDVS_USCORETask = gnvim2__CreateDVS_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateDVS_USCORETask(soap, &soap_tmp___gnvim2__CreateDVS_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateDVS_USCORETask(soap, &soap_tmp___gnvim2__CreateDVS_USCORETask, "-gnvim2:CreateDVS_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateDVS_USCORETask(soap, &soap_tmp___gnvim2__CreateDVS_USCORETask, "-gnvim2:CreateDVS_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateDVS_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CreateDVS_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateDVS_USCORETaskResponse.soap_get(soap, "gnvim2:CreateDVS_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateStoragePod(const char *endpoint, const char *soap_action, gnvim2__CreateStoragePodRequestType *gnvim2__CreateStoragePod, _gnvim2__CreateStoragePodResponse &gnvim2__CreateStoragePodResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateStoragePod soap_tmp___gnvim2__CreateStoragePod;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateStoragePod.gnvim2__CreateStoragePod = gnvim2__CreateStoragePod;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateStoragePod(soap, &soap_tmp___gnvim2__CreateStoragePod);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateStoragePod(soap, &soap_tmp___gnvim2__CreateStoragePod, "-gnvim2:CreateStoragePod", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateStoragePod(soap, &soap_tmp___gnvim2__CreateStoragePod, "-gnvim2:CreateStoragePod", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateStoragePodResponse)
		return soap_closesock(soap);
	gnvim2__CreateStoragePodResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateStoragePodResponse.soap_get(soap, "gnvim2:CreateStoragePodResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetCollectorPageSize(const char *endpoint, const char *soap_action, gnvim2__SetCollectorPageSizeRequestType *gnvim2__SetCollectorPageSize, _gnvim2__SetCollectorPageSizeResponse &gnvim2__SetCollectorPageSizeResponse)
{	struct soap *soap = this;
	struct __gnvim2__SetCollectorPageSize soap_tmp___gnvim2__SetCollectorPageSize;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SetCollectorPageSize.gnvim2__SetCollectorPageSize = gnvim2__SetCollectorPageSize;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SetCollectorPageSize(soap, &soap_tmp___gnvim2__SetCollectorPageSize);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SetCollectorPageSize(soap, &soap_tmp___gnvim2__SetCollectorPageSize, "-gnvim2:SetCollectorPageSize", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SetCollectorPageSize(soap, &soap_tmp___gnvim2__SetCollectorPageSize, "-gnvim2:SetCollectorPageSize", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SetCollectorPageSizeResponse)
		return soap_closesock(soap);
	gnvim2__SetCollectorPageSizeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SetCollectorPageSizeResponse.soap_get(soap, "gnvim2:SetCollectorPageSizeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RewindCollector(const char *endpoint, const char *soap_action, gnvim2__RewindCollectorRequestType *gnvim2__RewindCollector, _gnvim2__RewindCollectorResponse &gnvim2__RewindCollectorResponse)
{	struct soap *soap = this;
	struct __gnvim2__RewindCollector soap_tmp___gnvim2__RewindCollector;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RewindCollector.gnvim2__RewindCollector = gnvim2__RewindCollector;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RewindCollector(soap, &soap_tmp___gnvim2__RewindCollector);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RewindCollector(soap, &soap_tmp___gnvim2__RewindCollector, "-gnvim2:RewindCollector", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RewindCollector(soap, &soap_tmp___gnvim2__RewindCollector, "-gnvim2:RewindCollector", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RewindCollectorResponse)
		return soap_closesock(soap);
	gnvim2__RewindCollectorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RewindCollectorResponse.soap_get(soap, "gnvim2:RewindCollectorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResetCollector(const char *endpoint, const char *soap_action, gnvim2__ResetCollectorRequestType *gnvim2__ResetCollector, _gnvim2__ResetCollectorResponse &gnvim2__ResetCollectorResponse)
{	struct soap *soap = this;
	struct __gnvim2__ResetCollector soap_tmp___gnvim2__ResetCollector;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ResetCollector.gnvim2__ResetCollector = gnvim2__ResetCollector;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ResetCollector(soap, &soap_tmp___gnvim2__ResetCollector);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ResetCollector(soap, &soap_tmp___gnvim2__ResetCollector, "-gnvim2:ResetCollector", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ResetCollector(soap, &soap_tmp___gnvim2__ResetCollector, "-gnvim2:ResetCollector", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ResetCollectorResponse)
		return soap_closesock(soap);
	gnvim2__ResetCollectorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ResetCollectorResponse.soap_get(soap, "gnvim2:ResetCollectorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DestroyCollector(const char *endpoint, const char *soap_action, gnvim2__DestroyCollectorRequestType *gnvim2__DestroyCollector, _gnvim2__DestroyCollectorResponse &gnvim2__DestroyCollectorResponse)
{	struct soap *soap = this;
	struct __gnvim2__DestroyCollector soap_tmp___gnvim2__DestroyCollector;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DestroyCollector.gnvim2__DestroyCollector = gnvim2__DestroyCollector;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DestroyCollector(soap, &soap_tmp___gnvim2__DestroyCollector);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DestroyCollector(soap, &soap_tmp___gnvim2__DestroyCollector, "-gnvim2:DestroyCollector", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DestroyCollector(soap, &soap_tmp___gnvim2__DestroyCollector, "-gnvim2:DestroyCollector", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DestroyCollectorResponse)
		return soap_closesock(soap);
	gnvim2__DestroyCollectorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DestroyCollectorResponse.soap_get(soap, "gnvim2:DestroyCollectorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryTpmAttestationReport(const char *endpoint, const char *soap_action, gnvim2__QueryTpmAttestationReportRequestType *gnvim2__QueryTpmAttestationReport, _gnvim2__QueryTpmAttestationReportResponse &gnvim2__QueryTpmAttestationReportResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryTpmAttestationReport soap_tmp___gnvim2__QueryTpmAttestationReport;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryTpmAttestationReport.gnvim2__QueryTpmAttestationReport = gnvim2__QueryTpmAttestationReport;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryTpmAttestationReport(soap, &soap_tmp___gnvim2__QueryTpmAttestationReport);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryTpmAttestationReport(soap, &soap_tmp___gnvim2__QueryTpmAttestationReport, "-gnvim2:QueryTpmAttestationReport", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryTpmAttestationReport(soap, &soap_tmp___gnvim2__QueryTpmAttestationReport, "-gnvim2:QueryTpmAttestationReport", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryTpmAttestationReportResponse)
		return soap_closesock(soap);
	gnvim2__QueryTpmAttestationReportResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryTpmAttestationReportResponse.soap_get(soap, "gnvim2:QueryTpmAttestationReportResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryHostConnectionInfo(const char *endpoint, const char *soap_action, gnvim2__QueryHostConnectionInfoRequestType *gnvim2__QueryHostConnectionInfo, _gnvim2__QueryHostConnectionInfoResponse &gnvim2__QueryHostConnectionInfoResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryHostConnectionInfo soap_tmp___gnvim2__QueryHostConnectionInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryHostConnectionInfo.gnvim2__QueryHostConnectionInfo = gnvim2__QueryHostConnectionInfo;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryHostConnectionInfo(soap, &soap_tmp___gnvim2__QueryHostConnectionInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryHostConnectionInfo(soap, &soap_tmp___gnvim2__QueryHostConnectionInfo, "-gnvim2:QueryHostConnectionInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryHostConnectionInfo(soap, &soap_tmp___gnvim2__QueryHostConnectionInfo, "-gnvim2:QueryHostConnectionInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryHostConnectionInfoResponse)
		return soap_closesock(soap);
	gnvim2__QueryHostConnectionInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryHostConnectionInfoResponse.soap_get(soap, "gnvim2:QueryHostConnectionInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateSystemResources(const char *endpoint, const char *soap_action, gnvim2__UpdateSystemResourcesRequestType *gnvim2__UpdateSystemResources, _gnvim2__UpdateSystemResourcesResponse &gnvim2__UpdateSystemResourcesResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateSystemResources soap_tmp___gnvim2__UpdateSystemResources;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateSystemResources.gnvim2__UpdateSystemResources = gnvim2__UpdateSystemResources;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateSystemResources(soap, &soap_tmp___gnvim2__UpdateSystemResources);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateSystemResources(soap, &soap_tmp___gnvim2__UpdateSystemResources, "-gnvim2:UpdateSystemResources", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateSystemResources(soap, &soap_tmp___gnvim2__UpdateSystemResources, "-gnvim2:UpdateSystemResources", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateSystemResourcesResponse)
		return soap_closesock(soap);
	gnvim2__UpdateSystemResourcesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateSystemResourcesResponse.soap_get(soap, "gnvim2:UpdateSystemResourcesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateSystemSwapConfiguration(const char *endpoint, const char *soap_action, gnvim2__UpdateSystemSwapConfigurationRequestType *gnvim2__UpdateSystemSwapConfiguration, _gnvim2__UpdateSystemSwapConfigurationResponse &gnvim2__UpdateSystemSwapConfigurationResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateSystemSwapConfiguration soap_tmp___gnvim2__UpdateSystemSwapConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateSystemSwapConfiguration.gnvim2__UpdateSystemSwapConfiguration = gnvim2__UpdateSystemSwapConfiguration;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateSystemSwapConfiguration(soap, &soap_tmp___gnvim2__UpdateSystemSwapConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateSystemSwapConfiguration(soap, &soap_tmp___gnvim2__UpdateSystemSwapConfiguration, "-gnvim2:UpdateSystemSwapConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateSystemSwapConfiguration(soap, &soap_tmp___gnvim2__UpdateSystemSwapConfiguration, "-gnvim2:UpdateSystemSwapConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateSystemSwapConfigurationResponse)
		return soap_closesock(soap);
	gnvim2__UpdateSystemSwapConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateSystemSwapConfigurationResponse.soap_get(soap, "gnvim2:UpdateSystemSwapConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconnectHost_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ReconnectHostRequestType *gnvim2__ReconnectHost_USCORETask, _gnvim2__ReconnectHost_USCORETaskResponse &gnvim2__ReconnectHost_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReconnectHost_USCORETask soap_tmp___gnvim2__ReconnectHost_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReconnectHost_USCORETask.gnvim2__ReconnectHost_USCORETask = gnvim2__ReconnectHost_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReconnectHost_USCORETask(soap, &soap_tmp___gnvim2__ReconnectHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReconnectHost_USCORETask(soap, &soap_tmp___gnvim2__ReconnectHost_USCORETask, "-gnvim2:ReconnectHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReconnectHost_USCORETask(soap, &soap_tmp___gnvim2__ReconnectHost_USCORETask, "-gnvim2:ReconnectHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReconnectHost_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ReconnectHost_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReconnectHost_USCORETaskResponse.soap_get(soap, "gnvim2:ReconnectHost_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DisconnectHost_USCORETask(const char *endpoint, const char *soap_action, gnvim2__DisconnectHostRequestType *gnvim2__DisconnectHost_USCORETask, _gnvim2__DisconnectHost_USCORETaskResponse &gnvim2__DisconnectHost_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__DisconnectHost_USCORETask soap_tmp___gnvim2__DisconnectHost_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DisconnectHost_USCORETask.gnvim2__DisconnectHost_USCORETask = gnvim2__DisconnectHost_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DisconnectHost_USCORETask(soap, &soap_tmp___gnvim2__DisconnectHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DisconnectHost_USCORETask(soap, &soap_tmp___gnvim2__DisconnectHost_USCORETask, "-gnvim2:DisconnectHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DisconnectHost_USCORETask(soap, &soap_tmp___gnvim2__DisconnectHost_USCORETask, "-gnvim2:DisconnectHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DisconnectHost_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__DisconnectHost_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DisconnectHost_USCORETaskResponse.soap_get(soap, "gnvim2:DisconnectHost_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EnterMaintenanceMode_USCORETask(const char *endpoint, const char *soap_action, gnvim2__EnterMaintenanceModeRequestType *gnvim2__EnterMaintenanceMode_USCORETask, _gnvim2__EnterMaintenanceMode_USCORETaskResponse &gnvim2__EnterMaintenanceMode_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__EnterMaintenanceMode_USCORETask soap_tmp___gnvim2__EnterMaintenanceMode_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__EnterMaintenanceMode_USCORETask.gnvim2__EnterMaintenanceMode_USCORETask = gnvim2__EnterMaintenanceMode_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__EnterMaintenanceMode_USCORETask(soap, &soap_tmp___gnvim2__EnterMaintenanceMode_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__EnterMaintenanceMode_USCORETask(soap, &soap_tmp___gnvim2__EnterMaintenanceMode_USCORETask, "-gnvim2:EnterMaintenanceMode_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__EnterMaintenanceMode_USCORETask(soap, &soap_tmp___gnvim2__EnterMaintenanceMode_USCORETask, "-gnvim2:EnterMaintenanceMode_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__EnterMaintenanceMode_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__EnterMaintenanceMode_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__EnterMaintenanceMode_USCORETaskResponse.soap_get(soap, "gnvim2:EnterMaintenanceMode_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExitMaintenanceMode_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ExitMaintenanceModeRequestType *gnvim2__ExitMaintenanceMode_USCORETask, _gnvim2__ExitMaintenanceMode_USCORETaskResponse &gnvim2__ExitMaintenanceMode_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ExitMaintenanceMode_USCORETask soap_tmp___gnvim2__ExitMaintenanceMode_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ExitMaintenanceMode_USCORETask.gnvim2__ExitMaintenanceMode_USCORETask = gnvim2__ExitMaintenanceMode_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ExitMaintenanceMode_USCORETask(soap, &soap_tmp___gnvim2__ExitMaintenanceMode_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ExitMaintenanceMode_USCORETask(soap, &soap_tmp___gnvim2__ExitMaintenanceMode_USCORETask, "-gnvim2:ExitMaintenanceMode_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ExitMaintenanceMode_USCORETask(soap, &soap_tmp___gnvim2__ExitMaintenanceMode_USCORETask, "-gnvim2:ExitMaintenanceMode_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ExitMaintenanceMode_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ExitMaintenanceMode_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ExitMaintenanceMode_USCORETaskResponse.soap_get(soap, "gnvim2:ExitMaintenanceMode_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RebootHost_USCORETask(const char *endpoint, const char *soap_action, gnvim2__RebootHostRequestType *gnvim2__RebootHost_USCORETask, _gnvim2__RebootHost_USCORETaskResponse &gnvim2__RebootHost_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__RebootHost_USCORETask soap_tmp___gnvim2__RebootHost_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RebootHost_USCORETask.gnvim2__RebootHost_USCORETask = gnvim2__RebootHost_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RebootHost_USCORETask(soap, &soap_tmp___gnvim2__RebootHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RebootHost_USCORETask(soap, &soap_tmp___gnvim2__RebootHost_USCORETask, "-gnvim2:RebootHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RebootHost_USCORETask(soap, &soap_tmp___gnvim2__RebootHost_USCORETask, "-gnvim2:RebootHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RebootHost_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__RebootHost_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RebootHost_USCORETaskResponse.soap_get(soap, "gnvim2:RebootHost_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ShutdownHost_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ShutdownHostRequestType *gnvim2__ShutdownHost_USCORETask, _gnvim2__ShutdownHost_USCORETaskResponse &gnvim2__ShutdownHost_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ShutdownHost_USCORETask soap_tmp___gnvim2__ShutdownHost_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ShutdownHost_USCORETask.gnvim2__ShutdownHost_USCORETask = gnvim2__ShutdownHost_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ShutdownHost_USCORETask(soap, &soap_tmp___gnvim2__ShutdownHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ShutdownHost_USCORETask(soap, &soap_tmp___gnvim2__ShutdownHost_USCORETask, "-gnvim2:ShutdownHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ShutdownHost_USCORETask(soap, &soap_tmp___gnvim2__ShutdownHost_USCORETask, "-gnvim2:ShutdownHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ShutdownHost_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ShutdownHost_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ShutdownHost_USCORETaskResponse.soap_get(soap, "gnvim2:ShutdownHost_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::PowerDownHostToStandBy_USCORETask(const char *endpoint, const char *soap_action, gnvim2__PowerDownHostToStandByRequestType *gnvim2__PowerDownHostToStandBy_USCORETask, _gnvim2__PowerDownHostToStandBy_USCORETaskResponse &gnvim2__PowerDownHostToStandBy_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__PowerDownHostToStandBy_USCORETask soap_tmp___gnvim2__PowerDownHostToStandBy_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__PowerDownHostToStandBy_USCORETask.gnvim2__PowerDownHostToStandBy_USCORETask = gnvim2__PowerDownHostToStandBy_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__PowerDownHostToStandBy_USCORETask(soap, &soap_tmp___gnvim2__PowerDownHostToStandBy_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__PowerDownHostToStandBy_USCORETask(soap, &soap_tmp___gnvim2__PowerDownHostToStandBy_USCORETask, "-gnvim2:PowerDownHostToStandBy_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__PowerDownHostToStandBy_USCORETask(soap, &soap_tmp___gnvim2__PowerDownHostToStandBy_USCORETask, "-gnvim2:PowerDownHostToStandBy_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__PowerDownHostToStandBy_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__PowerDownHostToStandBy_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__PowerDownHostToStandBy_USCORETaskResponse.soap_get(soap, "gnvim2:PowerDownHostToStandBy_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::PowerUpHostFromStandBy_USCORETask(const char *endpoint, const char *soap_action, gnvim2__PowerUpHostFromStandByRequestType *gnvim2__PowerUpHostFromStandBy_USCORETask, _gnvim2__PowerUpHostFromStandBy_USCORETaskResponse &gnvim2__PowerUpHostFromStandBy_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__PowerUpHostFromStandBy_USCORETask soap_tmp___gnvim2__PowerUpHostFromStandBy_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__PowerUpHostFromStandBy_USCORETask.gnvim2__PowerUpHostFromStandBy_USCORETask = gnvim2__PowerUpHostFromStandBy_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__PowerUpHostFromStandBy_USCORETask(soap, &soap_tmp___gnvim2__PowerUpHostFromStandBy_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__PowerUpHostFromStandBy_USCORETask(soap, &soap_tmp___gnvim2__PowerUpHostFromStandBy_USCORETask, "-gnvim2:PowerUpHostFromStandBy_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__PowerUpHostFromStandBy_USCORETask(soap, &soap_tmp___gnvim2__PowerUpHostFromStandBy_USCORETask, "-gnvim2:PowerUpHostFromStandBy_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__PowerUpHostFromStandBy_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__PowerUpHostFromStandBy_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__PowerUpHostFromStandBy_USCORETaskResponse.soap_get(soap, "gnvim2:PowerUpHostFromStandBy_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryMemoryOverhead(const char *endpoint, const char *soap_action, gnvim2__QueryMemoryOverheadRequestType *gnvim2__QueryMemoryOverhead, _gnvim2__QueryMemoryOverheadResponse &gnvim2__QueryMemoryOverheadResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryMemoryOverhead soap_tmp___gnvim2__QueryMemoryOverhead;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryMemoryOverhead.gnvim2__QueryMemoryOverhead = gnvim2__QueryMemoryOverhead;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryMemoryOverhead(soap, &soap_tmp___gnvim2__QueryMemoryOverhead);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryMemoryOverhead(soap, &soap_tmp___gnvim2__QueryMemoryOverhead, "-gnvim2:QueryMemoryOverhead", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryMemoryOverhead(soap, &soap_tmp___gnvim2__QueryMemoryOverhead, "-gnvim2:QueryMemoryOverhead", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryMemoryOverheadResponse)
		return soap_closesock(soap);
	gnvim2__QueryMemoryOverheadResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryMemoryOverheadResponse.soap_get(soap, "gnvim2:QueryMemoryOverheadResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryMemoryOverheadEx(const char *endpoint, const char *soap_action, gnvim2__QueryMemoryOverheadExRequestType *gnvim2__QueryMemoryOverheadEx, _gnvim2__QueryMemoryOverheadExResponse &gnvim2__QueryMemoryOverheadExResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryMemoryOverheadEx soap_tmp___gnvim2__QueryMemoryOverheadEx;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryMemoryOverheadEx.gnvim2__QueryMemoryOverheadEx = gnvim2__QueryMemoryOverheadEx;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryMemoryOverheadEx(soap, &soap_tmp___gnvim2__QueryMemoryOverheadEx);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryMemoryOverheadEx(soap, &soap_tmp___gnvim2__QueryMemoryOverheadEx, "-gnvim2:QueryMemoryOverheadEx", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryMemoryOverheadEx(soap, &soap_tmp___gnvim2__QueryMemoryOverheadEx, "-gnvim2:QueryMemoryOverheadEx", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryMemoryOverheadExResponse)
		return soap_closesock(soap);
	gnvim2__QueryMemoryOverheadExResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryMemoryOverheadExResponse.soap_get(soap, "gnvim2:QueryMemoryOverheadExResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureHostForDAS_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ReconfigureHostForDASRequestType *gnvim2__ReconfigureHostForDAS_USCORETask, _gnvim2__ReconfigureHostForDAS_USCORETaskResponse &gnvim2__ReconfigureHostForDAS_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReconfigureHostForDAS_USCORETask soap_tmp___gnvim2__ReconfigureHostForDAS_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReconfigureHostForDAS_USCORETask.gnvim2__ReconfigureHostForDAS_USCORETask = gnvim2__ReconfigureHostForDAS_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReconfigureHostForDAS_USCORETask(soap, &soap_tmp___gnvim2__ReconfigureHostForDAS_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReconfigureHostForDAS_USCORETask(soap, &soap_tmp___gnvim2__ReconfigureHostForDAS_USCORETask, "-gnvim2:ReconfigureHostForDAS_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReconfigureHostForDAS_USCORETask(soap, &soap_tmp___gnvim2__ReconfigureHostForDAS_USCORETask, "-gnvim2:ReconfigureHostForDAS_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReconfigureHostForDAS_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ReconfigureHostForDAS_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReconfigureHostForDAS_USCORETaskResponse.soap_get(soap, "gnvim2:ReconfigureHostForDAS_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateFlags(const char *endpoint, const char *soap_action, gnvim2__UpdateFlagsRequestType *gnvim2__UpdateFlags, _gnvim2__UpdateFlagsResponse &gnvim2__UpdateFlagsResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateFlags soap_tmp___gnvim2__UpdateFlags;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateFlags.gnvim2__UpdateFlags = gnvim2__UpdateFlags;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateFlags(soap, &soap_tmp___gnvim2__UpdateFlags);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateFlags(soap, &soap_tmp___gnvim2__UpdateFlags, "-gnvim2:UpdateFlags", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateFlags(soap, &soap_tmp___gnvim2__UpdateFlags, "-gnvim2:UpdateFlags", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateFlagsResponse)
		return soap_closesock(soap);
	gnvim2__UpdateFlagsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateFlagsResponse.soap_get(soap, "gnvim2:UpdateFlagsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EnterLockdownMode(const char *endpoint, const char *soap_action, gnvim2__EnterLockdownModeRequestType *gnvim2__EnterLockdownMode, _gnvim2__EnterLockdownModeResponse &gnvim2__EnterLockdownModeResponse)
{	struct soap *soap = this;
	struct __gnvim2__EnterLockdownMode soap_tmp___gnvim2__EnterLockdownMode;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__EnterLockdownMode.gnvim2__EnterLockdownMode = gnvim2__EnterLockdownMode;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__EnterLockdownMode(soap, &soap_tmp___gnvim2__EnterLockdownMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__EnterLockdownMode(soap, &soap_tmp___gnvim2__EnterLockdownMode, "-gnvim2:EnterLockdownMode", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__EnterLockdownMode(soap, &soap_tmp___gnvim2__EnterLockdownMode, "-gnvim2:EnterLockdownMode", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__EnterLockdownModeResponse)
		return soap_closesock(soap);
	gnvim2__EnterLockdownModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__EnterLockdownModeResponse.soap_get(soap, "gnvim2:EnterLockdownModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExitLockdownMode(const char *endpoint, const char *soap_action, gnvim2__ExitLockdownModeRequestType *gnvim2__ExitLockdownMode, _gnvim2__ExitLockdownModeResponse &gnvim2__ExitLockdownModeResponse)
{	struct soap *soap = this;
	struct __gnvim2__ExitLockdownMode soap_tmp___gnvim2__ExitLockdownMode;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ExitLockdownMode.gnvim2__ExitLockdownMode = gnvim2__ExitLockdownMode;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ExitLockdownMode(soap, &soap_tmp___gnvim2__ExitLockdownMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ExitLockdownMode(soap, &soap_tmp___gnvim2__ExitLockdownMode, "-gnvim2:ExitLockdownMode", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ExitLockdownMode(soap, &soap_tmp___gnvim2__ExitLockdownMode, "-gnvim2:ExitLockdownMode", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ExitLockdownModeResponse)
		return soap_closesock(soap);
	gnvim2__ExitLockdownModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ExitLockdownModeResponse.soap_get(soap, "gnvim2:ExitLockdownModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AcquireCimServicesTicket(const char *endpoint, const char *soap_action, gnvim2__AcquireCimServicesTicketRequestType *gnvim2__AcquireCimServicesTicket, _gnvim2__AcquireCimServicesTicketResponse &gnvim2__AcquireCimServicesTicketResponse)
{	struct soap *soap = this;
	struct __gnvim2__AcquireCimServicesTicket soap_tmp___gnvim2__AcquireCimServicesTicket;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AcquireCimServicesTicket.gnvim2__AcquireCimServicesTicket = gnvim2__AcquireCimServicesTicket;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AcquireCimServicesTicket(soap, &soap_tmp___gnvim2__AcquireCimServicesTicket);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AcquireCimServicesTicket(soap, &soap_tmp___gnvim2__AcquireCimServicesTicket, "-gnvim2:AcquireCimServicesTicket", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AcquireCimServicesTicket(soap, &soap_tmp___gnvim2__AcquireCimServicesTicket, "-gnvim2:AcquireCimServicesTicket", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AcquireCimServicesTicketResponse)
		return soap_closesock(soap);
	gnvim2__AcquireCimServicesTicketResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AcquireCimServicesTicketResponse.soap_get(soap, "gnvim2:AcquireCimServicesTicketResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateIpmi(const char *endpoint, const char *soap_action, gnvim2__UpdateIpmiRequestType *gnvim2__UpdateIpmi, _gnvim2__UpdateIpmiResponse &gnvim2__UpdateIpmiResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateIpmi soap_tmp___gnvim2__UpdateIpmi;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateIpmi.gnvim2__UpdateIpmi = gnvim2__UpdateIpmi;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateIpmi(soap, &soap_tmp___gnvim2__UpdateIpmi);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateIpmi(soap, &soap_tmp___gnvim2__UpdateIpmi, "-gnvim2:UpdateIpmi", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateIpmi(soap, &soap_tmp___gnvim2__UpdateIpmi, "-gnvim2:UpdateIpmi", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateIpmiResponse)
		return soap_closesock(soap);
	gnvim2__UpdateIpmiResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateIpmiResponse.soap_get(soap, "gnvim2:UpdateIpmiResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveHardwareUptime(const char *endpoint, const char *soap_action, gnvim2__RetrieveHardwareUptimeRequestType *gnvim2__RetrieveHardwareUptime, _gnvim2__RetrieveHardwareUptimeResponse &gnvim2__RetrieveHardwareUptimeResponse)
{	struct soap *soap = this;
	struct __gnvim2__RetrieveHardwareUptime soap_tmp___gnvim2__RetrieveHardwareUptime;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RetrieveHardwareUptime.gnvim2__RetrieveHardwareUptime = gnvim2__RetrieveHardwareUptime;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RetrieveHardwareUptime(soap, &soap_tmp___gnvim2__RetrieveHardwareUptime);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RetrieveHardwareUptime(soap, &soap_tmp___gnvim2__RetrieveHardwareUptime, "-gnvim2:RetrieveHardwareUptime", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RetrieveHardwareUptime(soap, &soap_tmp___gnvim2__RetrieveHardwareUptime, "-gnvim2:RetrieveHardwareUptime", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RetrieveHardwareUptimeResponse)
		return soap_closesock(soap);
	gnvim2__RetrieveHardwareUptimeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RetrieveHardwareUptimeResponse.soap_get(soap, "gnvim2:RetrieveHardwareUptimeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::HttpNfcLeaseGetManifest(const char *endpoint, const char *soap_action, gnvim2__HttpNfcLeaseGetManifestRequestType *gnvim2__HttpNfcLeaseGetManifest, _gnvim2__HttpNfcLeaseGetManifestResponse &gnvim2__HttpNfcLeaseGetManifestResponse)
{	struct soap *soap = this;
	struct __gnvim2__HttpNfcLeaseGetManifest soap_tmp___gnvim2__HttpNfcLeaseGetManifest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__HttpNfcLeaseGetManifest.gnvim2__HttpNfcLeaseGetManifest = gnvim2__HttpNfcLeaseGetManifest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__HttpNfcLeaseGetManifest(soap, &soap_tmp___gnvim2__HttpNfcLeaseGetManifest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__HttpNfcLeaseGetManifest(soap, &soap_tmp___gnvim2__HttpNfcLeaseGetManifest, "-gnvim2:HttpNfcLeaseGetManifest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__HttpNfcLeaseGetManifest(soap, &soap_tmp___gnvim2__HttpNfcLeaseGetManifest, "-gnvim2:HttpNfcLeaseGetManifest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__HttpNfcLeaseGetManifestResponse)
		return soap_closesock(soap);
	gnvim2__HttpNfcLeaseGetManifestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__HttpNfcLeaseGetManifestResponse.soap_get(soap, "gnvim2:HttpNfcLeaseGetManifestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::HttpNfcLeaseComplete(const char *endpoint, const char *soap_action, gnvim2__HttpNfcLeaseCompleteRequestType *gnvim2__HttpNfcLeaseComplete, _gnvim2__HttpNfcLeaseCompleteResponse &gnvim2__HttpNfcLeaseCompleteResponse)
{	struct soap *soap = this;
	struct __gnvim2__HttpNfcLeaseComplete soap_tmp___gnvim2__HttpNfcLeaseComplete;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__HttpNfcLeaseComplete.gnvim2__HttpNfcLeaseComplete = gnvim2__HttpNfcLeaseComplete;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__HttpNfcLeaseComplete(soap, &soap_tmp___gnvim2__HttpNfcLeaseComplete);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__HttpNfcLeaseComplete(soap, &soap_tmp___gnvim2__HttpNfcLeaseComplete, "-gnvim2:HttpNfcLeaseComplete", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__HttpNfcLeaseComplete(soap, &soap_tmp___gnvim2__HttpNfcLeaseComplete, "-gnvim2:HttpNfcLeaseComplete", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__HttpNfcLeaseCompleteResponse)
		return soap_closesock(soap);
	gnvim2__HttpNfcLeaseCompleteResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__HttpNfcLeaseCompleteResponse.soap_get(soap, "gnvim2:HttpNfcLeaseCompleteResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::HttpNfcLeaseAbort(const char *endpoint, const char *soap_action, gnvim2__HttpNfcLeaseAbortRequestType *gnvim2__HttpNfcLeaseAbort, _gnvim2__HttpNfcLeaseAbortResponse &gnvim2__HttpNfcLeaseAbortResponse)
{	struct soap *soap = this;
	struct __gnvim2__HttpNfcLeaseAbort soap_tmp___gnvim2__HttpNfcLeaseAbort;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__HttpNfcLeaseAbort.gnvim2__HttpNfcLeaseAbort = gnvim2__HttpNfcLeaseAbort;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__HttpNfcLeaseAbort(soap, &soap_tmp___gnvim2__HttpNfcLeaseAbort);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__HttpNfcLeaseAbort(soap, &soap_tmp___gnvim2__HttpNfcLeaseAbort, "-gnvim2:HttpNfcLeaseAbort", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__HttpNfcLeaseAbort(soap, &soap_tmp___gnvim2__HttpNfcLeaseAbort, "-gnvim2:HttpNfcLeaseAbort", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__HttpNfcLeaseAbortResponse)
		return soap_closesock(soap);
	gnvim2__HttpNfcLeaseAbortResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__HttpNfcLeaseAbortResponse.soap_get(soap, "gnvim2:HttpNfcLeaseAbortResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::HttpNfcLeaseProgress(const char *endpoint, const char *soap_action, gnvim2__HttpNfcLeaseProgressRequestType *gnvim2__HttpNfcLeaseProgress, _gnvim2__HttpNfcLeaseProgressResponse &gnvim2__HttpNfcLeaseProgressResponse)
{	struct soap *soap = this;
	struct __gnvim2__HttpNfcLeaseProgress soap_tmp___gnvim2__HttpNfcLeaseProgress;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__HttpNfcLeaseProgress.gnvim2__HttpNfcLeaseProgress = gnvim2__HttpNfcLeaseProgress;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__HttpNfcLeaseProgress(soap, &soap_tmp___gnvim2__HttpNfcLeaseProgress);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__HttpNfcLeaseProgress(soap, &soap_tmp___gnvim2__HttpNfcLeaseProgress, "-gnvim2:HttpNfcLeaseProgress", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__HttpNfcLeaseProgress(soap, &soap_tmp___gnvim2__HttpNfcLeaseProgress, "-gnvim2:HttpNfcLeaseProgress", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__HttpNfcLeaseProgressResponse)
		return soap_closesock(soap);
	gnvim2__HttpNfcLeaseProgressResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__HttpNfcLeaseProgressResponse.soap_get(soap, "gnvim2:HttpNfcLeaseProgressResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::InstallIoFilter_USCORETask(const char *endpoint, const char *soap_action, gnvim2__InstallIoFilterRequestType *gnvim2__InstallIoFilter_USCORETask, _gnvim2__InstallIoFilter_USCORETaskResponse &gnvim2__InstallIoFilter_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__InstallIoFilter_USCORETask soap_tmp___gnvim2__InstallIoFilter_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__InstallIoFilter_USCORETask.gnvim2__InstallIoFilter_USCORETask = gnvim2__InstallIoFilter_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__InstallIoFilter_USCORETask(soap, &soap_tmp___gnvim2__InstallIoFilter_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__InstallIoFilter_USCORETask(soap, &soap_tmp___gnvim2__InstallIoFilter_USCORETask, "-gnvim2:InstallIoFilter_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__InstallIoFilter_USCORETask(soap, &soap_tmp___gnvim2__InstallIoFilter_USCORETask, "-gnvim2:InstallIoFilter_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__InstallIoFilter_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__InstallIoFilter_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__InstallIoFilter_USCORETaskResponse.soap_get(soap, "gnvim2:InstallIoFilter_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UninstallIoFilter_USCORETask(const char *endpoint, const char *soap_action, gnvim2__UninstallIoFilterRequestType *gnvim2__UninstallIoFilter_USCORETask, _gnvim2__UninstallIoFilter_USCORETaskResponse &gnvim2__UninstallIoFilter_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__UninstallIoFilter_USCORETask soap_tmp___gnvim2__UninstallIoFilter_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UninstallIoFilter_USCORETask.gnvim2__UninstallIoFilter_USCORETask = gnvim2__UninstallIoFilter_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UninstallIoFilter_USCORETask(soap, &soap_tmp___gnvim2__UninstallIoFilter_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UninstallIoFilter_USCORETask(soap, &soap_tmp___gnvim2__UninstallIoFilter_USCORETask, "-gnvim2:UninstallIoFilter_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UninstallIoFilter_USCORETask(soap, &soap_tmp___gnvim2__UninstallIoFilter_USCORETask, "-gnvim2:UninstallIoFilter_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UninstallIoFilter_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__UninstallIoFilter_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UninstallIoFilter_USCORETaskResponse.soap_get(soap, "gnvim2:UninstallIoFilter_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpgradeIoFilter_USCORETask(const char *endpoint, const char *soap_action, gnvim2__UpgradeIoFilterRequestType *gnvim2__UpgradeIoFilter_USCORETask, _gnvim2__UpgradeIoFilter_USCORETaskResponse &gnvim2__UpgradeIoFilter_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpgradeIoFilter_USCORETask soap_tmp___gnvim2__UpgradeIoFilter_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpgradeIoFilter_USCORETask.gnvim2__UpgradeIoFilter_USCORETask = gnvim2__UpgradeIoFilter_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpgradeIoFilter_USCORETask(soap, &soap_tmp___gnvim2__UpgradeIoFilter_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpgradeIoFilter_USCORETask(soap, &soap_tmp___gnvim2__UpgradeIoFilter_USCORETask, "-gnvim2:UpgradeIoFilter_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpgradeIoFilter_USCORETask(soap, &soap_tmp___gnvim2__UpgradeIoFilter_USCORETask, "-gnvim2:UpgradeIoFilter_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpgradeIoFilter_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__UpgradeIoFilter_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpgradeIoFilter_USCORETaskResponse.soap_get(soap, "gnvim2:UpgradeIoFilter_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryIoFilterIssues(const char *endpoint, const char *soap_action, gnvim2__QueryIoFilterIssuesRequestType *gnvim2__QueryIoFilterIssues, _gnvim2__QueryIoFilterIssuesResponse &gnvim2__QueryIoFilterIssuesResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryIoFilterIssues soap_tmp___gnvim2__QueryIoFilterIssues;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryIoFilterIssues.gnvim2__QueryIoFilterIssues = gnvim2__QueryIoFilterIssues;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryIoFilterIssues(soap, &soap_tmp___gnvim2__QueryIoFilterIssues);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryIoFilterIssues(soap, &soap_tmp___gnvim2__QueryIoFilterIssues, "-gnvim2:QueryIoFilterIssues", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryIoFilterIssues(soap, &soap_tmp___gnvim2__QueryIoFilterIssues, "-gnvim2:QueryIoFilterIssues", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryIoFilterIssuesResponse)
		return soap_closesock(soap);
	gnvim2__QueryIoFilterIssuesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryIoFilterIssuesResponse.soap_get(soap, "gnvim2:QueryIoFilterIssuesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryIoFilterInfo(const char *endpoint, const char *soap_action, gnvim2__QueryIoFilterInfoRequestType *gnvim2__QueryIoFilterInfo, _gnvim2__QueryIoFilterInfoResponse &gnvim2__QueryIoFilterInfoResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryIoFilterInfo soap_tmp___gnvim2__QueryIoFilterInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryIoFilterInfo.gnvim2__QueryIoFilterInfo = gnvim2__QueryIoFilterInfo;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryIoFilterInfo(soap, &soap_tmp___gnvim2__QueryIoFilterInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryIoFilterInfo(soap, &soap_tmp___gnvim2__QueryIoFilterInfo, "-gnvim2:QueryIoFilterInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryIoFilterInfo(soap, &soap_tmp___gnvim2__QueryIoFilterInfo, "-gnvim2:QueryIoFilterInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryIoFilterInfoResponse)
		return soap_closesock(soap);
	gnvim2__QueryIoFilterInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryIoFilterInfoResponse.soap_get(soap, "gnvim2:QueryIoFilterInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResolveInstallationErrorsOnHost_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ResolveInstallationErrorsOnHostRequestType *gnvim2__ResolveInstallationErrorsOnHost_USCORETask, _gnvim2__ResolveInstallationErrorsOnHost_USCORETaskResponse &gnvim2__ResolveInstallationErrorsOnHost_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ResolveInstallationErrorsOnHost_USCORETask soap_tmp___gnvim2__ResolveInstallationErrorsOnHost_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ResolveInstallationErrorsOnHost_USCORETask.gnvim2__ResolveInstallationErrorsOnHost_USCORETask = gnvim2__ResolveInstallationErrorsOnHost_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ResolveInstallationErrorsOnHost_USCORETask(soap, &soap_tmp___gnvim2__ResolveInstallationErrorsOnHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ResolveInstallationErrorsOnHost_USCORETask(soap, &soap_tmp___gnvim2__ResolveInstallationErrorsOnHost_USCORETask, "-gnvim2:ResolveInstallationErrorsOnHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ResolveInstallationErrorsOnHost_USCORETask(soap, &soap_tmp___gnvim2__ResolveInstallationErrorsOnHost_USCORETask, "-gnvim2:ResolveInstallationErrorsOnHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ResolveInstallationErrorsOnHost_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ResolveInstallationErrorsOnHost_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ResolveInstallationErrorsOnHost_USCORETaskResponse.soap_get(soap, "gnvim2:ResolveInstallationErrorsOnHost_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResolveInstallationErrorsOnCluster_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ResolveInstallationErrorsOnClusterRequestType *gnvim2__ResolveInstallationErrorsOnCluster_USCORETask, _gnvim2__ResolveInstallationErrorsOnCluster_USCORETaskResponse &gnvim2__ResolveInstallationErrorsOnCluster_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ResolveInstallationErrorsOnCluster_USCORETask soap_tmp___gnvim2__ResolveInstallationErrorsOnCluster_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ResolveInstallationErrorsOnCluster_USCORETask.gnvim2__ResolveInstallationErrorsOnCluster_USCORETask = gnvim2__ResolveInstallationErrorsOnCluster_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ResolveInstallationErrorsOnCluster_USCORETask(soap, &soap_tmp___gnvim2__ResolveInstallationErrorsOnCluster_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ResolveInstallationErrorsOnCluster_USCORETask(soap, &soap_tmp___gnvim2__ResolveInstallationErrorsOnCluster_USCORETask, "-gnvim2:ResolveInstallationErrorsOnCluster_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ResolveInstallationErrorsOnCluster_USCORETask(soap, &soap_tmp___gnvim2__ResolveInstallationErrorsOnCluster_USCORETask, "-gnvim2:ResolveInstallationErrorsOnCluster_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ResolveInstallationErrorsOnCluster_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ResolveInstallationErrorsOnCluster_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ResolveInstallationErrorsOnCluster_USCORETaskResponse.soap_get(soap, "gnvim2:ResolveInstallationErrorsOnCluster_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryDisksUsingFilter(const char *endpoint, const char *soap_action, gnvim2__QueryDisksUsingFilterRequestType *gnvim2__QueryDisksUsingFilter, _gnvim2__QueryDisksUsingFilterResponse &gnvim2__QueryDisksUsingFilterResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryDisksUsingFilter soap_tmp___gnvim2__QueryDisksUsingFilter;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryDisksUsingFilter.gnvim2__QueryDisksUsingFilter = gnvim2__QueryDisksUsingFilter;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryDisksUsingFilter(soap, &soap_tmp___gnvim2__QueryDisksUsingFilter);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryDisksUsingFilter(soap, &soap_tmp___gnvim2__QueryDisksUsingFilter, "-gnvim2:QueryDisksUsingFilter", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryDisksUsingFilter(soap, &soap_tmp___gnvim2__QueryDisksUsingFilter, "-gnvim2:QueryDisksUsingFilter", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryDisksUsingFilterResponse)
		return soap_closesock(soap);
	gnvim2__QueryDisksUsingFilterResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryDisksUsingFilterResponse.soap_get(soap, "gnvim2:QueryDisksUsingFilterResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryIpPools(const char *endpoint, const char *soap_action, gnvim2__QueryIpPoolsRequestType *gnvim2__QueryIpPools, _gnvim2__QueryIpPoolsResponse &gnvim2__QueryIpPoolsResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryIpPools soap_tmp___gnvim2__QueryIpPools;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryIpPools.gnvim2__QueryIpPools = gnvim2__QueryIpPools;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryIpPools(soap, &soap_tmp___gnvim2__QueryIpPools);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryIpPools(soap, &soap_tmp___gnvim2__QueryIpPools, "-gnvim2:QueryIpPools", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryIpPools(soap, &soap_tmp___gnvim2__QueryIpPools, "-gnvim2:QueryIpPools", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryIpPoolsResponse)
		return soap_closesock(soap);
	gnvim2__QueryIpPoolsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryIpPoolsResponse.soap_get(soap, "gnvim2:QueryIpPoolsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateIpPool(const char *endpoint, const char *soap_action, gnvim2__CreateIpPoolRequestType *gnvim2__CreateIpPool, _gnvim2__CreateIpPoolResponse &gnvim2__CreateIpPoolResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateIpPool soap_tmp___gnvim2__CreateIpPool;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateIpPool.gnvim2__CreateIpPool = gnvim2__CreateIpPool;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateIpPool(soap, &soap_tmp___gnvim2__CreateIpPool);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateIpPool(soap, &soap_tmp___gnvim2__CreateIpPool, "-gnvim2:CreateIpPool", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateIpPool(soap, &soap_tmp___gnvim2__CreateIpPool, "-gnvim2:CreateIpPool", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateIpPoolResponse)
		return soap_closesock(soap);
	gnvim2__CreateIpPoolResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateIpPoolResponse.soap_get(soap, "gnvim2:CreateIpPoolResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateIpPool(const char *endpoint, const char *soap_action, gnvim2__UpdateIpPoolRequestType *gnvim2__UpdateIpPool, _gnvim2__UpdateIpPoolResponse &gnvim2__UpdateIpPoolResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateIpPool soap_tmp___gnvim2__UpdateIpPool;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateIpPool.gnvim2__UpdateIpPool = gnvim2__UpdateIpPool;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateIpPool(soap, &soap_tmp___gnvim2__UpdateIpPool);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateIpPool(soap, &soap_tmp___gnvim2__UpdateIpPool, "-gnvim2:UpdateIpPool", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateIpPool(soap, &soap_tmp___gnvim2__UpdateIpPool, "-gnvim2:UpdateIpPool", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateIpPoolResponse)
		return soap_closesock(soap);
	gnvim2__UpdateIpPoolResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateIpPoolResponse.soap_get(soap, "gnvim2:UpdateIpPoolResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DestroyIpPool(const char *endpoint, const char *soap_action, gnvim2__DestroyIpPoolRequestType *gnvim2__DestroyIpPool, _gnvim2__DestroyIpPoolResponse &gnvim2__DestroyIpPoolResponse)
{	struct soap *soap = this;
	struct __gnvim2__DestroyIpPool soap_tmp___gnvim2__DestroyIpPool;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DestroyIpPool.gnvim2__DestroyIpPool = gnvim2__DestroyIpPool;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DestroyIpPool(soap, &soap_tmp___gnvim2__DestroyIpPool);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DestroyIpPool(soap, &soap_tmp___gnvim2__DestroyIpPool, "-gnvim2:DestroyIpPool", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DestroyIpPool(soap, &soap_tmp___gnvim2__DestroyIpPool, "-gnvim2:DestroyIpPool", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DestroyIpPoolResponse)
		return soap_closesock(soap);
	gnvim2__DestroyIpPoolResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DestroyIpPoolResponse.soap_get(soap, "gnvim2:DestroyIpPoolResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AllocateIpv4Address(const char *endpoint, const char *soap_action, gnvim2__AllocateIpv4AddressRequestType *gnvim2__AllocateIpv4Address, _gnvim2__AllocateIpv4AddressResponse &gnvim2__AllocateIpv4AddressResponse)
{	struct soap *soap = this;
	struct __gnvim2__AllocateIpv4Address soap_tmp___gnvim2__AllocateIpv4Address;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AllocateIpv4Address.gnvim2__AllocateIpv4Address = gnvim2__AllocateIpv4Address;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AllocateIpv4Address(soap, &soap_tmp___gnvim2__AllocateIpv4Address);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AllocateIpv4Address(soap, &soap_tmp___gnvim2__AllocateIpv4Address, "-gnvim2:AllocateIpv4Address", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AllocateIpv4Address(soap, &soap_tmp___gnvim2__AllocateIpv4Address, "-gnvim2:AllocateIpv4Address", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AllocateIpv4AddressResponse)
		return soap_closesock(soap);
	gnvim2__AllocateIpv4AddressResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AllocateIpv4AddressResponse.soap_get(soap, "gnvim2:AllocateIpv4AddressResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AllocateIpv6Address(const char *endpoint, const char *soap_action, gnvim2__AllocateIpv6AddressRequestType *gnvim2__AllocateIpv6Address, _gnvim2__AllocateIpv6AddressResponse &gnvim2__AllocateIpv6AddressResponse)
{	struct soap *soap = this;
	struct __gnvim2__AllocateIpv6Address soap_tmp___gnvim2__AllocateIpv6Address;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AllocateIpv6Address.gnvim2__AllocateIpv6Address = gnvim2__AllocateIpv6Address;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AllocateIpv6Address(soap, &soap_tmp___gnvim2__AllocateIpv6Address);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AllocateIpv6Address(soap, &soap_tmp___gnvim2__AllocateIpv6Address, "-gnvim2:AllocateIpv6Address", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AllocateIpv6Address(soap, &soap_tmp___gnvim2__AllocateIpv6Address, "-gnvim2:AllocateIpv6Address", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AllocateIpv6AddressResponse)
		return soap_closesock(soap);
	gnvim2__AllocateIpv6AddressResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AllocateIpv6AddressResponse.soap_get(soap, "gnvim2:AllocateIpv6AddressResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReleaseIpAllocation(const char *endpoint, const char *soap_action, gnvim2__ReleaseIpAllocationRequestType *gnvim2__ReleaseIpAllocation, _gnvim2__ReleaseIpAllocationResponse &gnvim2__ReleaseIpAllocationResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReleaseIpAllocation soap_tmp___gnvim2__ReleaseIpAllocation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReleaseIpAllocation.gnvim2__ReleaseIpAllocation = gnvim2__ReleaseIpAllocation;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReleaseIpAllocation(soap, &soap_tmp___gnvim2__ReleaseIpAllocation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReleaseIpAllocation(soap, &soap_tmp___gnvim2__ReleaseIpAllocation, "-gnvim2:ReleaseIpAllocation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReleaseIpAllocation(soap, &soap_tmp___gnvim2__ReleaseIpAllocation, "-gnvim2:ReleaseIpAllocation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReleaseIpAllocationResponse)
		return soap_closesock(soap);
	gnvim2__ReleaseIpAllocationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReleaseIpAllocationResponse.soap_get(soap, "gnvim2:ReleaseIpAllocationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryIPAllocations(const char *endpoint, const char *soap_action, gnvim2__QueryIPAllocationsRequestType *gnvim2__QueryIPAllocations, _gnvim2__QueryIPAllocationsResponse &gnvim2__QueryIPAllocationsResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryIPAllocations soap_tmp___gnvim2__QueryIPAllocations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryIPAllocations.gnvim2__QueryIPAllocations = gnvim2__QueryIPAllocations;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryIPAllocations(soap, &soap_tmp___gnvim2__QueryIPAllocations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryIPAllocations(soap, &soap_tmp___gnvim2__QueryIPAllocations, "-gnvim2:QueryIPAllocations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryIPAllocations(soap, &soap_tmp___gnvim2__QueryIPAllocations, "-gnvim2:QueryIPAllocations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryIPAllocationsResponse)
		return soap_closesock(soap);
	gnvim2__QueryIPAllocationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryIPAllocationsResponse.soap_get(soap, "gnvim2:QueryIPAllocationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateAssignedLicense(const char *endpoint, const char *soap_action, gnvim2__UpdateAssignedLicenseRequestType *gnvim2__UpdateAssignedLicense, _gnvim2__UpdateAssignedLicenseResponse &gnvim2__UpdateAssignedLicenseResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateAssignedLicense soap_tmp___gnvim2__UpdateAssignedLicense;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateAssignedLicense.gnvim2__UpdateAssignedLicense = gnvim2__UpdateAssignedLicense;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateAssignedLicense(soap, &soap_tmp___gnvim2__UpdateAssignedLicense);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateAssignedLicense(soap, &soap_tmp___gnvim2__UpdateAssignedLicense, "-gnvim2:UpdateAssignedLicense", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateAssignedLicense(soap, &soap_tmp___gnvim2__UpdateAssignedLicense, "-gnvim2:UpdateAssignedLicense", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateAssignedLicenseResponse)
		return soap_closesock(soap);
	gnvim2__UpdateAssignedLicenseResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateAssignedLicenseResponse.soap_get(soap, "gnvim2:UpdateAssignedLicenseResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveAssignedLicense(const char *endpoint, const char *soap_action, gnvim2__RemoveAssignedLicenseRequestType *gnvim2__RemoveAssignedLicense, _gnvim2__RemoveAssignedLicenseResponse &gnvim2__RemoveAssignedLicenseResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveAssignedLicense soap_tmp___gnvim2__RemoveAssignedLicense;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveAssignedLicense.gnvim2__RemoveAssignedLicense = gnvim2__RemoveAssignedLicense;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveAssignedLicense(soap, &soap_tmp___gnvim2__RemoveAssignedLicense);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveAssignedLicense(soap, &soap_tmp___gnvim2__RemoveAssignedLicense, "-gnvim2:RemoveAssignedLicense", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveAssignedLicense(soap, &soap_tmp___gnvim2__RemoveAssignedLicense, "-gnvim2:RemoveAssignedLicense", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveAssignedLicenseResponse)
		return soap_closesock(soap);
	gnvim2__RemoveAssignedLicenseResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveAssignedLicenseResponse.soap_get(soap, "gnvim2:RemoveAssignedLicenseResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryAssignedLicenses(const char *endpoint, const char *soap_action, gnvim2__QueryAssignedLicensesRequestType *gnvim2__QueryAssignedLicenses, _gnvim2__QueryAssignedLicensesResponse &gnvim2__QueryAssignedLicensesResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryAssignedLicenses soap_tmp___gnvim2__QueryAssignedLicenses;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryAssignedLicenses.gnvim2__QueryAssignedLicenses = gnvim2__QueryAssignedLicenses;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryAssignedLicenses(soap, &soap_tmp___gnvim2__QueryAssignedLicenses);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryAssignedLicenses(soap, &soap_tmp___gnvim2__QueryAssignedLicenses, "-gnvim2:QueryAssignedLicenses", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryAssignedLicenses(soap, &soap_tmp___gnvim2__QueryAssignedLicenses, "-gnvim2:QueryAssignedLicenses", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryAssignedLicensesResponse)
		return soap_closesock(soap);
	gnvim2__QueryAssignedLicensesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryAssignedLicensesResponse.soap_get(soap, "gnvim2:QueryAssignedLicensesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QuerySupportedFeatures(const char *endpoint, const char *soap_action, gnvim2__QuerySupportedFeaturesRequestType *gnvim2__QuerySupportedFeatures, _gnvim2__QuerySupportedFeaturesResponse &gnvim2__QuerySupportedFeaturesResponse)
{	struct soap *soap = this;
	struct __gnvim2__QuerySupportedFeatures soap_tmp___gnvim2__QuerySupportedFeatures;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QuerySupportedFeatures.gnvim2__QuerySupportedFeatures = gnvim2__QuerySupportedFeatures;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QuerySupportedFeatures(soap, &soap_tmp___gnvim2__QuerySupportedFeatures);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QuerySupportedFeatures(soap, &soap_tmp___gnvim2__QuerySupportedFeatures, "-gnvim2:QuerySupportedFeatures", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QuerySupportedFeatures(soap, &soap_tmp___gnvim2__QuerySupportedFeatures, "-gnvim2:QuerySupportedFeatures", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QuerySupportedFeaturesResponse)
		return soap_closesock(soap);
	gnvim2__QuerySupportedFeaturesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QuerySupportedFeaturesResponse.soap_get(soap, "gnvim2:QuerySupportedFeaturesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryLicenseSourceAvailability(const char *endpoint, const char *soap_action, gnvim2__QueryLicenseSourceAvailabilityRequestType *gnvim2__QueryLicenseSourceAvailability, _gnvim2__QueryLicenseSourceAvailabilityResponse &gnvim2__QueryLicenseSourceAvailabilityResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryLicenseSourceAvailability soap_tmp___gnvim2__QueryLicenseSourceAvailability;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryLicenseSourceAvailability.gnvim2__QueryLicenseSourceAvailability = gnvim2__QueryLicenseSourceAvailability;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryLicenseSourceAvailability(soap, &soap_tmp___gnvim2__QueryLicenseSourceAvailability);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryLicenseSourceAvailability(soap, &soap_tmp___gnvim2__QueryLicenseSourceAvailability, "-gnvim2:QueryLicenseSourceAvailability", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryLicenseSourceAvailability(soap, &soap_tmp___gnvim2__QueryLicenseSourceAvailability, "-gnvim2:QueryLicenseSourceAvailability", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryLicenseSourceAvailabilityResponse)
		return soap_closesock(soap);
	gnvim2__QueryLicenseSourceAvailabilityResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryLicenseSourceAvailabilityResponse.soap_get(soap, "gnvim2:QueryLicenseSourceAvailabilityResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryLicenseUsage(const char *endpoint, const char *soap_action, gnvim2__QueryLicenseUsageRequestType *gnvim2__QueryLicenseUsage, _gnvim2__QueryLicenseUsageResponse &gnvim2__QueryLicenseUsageResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryLicenseUsage soap_tmp___gnvim2__QueryLicenseUsage;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryLicenseUsage.gnvim2__QueryLicenseUsage = gnvim2__QueryLicenseUsage;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryLicenseUsage(soap, &soap_tmp___gnvim2__QueryLicenseUsage);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryLicenseUsage(soap, &soap_tmp___gnvim2__QueryLicenseUsage, "-gnvim2:QueryLicenseUsage", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryLicenseUsage(soap, &soap_tmp___gnvim2__QueryLicenseUsage, "-gnvim2:QueryLicenseUsage", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryLicenseUsageResponse)
		return soap_closesock(soap);
	gnvim2__QueryLicenseUsageResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryLicenseUsageResponse.soap_get(soap, "gnvim2:QueryLicenseUsageResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetLicenseEdition(const char *endpoint, const char *soap_action, gnvim2__SetLicenseEditionRequestType *gnvim2__SetLicenseEdition, _gnvim2__SetLicenseEditionResponse &gnvim2__SetLicenseEditionResponse)
{	struct soap *soap = this;
	struct __gnvim2__SetLicenseEdition soap_tmp___gnvim2__SetLicenseEdition;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SetLicenseEdition.gnvim2__SetLicenseEdition = gnvim2__SetLicenseEdition;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SetLicenseEdition(soap, &soap_tmp___gnvim2__SetLicenseEdition);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SetLicenseEdition(soap, &soap_tmp___gnvim2__SetLicenseEdition, "-gnvim2:SetLicenseEdition", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SetLicenseEdition(soap, &soap_tmp___gnvim2__SetLicenseEdition, "-gnvim2:SetLicenseEdition", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SetLicenseEditionResponse)
		return soap_closesock(soap);
	gnvim2__SetLicenseEditionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SetLicenseEditionResponse.soap_get(soap, "gnvim2:SetLicenseEditionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CheckLicenseFeature(const char *endpoint, const char *soap_action, gnvim2__CheckLicenseFeatureRequestType *gnvim2__CheckLicenseFeature, _gnvim2__CheckLicenseFeatureResponse &gnvim2__CheckLicenseFeatureResponse)
{	struct soap *soap = this;
	struct __gnvim2__CheckLicenseFeature soap_tmp___gnvim2__CheckLicenseFeature;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CheckLicenseFeature.gnvim2__CheckLicenseFeature = gnvim2__CheckLicenseFeature;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CheckLicenseFeature(soap, &soap_tmp___gnvim2__CheckLicenseFeature);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CheckLicenseFeature(soap, &soap_tmp___gnvim2__CheckLicenseFeature, "-gnvim2:CheckLicenseFeature", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CheckLicenseFeature(soap, &soap_tmp___gnvim2__CheckLicenseFeature, "-gnvim2:CheckLicenseFeature", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CheckLicenseFeatureResponse)
		return soap_closesock(soap);
	gnvim2__CheckLicenseFeatureResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CheckLicenseFeatureResponse.soap_get(soap, "gnvim2:CheckLicenseFeatureResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EnableFeature(const char *endpoint, const char *soap_action, gnvim2__EnableFeatureRequestType *gnvim2__EnableFeature, _gnvim2__EnableFeatureResponse &gnvim2__EnableFeatureResponse)
{	struct soap *soap = this;
	struct __gnvim2__EnableFeature soap_tmp___gnvim2__EnableFeature;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__EnableFeature.gnvim2__EnableFeature = gnvim2__EnableFeature;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__EnableFeature(soap, &soap_tmp___gnvim2__EnableFeature);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__EnableFeature(soap, &soap_tmp___gnvim2__EnableFeature, "-gnvim2:EnableFeature", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__EnableFeature(soap, &soap_tmp___gnvim2__EnableFeature, "-gnvim2:EnableFeature", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__EnableFeatureResponse)
		return soap_closesock(soap);
	gnvim2__EnableFeatureResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__EnableFeatureResponse.soap_get(soap, "gnvim2:EnableFeatureResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DisableFeature(const char *endpoint, const char *soap_action, gnvim2__DisableFeatureRequestType *gnvim2__DisableFeature, _gnvim2__DisableFeatureResponse &gnvim2__DisableFeatureResponse)
{	struct soap *soap = this;
	struct __gnvim2__DisableFeature soap_tmp___gnvim2__DisableFeature;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DisableFeature.gnvim2__DisableFeature = gnvim2__DisableFeature;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DisableFeature(soap, &soap_tmp___gnvim2__DisableFeature);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DisableFeature(soap, &soap_tmp___gnvim2__DisableFeature, "-gnvim2:DisableFeature", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DisableFeature(soap, &soap_tmp___gnvim2__DisableFeature, "-gnvim2:DisableFeature", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DisableFeatureResponse)
		return soap_closesock(soap);
	gnvim2__DisableFeatureResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DisableFeatureResponse.soap_get(soap, "gnvim2:DisableFeatureResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ConfigureLicenseSource(const char *endpoint, const char *soap_action, gnvim2__ConfigureLicenseSourceRequestType *gnvim2__ConfigureLicenseSource, _gnvim2__ConfigureLicenseSourceResponse &gnvim2__ConfigureLicenseSourceResponse)
{	struct soap *soap = this;
	struct __gnvim2__ConfigureLicenseSource soap_tmp___gnvim2__ConfigureLicenseSource;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ConfigureLicenseSource.gnvim2__ConfigureLicenseSource = gnvim2__ConfigureLicenseSource;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ConfigureLicenseSource(soap, &soap_tmp___gnvim2__ConfigureLicenseSource);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ConfigureLicenseSource(soap, &soap_tmp___gnvim2__ConfigureLicenseSource, "-gnvim2:ConfigureLicenseSource", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ConfigureLicenseSource(soap, &soap_tmp___gnvim2__ConfigureLicenseSource, "-gnvim2:ConfigureLicenseSource", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ConfigureLicenseSourceResponse)
		return soap_closesock(soap);
	gnvim2__ConfigureLicenseSourceResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ConfigureLicenseSourceResponse.soap_get(soap, "gnvim2:ConfigureLicenseSourceResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateLicense(const char *endpoint, const char *soap_action, gnvim2__UpdateLicenseRequestType *gnvim2__UpdateLicense, _gnvim2__UpdateLicenseResponse &gnvim2__UpdateLicenseResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateLicense soap_tmp___gnvim2__UpdateLicense;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateLicense.gnvim2__UpdateLicense = gnvim2__UpdateLicense;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateLicense(soap, &soap_tmp___gnvim2__UpdateLicense);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateLicense(soap, &soap_tmp___gnvim2__UpdateLicense, "-gnvim2:UpdateLicense", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateLicense(soap, &soap_tmp___gnvim2__UpdateLicense, "-gnvim2:UpdateLicense", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateLicenseResponse)
		return soap_closesock(soap);
	gnvim2__UpdateLicenseResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateLicenseResponse.soap_get(soap, "gnvim2:UpdateLicenseResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddLicense(const char *endpoint, const char *soap_action, gnvim2__AddLicenseRequestType *gnvim2__AddLicense, _gnvim2__AddLicenseResponse &gnvim2__AddLicenseResponse)
{	struct soap *soap = this;
	struct __gnvim2__AddLicense soap_tmp___gnvim2__AddLicense;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AddLicense.gnvim2__AddLicense = gnvim2__AddLicense;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AddLicense(soap, &soap_tmp___gnvim2__AddLicense);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AddLicense(soap, &soap_tmp___gnvim2__AddLicense, "-gnvim2:AddLicense", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AddLicense(soap, &soap_tmp___gnvim2__AddLicense, "-gnvim2:AddLicense", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AddLicenseResponse)
		return soap_closesock(soap);
	gnvim2__AddLicenseResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AddLicenseResponse.soap_get(soap, "gnvim2:AddLicenseResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveLicense(const char *endpoint, const char *soap_action, gnvim2__RemoveLicenseRequestType *gnvim2__RemoveLicense, _gnvim2__RemoveLicenseResponse &gnvim2__RemoveLicenseResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveLicense soap_tmp___gnvim2__RemoveLicense;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveLicense.gnvim2__RemoveLicense = gnvim2__RemoveLicense;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveLicense(soap, &soap_tmp___gnvim2__RemoveLicense);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveLicense(soap, &soap_tmp___gnvim2__RemoveLicense, "-gnvim2:RemoveLicense", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveLicense(soap, &soap_tmp___gnvim2__RemoveLicense, "-gnvim2:RemoveLicense", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveLicenseResponse)
		return soap_closesock(soap);
	gnvim2__RemoveLicenseResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveLicenseResponse.soap_get(soap, "gnvim2:RemoveLicenseResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DecodeLicense(const char *endpoint, const char *soap_action, gnvim2__DecodeLicenseRequestType *gnvim2__DecodeLicense, _gnvim2__DecodeLicenseResponse &gnvim2__DecodeLicenseResponse)
{	struct soap *soap = this;
	struct __gnvim2__DecodeLicense soap_tmp___gnvim2__DecodeLicense;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DecodeLicense.gnvim2__DecodeLicense = gnvim2__DecodeLicense;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DecodeLicense(soap, &soap_tmp___gnvim2__DecodeLicense);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DecodeLicense(soap, &soap_tmp___gnvim2__DecodeLicense, "-gnvim2:DecodeLicense", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DecodeLicense(soap, &soap_tmp___gnvim2__DecodeLicense, "-gnvim2:DecodeLicense", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DecodeLicenseResponse)
		return soap_closesock(soap);
	gnvim2__DecodeLicenseResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DecodeLicenseResponse.soap_get(soap, "gnvim2:DecodeLicenseResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateLicenseLabel(const char *endpoint, const char *soap_action, gnvim2__UpdateLicenseLabelRequestType *gnvim2__UpdateLicenseLabel, _gnvim2__UpdateLicenseLabelResponse &gnvim2__UpdateLicenseLabelResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateLicenseLabel soap_tmp___gnvim2__UpdateLicenseLabel;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateLicenseLabel.gnvim2__UpdateLicenseLabel = gnvim2__UpdateLicenseLabel;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateLicenseLabel(soap, &soap_tmp___gnvim2__UpdateLicenseLabel);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateLicenseLabel(soap, &soap_tmp___gnvim2__UpdateLicenseLabel, "-gnvim2:UpdateLicenseLabel", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateLicenseLabel(soap, &soap_tmp___gnvim2__UpdateLicenseLabel, "-gnvim2:UpdateLicenseLabel", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateLicenseLabelResponse)
		return soap_closesock(soap);
	gnvim2__UpdateLicenseLabelResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateLicenseLabelResponse.soap_get(soap, "gnvim2:UpdateLicenseLabelResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveLicenseLabel(const char *endpoint, const char *soap_action, gnvim2__RemoveLicenseLabelRequestType *gnvim2__RemoveLicenseLabel, _gnvim2__RemoveLicenseLabelResponse &gnvim2__RemoveLicenseLabelResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveLicenseLabel soap_tmp___gnvim2__RemoveLicenseLabel;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveLicenseLabel.gnvim2__RemoveLicenseLabel = gnvim2__RemoveLicenseLabel;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveLicenseLabel(soap, &soap_tmp___gnvim2__RemoveLicenseLabel);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveLicenseLabel(soap, &soap_tmp___gnvim2__RemoveLicenseLabel, "-gnvim2:RemoveLicenseLabel", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveLicenseLabel(soap, &soap_tmp___gnvim2__RemoveLicenseLabel, "-gnvim2:RemoveLicenseLabel", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveLicenseLabelResponse)
		return soap_closesock(soap);
	gnvim2__RemoveLicenseLabelResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveLicenseLabelResponse.soap_get(soap, "gnvim2:RemoveLicenseLabelResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::Reload(const char *endpoint, const char *soap_action, gnvim2__ReloadRequestType *gnvim2__Reload, _gnvim2__ReloadResponse &gnvim2__ReloadResponse)
{	struct soap *soap = this;
	struct __gnvim2__Reload soap_tmp___gnvim2__Reload;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__Reload.gnvim2__Reload = gnvim2__Reload;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__Reload(soap, &soap_tmp___gnvim2__Reload);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__Reload(soap, &soap_tmp___gnvim2__Reload, "-gnvim2:Reload", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__Reload(soap, &soap_tmp___gnvim2__Reload, "-gnvim2:Reload", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReloadResponse)
		return soap_closesock(soap);
	gnvim2__ReloadResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReloadResponse.soap_get(soap, "gnvim2:ReloadResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::Rename_USCORETask(const char *endpoint, const char *soap_action, gnvim2__RenameRequestType *gnvim2__Rename_USCORETask, _gnvim2__Rename_USCORETaskResponse &gnvim2__Rename_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__Rename_USCORETask soap_tmp___gnvim2__Rename_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__Rename_USCORETask.gnvim2__Rename_USCORETask = gnvim2__Rename_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__Rename_USCORETask(soap, &soap_tmp___gnvim2__Rename_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__Rename_USCORETask(soap, &soap_tmp___gnvim2__Rename_USCORETask, "-gnvim2:Rename_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__Rename_USCORETask(soap, &soap_tmp___gnvim2__Rename_USCORETask, "-gnvim2:Rename_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__Rename_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__Rename_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__Rename_USCORETaskResponse.soap_get(soap, "gnvim2:Rename_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::Destroy_USCORETask(const char *endpoint, const char *soap_action, gnvim2__DestroyRequestType *gnvim2__Destroy_USCORETask, _gnvim2__Destroy_USCORETaskResponse &gnvim2__Destroy_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__Destroy_USCORETask soap_tmp___gnvim2__Destroy_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__Destroy_USCORETask.gnvim2__Destroy_USCORETask = gnvim2__Destroy_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__Destroy_USCORETask(soap, &soap_tmp___gnvim2__Destroy_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__Destroy_USCORETask(soap, &soap_tmp___gnvim2__Destroy_USCORETask, "-gnvim2:Destroy_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__Destroy_USCORETask(soap, &soap_tmp___gnvim2__Destroy_USCORETask, "-gnvim2:Destroy_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__Destroy_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__Destroy_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__Destroy_USCORETaskResponse.soap_get(soap, "gnvim2:Destroy_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DestroyNetwork(const char *endpoint, const char *soap_action, gnvim2__DestroyNetworkRequestType *gnvim2__DestroyNetwork, _gnvim2__DestroyNetworkResponse &gnvim2__DestroyNetworkResponse)
{	struct soap *soap = this;
	struct __gnvim2__DestroyNetwork soap_tmp___gnvim2__DestroyNetwork;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DestroyNetwork.gnvim2__DestroyNetwork = gnvim2__DestroyNetwork;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DestroyNetwork(soap, &soap_tmp___gnvim2__DestroyNetwork);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DestroyNetwork(soap, &soap_tmp___gnvim2__DestroyNetwork, "-gnvim2:DestroyNetwork", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DestroyNetwork(soap, &soap_tmp___gnvim2__DestroyNetwork, "-gnvim2:DestroyNetwork", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DestroyNetworkResponse)
		return soap_closesock(soap);
	gnvim2__DestroyNetworkResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DestroyNetworkResponse.soap_get(soap, "gnvim2:DestroyNetworkResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::LookupVmOverheadMemory(const char *endpoint, const char *soap_action, gnvim2__LookupVmOverheadMemoryRequestType *gnvim2__LookupVmOverheadMemory, _gnvim2__LookupVmOverheadMemoryResponse &gnvim2__LookupVmOverheadMemoryResponse)
{	struct soap *soap = this;
	struct __gnvim2__LookupVmOverheadMemory soap_tmp___gnvim2__LookupVmOverheadMemory;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__LookupVmOverheadMemory.gnvim2__LookupVmOverheadMemory = gnvim2__LookupVmOverheadMemory;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__LookupVmOverheadMemory(soap, &soap_tmp___gnvim2__LookupVmOverheadMemory);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__LookupVmOverheadMemory(soap, &soap_tmp___gnvim2__LookupVmOverheadMemory, "-gnvim2:LookupVmOverheadMemory", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__LookupVmOverheadMemory(soap, &soap_tmp___gnvim2__LookupVmOverheadMemory, "-gnvim2:LookupVmOverheadMemory", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__LookupVmOverheadMemoryResponse)
		return soap_closesock(soap);
	gnvim2__LookupVmOverheadMemoryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__LookupVmOverheadMemoryResponse.soap_get(soap, "gnvim2:LookupVmOverheadMemoryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ValidateHost(const char *endpoint, const char *soap_action, gnvim2__ValidateHostRequestType *gnvim2__ValidateHost, _gnvim2__ValidateHostResponse &gnvim2__ValidateHostResponse)
{	struct soap *soap = this;
	struct __gnvim2__ValidateHost soap_tmp___gnvim2__ValidateHost;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ValidateHost.gnvim2__ValidateHost = gnvim2__ValidateHost;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ValidateHost(soap, &soap_tmp___gnvim2__ValidateHost);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ValidateHost(soap, &soap_tmp___gnvim2__ValidateHost, "-gnvim2:ValidateHost", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ValidateHost(soap, &soap_tmp___gnvim2__ValidateHost, "-gnvim2:ValidateHost", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ValidateHostResponse)
		return soap_closesock(soap);
	gnvim2__ValidateHostResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ValidateHostResponse.soap_get(soap, "gnvim2:ValidateHostResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ParseDescriptor(const char *endpoint, const char *soap_action, gnvim2__ParseDescriptorRequestType *gnvim2__ParseDescriptor, _gnvim2__ParseDescriptorResponse &gnvim2__ParseDescriptorResponse)
{	struct soap *soap = this;
	struct __gnvim2__ParseDescriptor soap_tmp___gnvim2__ParseDescriptor;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ParseDescriptor.gnvim2__ParseDescriptor = gnvim2__ParseDescriptor;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ParseDescriptor(soap, &soap_tmp___gnvim2__ParseDescriptor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ParseDescriptor(soap, &soap_tmp___gnvim2__ParseDescriptor, "-gnvim2:ParseDescriptor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ParseDescriptor(soap, &soap_tmp___gnvim2__ParseDescriptor, "-gnvim2:ParseDescriptor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ParseDescriptorResponse)
		return soap_closesock(soap);
	gnvim2__ParseDescriptorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ParseDescriptorResponse.soap_get(soap, "gnvim2:ParseDescriptorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateImportSpec(const char *endpoint, const char *soap_action, gnvim2__CreateImportSpecRequestType *gnvim2__CreateImportSpec, _gnvim2__CreateImportSpecResponse &gnvim2__CreateImportSpecResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateImportSpec soap_tmp___gnvim2__CreateImportSpec;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateImportSpec.gnvim2__CreateImportSpec = gnvim2__CreateImportSpec;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateImportSpec(soap, &soap_tmp___gnvim2__CreateImportSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateImportSpec(soap, &soap_tmp___gnvim2__CreateImportSpec, "-gnvim2:CreateImportSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateImportSpec(soap, &soap_tmp___gnvim2__CreateImportSpec, "-gnvim2:CreateImportSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateImportSpecResponse)
		return soap_closesock(soap);
	gnvim2__CreateImportSpecResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateImportSpecResponse.soap_get(soap, "gnvim2:CreateImportSpecResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateDescriptor(const char *endpoint, const char *soap_action, gnvim2__CreateDescriptorRequestType *gnvim2__CreateDescriptor, _gnvim2__CreateDescriptorResponse &gnvim2__CreateDescriptorResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateDescriptor soap_tmp___gnvim2__CreateDescriptor;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateDescriptor.gnvim2__CreateDescriptor = gnvim2__CreateDescriptor;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateDescriptor(soap, &soap_tmp___gnvim2__CreateDescriptor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateDescriptor(soap, &soap_tmp___gnvim2__CreateDescriptor, "-gnvim2:CreateDescriptor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateDescriptor(soap, &soap_tmp___gnvim2__CreateDescriptor, "-gnvim2:CreateDescriptor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateDescriptorResponse)
		return soap_closesock(soap);
	gnvim2__CreateDescriptorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateDescriptorResponse.soap_get(soap, "gnvim2:CreateDescriptorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryPerfProviderSummary(const char *endpoint, const char *soap_action, gnvim2__QueryPerfProviderSummaryRequestType *gnvim2__QueryPerfProviderSummary, _gnvim2__QueryPerfProviderSummaryResponse &gnvim2__QueryPerfProviderSummaryResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryPerfProviderSummary soap_tmp___gnvim2__QueryPerfProviderSummary;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryPerfProviderSummary.gnvim2__QueryPerfProviderSummary = gnvim2__QueryPerfProviderSummary;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryPerfProviderSummary(soap, &soap_tmp___gnvim2__QueryPerfProviderSummary);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryPerfProviderSummary(soap, &soap_tmp___gnvim2__QueryPerfProviderSummary, "-gnvim2:QueryPerfProviderSummary", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryPerfProviderSummary(soap, &soap_tmp___gnvim2__QueryPerfProviderSummary, "-gnvim2:QueryPerfProviderSummary", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryPerfProviderSummaryResponse)
		return soap_closesock(soap);
	gnvim2__QueryPerfProviderSummaryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryPerfProviderSummaryResponse.soap_get(soap, "gnvim2:QueryPerfProviderSummaryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryAvailablePerfMetric(const char *endpoint, const char *soap_action, gnvim2__QueryAvailablePerfMetricRequestType *gnvim2__QueryAvailablePerfMetric, _gnvim2__QueryAvailablePerfMetricResponse &gnvim2__QueryAvailablePerfMetricResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryAvailablePerfMetric soap_tmp___gnvim2__QueryAvailablePerfMetric;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryAvailablePerfMetric.gnvim2__QueryAvailablePerfMetric = gnvim2__QueryAvailablePerfMetric;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryAvailablePerfMetric(soap, &soap_tmp___gnvim2__QueryAvailablePerfMetric);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryAvailablePerfMetric(soap, &soap_tmp___gnvim2__QueryAvailablePerfMetric, "-gnvim2:QueryAvailablePerfMetric", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryAvailablePerfMetric(soap, &soap_tmp___gnvim2__QueryAvailablePerfMetric, "-gnvim2:QueryAvailablePerfMetric", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryAvailablePerfMetricResponse)
		return soap_closesock(soap);
	gnvim2__QueryAvailablePerfMetricResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryAvailablePerfMetricResponse.soap_get(soap, "gnvim2:QueryAvailablePerfMetricResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryPerfCounter(const char *endpoint, const char *soap_action, gnvim2__QueryPerfCounterRequestType *gnvim2__QueryPerfCounter, _gnvim2__QueryPerfCounterResponse &gnvim2__QueryPerfCounterResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryPerfCounter soap_tmp___gnvim2__QueryPerfCounter;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryPerfCounter.gnvim2__QueryPerfCounter = gnvim2__QueryPerfCounter;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryPerfCounter(soap, &soap_tmp___gnvim2__QueryPerfCounter);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryPerfCounter(soap, &soap_tmp___gnvim2__QueryPerfCounter, "-gnvim2:QueryPerfCounter", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryPerfCounter(soap, &soap_tmp___gnvim2__QueryPerfCounter, "-gnvim2:QueryPerfCounter", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryPerfCounterResponse)
		return soap_closesock(soap);
	gnvim2__QueryPerfCounterResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryPerfCounterResponse.soap_get(soap, "gnvim2:QueryPerfCounterResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryPerfCounterByLevel(const char *endpoint, const char *soap_action, gnvim2__QueryPerfCounterByLevelRequestType *gnvim2__QueryPerfCounterByLevel, _gnvim2__QueryPerfCounterByLevelResponse &gnvim2__QueryPerfCounterByLevelResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryPerfCounterByLevel soap_tmp___gnvim2__QueryPerfCounterByLevel;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryPerfCounterByLevel.gnvim2__QueryPerfCounterByLevel = gnvim2__QueryPerfCounterByLevel;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryPerfCounterByLevel(soap, &soap_tmp___gnvim2__QueryPerfCounterByLevel);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryPerfCounterByLevel(soap, &soap_tmp___gnvim2__QueryPerfCounterByLevel, "-gnvim2:QueryPerfCounterByLevel", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryPerfCounterByLevel(soap, &soap_tmp___gnvim2__QueryPerfCounterByLevel, "-gnvim2:QueryPerfCounterByLevel", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryPerfCounterByLevelResponse)
		return soap_closesock(soap);
	gnvim2__QueryPerfCounterByLevelResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryPerfCounterByLevelResponse.soap_get(soap, "gnvim2:QueryPerfCounterByLevelResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryPerf(const char *endpoint, const char *soap_action, gnvim2__QueryPerfRequestType *gnvim2__QueryPerf, _gnvim2__QueryPerfResponse &gnvim2__QueryPerfResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryPerf soap_tmp___gnvim2__QueryPerf;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryPerf.gnvim2__QueryPerf = gnvim2__QueryPerf;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryPerf(soap, &soap_tmp___gnvim2__QueryPerf);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryPerf(soap, &soap_tmp___gnvim2__QueryPerf, "-gnvim2:QueryPerf", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryPerf(soap, &soap_tmp___gnvim2__QueryPerf, "-gnvim2:QueryPerf", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryPerfResponse)
		return soap_closesock(soap);
	gnvim2__QueryPerfResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryPerfResponse.soap_get(soap, "gnvim2:QueryPerfResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryPerfComposite(const char *endpoint, const char *soap_action, gnvim2__QueryPerfCompositeRequestType *gnvim2__QueryPerfComposite, _gnvim2__QueryPerfCompositeResponse &gnvim2__QueryPerfCompositeResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryPerfComposite soap_tmp___gnvim2__QueryPerfComposite;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryPerfComposite.gnvim2__QueryPerfComposite = gnvim2__QueryPerfComposite;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryPerfComposite(soap, &soap_tmp___gnvim2__QueryPerfComposite);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryPerfComposite(soap, &soap_tmp___gnvim2__QueryPerfComposite, "-gnvim2:QueryPerfComposite", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryPerfComposite(soap, &soap_tmp___gnvim2__QueryPerfComposite, "-gnvim2:QueryPerfComposite", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryPerfCompositeResponse)
		return soap_closesock(soap);
	gnvim2__QueryPerfCompositeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryPerfCompositeResponse.soap_get(soap, "gnvim2:QueryPerfCompositeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreatePerfInterval(const char *endpoint, const char *soap_action, gnvim2__CreatePerfIntervalRequestType *gnvim2__CreatePerfInterval, _gnvim2__CreatePerfIntervalResponse &gnvim2__CreatePerfIntervalResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreatePerfInterval soap_tmp___gnvim2__CreatePerfInterval;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreatePerfInterval.gnvim2__CreatePerfInterval = gnvim2__CreatePerfInterval;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreatePerfInterval(soap, &soap_tmp___gnvim2__CreatePerfInterval);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreatePerfInterval(soap, &soap_tmp___gnvim2__CreatePerfInterval, "-gnvim2:CreatePerfInterval", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreatePerfInterval(soap, &soap_tmp___gnvim2__CreatePerfInterval, "-gnvim2:CreatePerfInterval", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreatePerfIntervalResponse)
		return soap_closesock(soap);
	gnvim2__CreatePerfIntervalResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreatePerfIntervalResponse.soap_get(soap, "gnvim2:CreatePerfIntervalResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemovePerfInterval(const char *endpoint, const char *soap_action, gnvim2__RemovePerfIntervalRequestType *gnvim2__RemovePerfInterval, _gnvim2__RemovePerfIntervalResponse &gnvim2__RemovePerfIntervalResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemovePerfInterval soap_tmp___gnvim2__RemovePerfInterval;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemovePerfInterval.gnvim2__RemovePerfInterval = gnvim2__RemovePerfInterval;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemovePerfInterval(soap, &soap_tmp___gnvim2__RemovePerfInterval);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemovePerfInterval(soap, &soap_tmp___gnvim2__RemovePerfInterval, "-gnvim2:RemovePerfInterval", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemovePerfInterval(soap, &soap_tmp___gnvim2__RemovePerfInterval, "-gnvim2:RemovePerfInterval", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemovePerfIntervalResponse)
		return soap_closesock(soap);
	gnvim2__RemovePerfIntervalResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemovePerfIntervalResponse.soap_get(soap, "gnvim2:RemovePerfIntervalResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdatePerfInterval(const char *endpoint, const char *soap_action, gnvim2__UpdatePerfIntervalRequestType *gnvim2__UpdatePerfInterval, _gnvim2__UpdatePerfIntervalResponse &gnvim2__UpdatePerfIntervalResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdatePerfInterval soap_tmp___gnvim2__UpdatePerfInterval;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdatePerfInterval.gnvim2__UpdatePerfInterval = gnvim2__UpdatePerfInterval;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdatePerfInterval(soap, &soap_tmp___gnvim2__UpdatePerfInterval);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdatePerfInterval(soap, &soap_tmp___gnvim2__UpdatePerfInterval, "-gnvim2:UpdatePerfInterval", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdatePerfInterval(soap, &soap_tmp___gnvim2__UpdatePerfInterval, "-gnvim2:UpdatePerfInterval", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdatePerfIntervalResponse)
		return soap_closesock(soap);
	gnvim2__UpdatePerfIntervalResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdatePerfIntervalResponse.soap_get(soap, "gnvim2:UpdatePerfIntervalResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateCounterLevelMapping(const char *endpoint, const char *soap_action, gnvim2__UpdateCounterLevelMappingRequestType *gnvim2__UpdateCounterLevelMapping, _gnvim2__UpdateCounterLevelMappingResponse &gnvim2__UpdateCounterLevelMappingResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateCounterLevelMapping soap_tmp___gnvim2__UpdateCounterLevelMapping;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateCounterLevelMapping.gnvim2__UpdateCounterLevelMapping = gnvim2__UpdateCounterLevelMapping;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateCounterLevelMapping(soap, &soap_tmp___gnvim2__UpdateCounterLevelMapping);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateCounterLevelMapping(soap, &soap_tmp___gnvim2__UpdateCounterLevelMapping, "-gnvim2:UpdateCounterLevelMapping", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateCounterLevelMapping(soap, &soap_tmp___gnvim2__UpdateCounterLevelMapping, "-gnvim2:UpdateCounterLevelMapping", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateCounterLevelMappingResponse)
		return soap_closesock(soap);
	gnvim2__UpdateCounterLevelMappingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateCounterLevelMappingResponse.soap_get(soap, "gnvim2:UpdateCounterLevelMappingResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResetCounterLevelMapping(const char *endpoint, const char *soap_action, gnvim2__ResetCounterLevelMappingRequestType *gnvim2__ResetCounterLevelMapping, _gnvim2__ResetCounterLevelMappingResponse &gnvim2__ResetCounterLevelMappingResponse)
{	struct soap *soap = this;
	struct __gnvim2__ResetCounterLevelMapping soap_tmp___gnvim2__ResetCounterLevelMapping;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ResetCounterLevelMapping.gnvim2__ResetCounterLevelMapping = gnvim2__ResetCounterLevelMapping;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ResetCounterLevelMapping(soap, &soap_tmp___gnvim2__ResetCounterLevelMapping);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ResetCounterLevelMapping(soap, &soap_tmp___gnvim2__ResetCounterLevelMapping, "-gnvim2:ResetCounterLevelMapping", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ResetCounterLevelMapping(soap, &soap_tmp___gnvim2__ResetCounterLevelMapping, "-gnvim2:ResetCounterLevelMapping", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ResetCounterLevelMappingResponse)
		return soap_closesock(soap);
	gnvim2__ResetCounterLevelMappingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ResetCounterLevelMappingResponse.soap_get(soap, "gnvim2:ResetCounterLevelMappingResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EstimateDatabaseSize(const char *endpoint, const char *soap_action, gnvim2__EstimateDatabaseSizeRequestType *gnvim2__EstimateDatabaseSize, _gnvim2__EstimateDatabaseSizeResponse &gnvim2__EstimateDatabaseSizeResponse)
{	struct soap *soap = this;
	struct __gnvim2__EstimateDatabaseSize soap_tmp___gnvim2__EstimateDatabaseSize;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__EstimateDatabaseSize.gnvim2__EstimateDatabaseSize = gnvim2__EstimateDatabaseSize;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__EstimateDatabaseSize(soap, &soap_tmp___gnvim2__EstimateDatabaseSize);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__EstimateDatabaseSize(soap, &soap_tmp___gnvim2__EstimateDatabaseSize, "-gnvim2:EstimateDatabaseSize", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__EstimateDatabaseSize(soap, &soap_tmp___gnvim2__EstimateDatabaseSize, "-gnvim2:EstimateDatabaseSize", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__EstimateDatabaseSizeResponse)
		return soap_closesock(soap);
	gnvim2__EstimateDatabaseSizeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__EstimateDatabaseSizeResponse.soap_get(soap, "gnvim2:EstimateDatabaseSizeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateConfig(const char *endpoint, const char *soap_action, gnvim2__UpdateConfigRequestType *gnvim2__UpdateConfig, _gnvim2__UpdateConfigResponse &gnvim2__UpdateConfigResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateConfig soap_tmp___gnvim2__UpdateConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateConfig.gnvim2__UpdateConfig = gnvim2__UpdateConfig;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateConfig(soap, &soap_tmp___gnvim2__UpdateConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateConfig(soap, &soap_tmp___gnvim2__UpdateConfig, "-gnvim2:UpdateConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateConfig(soap, &soap_tmp___gnvim2__UpdateConfig, "-gnvim2:UpdateConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateConfigResponse)
		return soap_closesock(soap);
	gnvim2__UpdateConfigResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateConfigResponse.soap_get(soap, "gnvim2:UpdateConfigResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MoveIntoResourcePool(const char *endpoint, const char *soap_action, gnvim2__MoveIntoResourcePoolRequestType *gnvim2__MoveIntoResourcePool, _gnvim2__MoveIntoResourcePoolResponse &gnvim2__MoveIntoResourcePoolResponse)
{	struct soap *soap = this;
	struct __gnvim2__MoveIntoResourcePool soap_tmp___gnvim2__MoveIntoResourcePool;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MoveIntoResourcePool.gnvim2__MoveIntoResourcePool = gnvim2__MoveIntoResourcePool;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MoveIntoResourcePool(soap, &soap_tmp___gnvim2__MoveIntoResourcePool);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MoveIntoResourcePool(soap, &soap_tmp___gnvim2__MoveIntoResourcePool, "-gnvim2:MoveIntoResourcePool", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MoveIntoResourcePool(soap, &soap_tmp___gnvim2__MoveIntoResourcePool, "-gnvim2:MoveIntoResourcePool", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MoveIntoResourcePoolResponse)
		return soap_closesock(soap);
	gnvim2__MoveIntoResourcePoolResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MoveIntoResourcePoolResponse.soap_get(soap, "gnvim2:MoveIntoResourcePoolResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateChildResourceConfiguration(const char *endpoint, const char *soap_action, gnvim2__UpdateChildResourceConfigurationRequestType *gnvim2__UpdateChildResourceConfiguration, _gnvim2__UpdateChildResourceConfigurationResponse &gnvim2__UpdateChildResourceConfigurationResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateChildResourceConfiguration soap_tmp___gnvim2__UpdateChildResourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateChildResourceConfiguration.gnvim2__UpdateChildResourceConfiguration = gnvim2__UpdateChildResourceConfiguration;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateChildResourceConfiguration(soap, &soap_tmp___gnvim2__UpdateChildResourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateChildResourceConfiguration(soap, &soap_tmp___gnvim2__UpdateChildResourceConfiguration, "-gnvim2:UpdateChildResourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateChildResourceConfiguration(soap, &soap_tmp___gnvim2__UpdateChildResourceConfiguration, "-gnvim2:UpdateChildResourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateChildResourceConfigurationResponse)
		return soap_closesock(soap);
	gnvim2__UpdateChildResourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateChildResourceConfigurationResponse.soap_get(soap, "gnvim2:UpdateChildResourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateResourcePool(const char *endpoint, const char *soap_action, gnvim2__CreateResourcePoolRequestType *gnvim2__CreateResourcePool, _gnvim2__CreateResourcePoolResponse &gnvim2__CreateResourcePoolResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateResourcePool soap_tmp___gnvim2__CreateResourcePool;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateResourcePool.gnvim2__CreateResourcePool = gnvim2__CreateResourcePool;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateResourcePool(soap, &soap_tmp___gnvim2__CreateResourcePool);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateResourcePool(soap, &soap_tmp___gnvim2__CreateResourcePool, "-gnvim2:CreateResourcePool", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateResourcePool(soap, &soap_tmp___gnvim2__CreateResourcePool, "-gnvim2:CreateResourcePool", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateResourcePoolResponse)
		return soap_closesock(soap);
	gnvim2__CreateResourcePoolResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateResourcePoolResponse.soap_get(soap, "gnvim2:CreateResourcePoolResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DestroyChildren(const char *endpoint, const char *soap_action, gnvim2__DestroyChildrenRequestType *gnvim2__DestroyChildren, _gnvim2__DestroyChildrenResponse &gnvim2__DestroyChildrenResponse)
{	struct soap *soap = this;
	struct __gnvim2__DestroyChildren soap_tmp___gnvim2__DestroyChildren;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DestroyChildren.gnvim2__DestroyChildren = gnvim2__DestroyChildren;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DestroyChildren(soap, &soap_tmp___gnvim2__DestroyChildren);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DestroyChildren(soap, &soap_tmp___gnvim2__DestroyChildren, "-gnvim2:DestroyChildren", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DestroyChildren(soap, &soap_tmp___gnvim2__DestroyChildren, "-gnvim2:DestroyChildren", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DestroyChildrenResponse)
		return soap_closesock(soap);
	gnvim2__DestroyChildrenResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DestroyChildrenResponse.soap_get(soap, "gnvim2:DestroyChildrenResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateVApp(const char *endpoint, const char *soap_action, gnvim2__CreateVAppRequestType *gnvim2__CreateVApp, _gnvim2__CreateVAppResponse &gnvim2__CreateVAppResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateVApp soap_tmp___gnvim2__CreateVApp;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateVApp.gnvim2__CreateVApp = gnvim2__CreateVApp;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateVApp(soap, &soap_tmp___gnvim2__CreateVApp);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateVApp(soap, &soap_tmp___gnvim2__CreateVApp, "-gnvim2:CreateVApp", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateVApp(soap, &soap_tmp___gnvim2__CreateVApp, "-gnvim2:CreateVApp", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateVAppResponse)
		return soap_closesock(soap);
	gnvim2__CreateVAppResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateVAppResponse.soap_get(soap, "gnvim2:CreateVAppResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateChildVM_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CreateChildVMRequestType *gnvim2__CreateChildVM_USCORETask, _gnvim2__CreateChildVM_USCORETaskResponse &gnvim2__CreateChildVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateChildVM_USCORETask soap_tmp___gnvim2__CreateChildVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateChildVM_USCORETask.gnvim2__CreateChildVM_USCORETask = gnvim2__CreateChildVM_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateChildVM_USCORETask(soap, &soap_tmp___gnvim2__CreateChildVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateChildVM_USCORETask(soap, &soap_tmp___gnvim2__CreateChildVM_USCORETask, "-gnvim2:CreateChildVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateChildVM_USCORETask(soap, &soap_tmp___gnvim2__CreateChildVM_USCORETask, "-gnvim2:CreateChildVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateChildVM_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CreateChildVM_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateChildVM_USCORETaskResponse.soap_get(soap, "gnvim2:CreateChildVM_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RegisterChildVM_USCORETask(const char *endpoint, const char *soap_action, gnvim2__RegisterChildVMRequestType *gnvim2__RegisterChildVM_USCORETask, _gnvim2__RegisterChildVM_USCORETaskResponse &gnvim2__RegisterChildVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__RegisterChildVM_USCORETask soap_tmp___gnvim2__RegisterChildVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RegisterChildVM_USCORETask.gnvim2__RegisterChildVM_USCORETask = gnvim2__RegisterChildVM_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RegisterChildVM_USCORETask(soap, &soap_tmp___gnvim2__RegisterChildVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RegisterChildVM_USCORETask(soap, &soap_tmp___gnvim2__RegisterChildVM_USCORETask, "-gnvim2:RegisterChildVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RegisterChildVM_USCORETask(soap, &soap_tmp___gnvim2__RegisterChildVM_USCORETask, "-gnvim2:RegisterChildVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RegisterChildVM_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__RegisterChildVM_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RegisterChildVM_USCORETaskResponse.soap_get(soap, "gnvim2:RegisterChildVM_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ImportVApp(const char *endpoint, const char *soap_action, gnvim2__ImportVAppRequestType *gnvim2__ImportVApp, _gnvim2__ImportVAppResponse &gnvim2__ImportVAppResponse)
{	struct soap *soap = this;
	struct __gnvim2__ImportVApp soap_tmp___gnvim2__ImportVApp;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ImportVApp.gnvim2__ImportVApp = gnvim2__ImportVApp;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ImportVApp(soap, &soap_tmp___gnvim2__ImportVApp);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ImportVApp(soap, &soap_tmp___gnvim2__ImportVApp, "-gnvim2:ImportVApp", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ImportVApp(soap, &soap_tmp___gnvim2__ImportVApp, "-gnvim2:ImportVApp", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ImportVAppResponse)
		return soap_closesock(soap);
	gnvim2__ImportVAppResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ImportVAppResponse.soap_get(soap, "gnvim2:ImportVAppResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryResourceConfigOption(const char *endpoint, const char *soap_action, gnvim2__QueryResourceConfigOptionRequestType *gnvim2__QueryResourceConfigOption, _gnvim2__QueryResourceConfigOptionResponse &gnvim2__QueryResourceConfigOptionResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryResourceConfigOption soap_tmp___gnvim2__QueryResourceConfigOption;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryResourceConfigOption.gnvim2__QueryResourceConfigOption = gnvim2__QueryResourceConfigOption;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryResourceConfigOption(soap, &soap_tmp___gnvim2__QueryResourceConfigOption);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryResourceConfigOption(soap, &soap_tmp___gnvim2__QueryResourceConfigOption, "-gnvim2:QueryResourceConfigOption", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryResourceConfigOption(soap, &soap_tmp___gnvim2__QueryResourceConfigOption, "-gnvim2:QueryResourceConfigOption", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryResourceConfigOptionResponse)
		return soap_closesock(soap);
	gnvim2__QueryResourceConfigOptionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryResourceConfigOptionResponse.soap_get(soap, "gnvim2:QueryResourceConfigOptionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshRuntime(const char *endpoint, const char *soap_action, gnvim2__RefreshRuntimeRequestType *gnvim2__RefreshRuntime, _gnvim2__RefreshRuntimeResponse &gnvim2__RefreshRuntimeResponse)
{	struct soap *soap = this;
	struct __gnvim2__RefreshRuntime soap_tmp___gnvim2__RefreshRuntime;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RefreshRuntime.gnvim2__RefreshRuntime = gnvim2__RefreshRuntime;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RefreshRuntime(soap, &soap_tmp___gnvim2__RefreshRuntime);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RefreshRuntime(soap, &soap_tmp___gnvim2__RefreshRuntime, "-gnvim2:RefreshRuntime", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RefreshRuntime(soap, &soap_tmp___gnvim2__RefreshRuntime, "-gnvim2:RefreshRuntime", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RefreshRuntimeResponse)
		return soap_closesock(soap);
	gnvim2__RefreshRuntimeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RefreshRuntimeResponse.soap_get(soap, "gnvim2:RefreshRuntimeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FindByUuid(const char *endpoint, const char *soap_action, gnvim2__FindByUuidRequestType *gnvim2__FindByUuid, _gnvim2__FindByUuidResponse &gnvim2__FindByUuidResponse)
{	struct soap *soap = this;
	struct __gnvim2__FindByUuid soap_tmp___gnvim2__FindByUuid;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__FindByUuid.gnvim2__FindByUuid = gnvim2__FindByUuid;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__FindByUuid(soap, &soap_tmp___gnvim2__FindByUuid);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__FindByUuid(soap, &soap_tmp___gnvim2__FindByUuid, "-gnvim2:FindByUuid", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__FindByUuid(soap, &soap_tmp___gnvim2__FindByUuid, "-gnvim2:FindByUuid", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__FindByUuidResponse)
		return soap_closesock(soap);
	gnvim2__FindByUuidResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__FindByUuidResponse.soap_get(soap, "gnvim2:FindByUuidResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FindByDatastorePath(const char *endpoint, const char *soap_action, gnvim2__FindByDatastorePathRequestType *gnvim2__FindByDatastorePath, _gnvim2__FindByDatastorePathResponse &gnvim2__FindByDatastorePathResponse)
{	struct soap *soap = this;
	struct __gnvim2__FindByDatastorePath soap_tmp___gnvim2__FindByDatastorePath;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__FindByDatastorePath.gnvim2__FindByDatastorePath = gnvim2__FindByDatastorePath;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__FindByDatastorePath(soap, &soap_tmp___gnvim2__FindByDatastorePath);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__FindByDatastorePath(soap, &soap_tmp___gnvim2__FindByDatastorePath, "-gnvim2:FindByDatastorePath", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__FindByDatastorePath(soap, &soap_tmp___gnvim2__FindByDatastorePath, "-gnvim2:FindByDatastorePath", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__FindByDatastorePathResponse)
		return soap_closesock(soap);
	gnvim2__FindByDatastorePathResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__FindByDatastorePathResponse.soap_get(soap, "gnvim2:FindByDatastorePathResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FindByDnsName(const char *endpoint, const char *soap_action, gnvim2__FindByDnsNameRequestType *gnvim2__FindByDnsName, _gnvim2__FindByDnsNameResponse &gnvim2__FindByDnsNameResponse)
{	struct soap *soap = this;
	struct __gnvim2__FindByDnsName soap_tmp___gnvim2__FindByDnsName;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__FindByDnsName.gnvim2__FindByDnsName = gnvim2__FindByDnsName;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__FindByDnsName(soap, &soap_tmp___gnvim2__FindByDnsName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__FindByDnsName(soap, &soap_tmp___gnvim2__FindByDnsName, "-gnvim2:FindByDnsName", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__FindByDnsName(soap, &soap_tmp___gnvim2__FindByDnsName, "-gnvim2:FindByDnsName", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__FindByDnsNameResponse)
		return soap_closesock(soap);
	gnvim2__FindByDnsNameResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__FindByDnsNameResponse.soap_get(soap, "gnvim2:FindByDnsNameResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FindByIp(const char *endpoint, const char *soap_action, gnvim2__FindByIpRequestType *gnvim2__FindByIp, _gnvim2__FindByIpResponse &gnvim2__FindByIpResponse)
{	struct soap *soap = this;
	struct __gnvim2__FindByIp soap_tmp___gnvim2__FindByIp;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__FindByIp.gnvim2__FindByIp = gnvim2__FindByIp;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__FindByIp(soap, &soap_tmp___gnvim2__FindByIp);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__FindByIp(soap, &soap_tmp___gnvim2__FindByIp, "-gnvim2:FindByIp", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__FindByIp(soap, &soap_tmp___gnvim2__FindByIp, "-gnvim2:FindByIp", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__FindByIpResponse)
		return soap_closesock(soap);
	gnvim2__FindByIpResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__FindByIpResponse.soap_get(soap, "gnvim2:FindByIpResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FindByInventoryPath(const char *endpoint, const char *soap_action, gnvim2__FindByInventoryPathRequestType *gnvim2__FindByInventoryPath, _gnvim2__FindByInventoryPathResponse &gnvim2__FindByInventoryPathResponse)
{	struct soap *soap = this;
	struct __gnvim2__FindByInventoryPath soap_tmp___gnvim2__FindByInventoryPath;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__FindByInventoryPath.gnvim2__FindByInventoryPath = gnvim2__FindByInventoryPath;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__FindByInventoryPath(soap, &soap_tmp___gnvim2__FindByInventoryPath);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__FindByInventoryPath(soap, &soap_tmp___gnvim2__FindByInventoryPath, "-gnvim2:FindByInventoryPath", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__FindByInventoryPath(soap, &soap_tmp___gnvim2__FindByInventoryPath, "-gnvim2:FindByInventoryPath", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__FindByInventoryPathResponse)
		return soap_closesock(soap);
	gnvim2__FindByInventoryPathResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__FindByInventoryPathResponse.soap_get(soap, "gnvim2:FindByInventoryPathResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FindChild(const char *endpoint, const char *soap_action, gnvim2__FindChildRequestType *gnvim2__FindChild, _gnvim2__FindChildResponse &gnvim2__FindChildResponse)
{	struct soap *soap = this;
	struct __gnvim2__FindChild soap_tmp___gnvim2__FindChild;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__FindChild.gnvim2__FindChild = gnvim2__FindChild;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__FindChild(soap, &soap_tmp___gnvim2__FindChild);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__FindChild(soap, &soap_tmp___gnvim2__FindChild, "-gnvim2:FindChild", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__FindChild(soap, &soap_tmp___gnvim2__FindChild, "-gnvim2:FindChild", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__FindChildResponse)
		return soap_closesock(soap);
	gnvim2__FindChildResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__FindChildResponse.soap_get(soap, "gnvim2:FindChildResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FindAllByUuid(const char *endpoint, const char *soap_action, gnvim2__FindAllByUuidRequestType *gnvim2__FindAllByUuid, _gnvim2__FindAllByUuidResponse &gnvim2__FindAllByUuidResponse)
{	struct soap *soap = this;
	struct __gnvim2__FindAllByUuid soap_tmp___gnvim2__FindAllByUuid;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__FindAllByUuid.gnvim2__FindAllByUuid = gnvim2__FindAllByUuid;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__FindAllByUuid(soap, &soap_tmp___gnvim2__FindAllByUuid);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__FindAllByUuid(soap, &soap_tmp___gnvim2__FindAllByUuid, "-gnvim2:FindAllByUuid", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__FindAllByUuid(soap, &soap_tmp___gnvim2__FindAllByUuid, "-gnvim2:FindAllByUuid", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__FindAllByUuidResponse)
		return soap_closesock(soap);
	gnvim2__FindAllByUuidResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__FindAllByUuidResponse.soap_get(soap, "gnvim2:FindAllByUuidResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FindAllByDnsName(const char *endpoint, const char *soap_action, gnvim2__FindAllByDnsNameRequestType *gnvim2__FindAllByDnsName, _gnvim2__FindAllByDnsNameResponse &gnvim2__FindAllByDnsNameResponse)
{	struct soap *soap = this;
	struct __gnvim2__FindAllByDnsName soap_tmp___gnvim2__FindAllByDnsName;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__FindAllByDnsName.gnvim2__FindAllByDnsName = gnvim2__FindAllByDnsName;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__FindAllByDnsName(soap, &soap_tmp___gnvim2__FindAllByDnsName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__FindAllByDnsName(soap, &soap_tmp___gnvim2__FindAllByDnsName, "-gnvim2:FindAllByDnsName", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__FindAllByDnsName(soap, &soap_tmp___gnvim2__FindAllByDnsName, "-gnvim2:FindAllByDnsName", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__FindAllByDnsNameResponse)
		return soap_closesock(soap);
	gnvim2__FindAllByDnsNameResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__FindAllByDnsNameResponse.soap_get(soap, "gnvim2:FindAllByDnsNameResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FindAllByIp(const char *endpoint, const char *soap_action, gnvim2__FindAllByIpRequestType *gnvim2__FindAllByIp, _gnvim2__FindAllByIpResponse &gnvim2__FindAllByIpResponse)
{	struct soap *soap = this;
	struct __gnvim2__FindAllByIp soap_tmp___gnvim2__FindAllByIp;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__FindAllByIp.gnvim2__FindAllByIp = gnvim2__FindAllByIp;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__FindAllByIp(soap, &soap_tmp___gnvim2__FindAllByIp);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__FindAllByIp(soap, &soap_tmp___gnvim2__FindAllByIp, "-gnvim2:FindAllByIp", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__FindAllByIp(soap, &soap_tmp___gnvim2__FindAllByIp, "-gnvim2:FindAllByIp", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__FindAllByIpResponse)
		return soap_closesock(soap);
	gnvim2__FindAllByIpResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__FindAllByIpResponse.soap_get(soap, "gnvim2:FindAllByIpResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CurrentTime(const char *endpoint, const char *soap_action, gnvim2__CurrentTimeRequestType *gnvim2__CurrentTime, _gnvim2__CurrentTimeResponse &gnvim2__CurrentTimeResponse)
{	struct soap *soap = this;
	struct __gnvim2__CurrentTime soap_tmp___gnvim2__CurrentTime;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CurrentTime.gnvim2__CurrentTime = gnvim2__CurrentTime;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CurrentTime(soap, &soap_tmp___gnvim2__CurrentTime);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CurrentTime(soap, &soap_tmp___gnvim2__CurrentTime, "-gnvim2:CurrentTime", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CurrentTime(soap, &soap_tmp___gnvim2__CurrentTime, "-gnvim2:CurrentTime", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CurrentTimeResponse)
		return soap_closesock(soap);
	gnvim2__CurrentTimeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CurrentTimeResponse.soap_get(soap, "gnvim2:CurrentTimeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveServiceContent(const char *endpoint, const char *soap_action, gnvim2__RetrieveServiceContentRequestType *gnvim2__RetrieveServiceContent, _gnvim2__RetrieveServiceContentResponse &gnvim2__RetrieveServiceContentResponse)
{	struct soap *soap = this;
	struct __gnvim2__RetrieveServiceContent soap_tmp___gnvim2__RetrieveServiceContent;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RetrieveServiceContent.gnvim2__RetrieveServiceContent = gnvim2__RetrieveServiceContent;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RetrieveServiceContent(soap, &soap_tmp___gnvim2__RetrieveServiceContent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RetrieveServiceContent(soap, &soap_tmp___gnvim2__RetrieveServiceContent, "-gnvim2:RetrieveServiceContent", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RetrieveServiceContent(soap, &soap_tmp___gnvim2__RetrieveServiceContent, "-gnvim2:RetrieveServiceContent", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RetrieveServiceContentResponse)
		return soap_closesock(soap);
	gnvim2__RetrieveServiceContentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RetrieveServiceContentResponse.soap_get(soap, "gnvim2:RetrieveServiceContentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ValidateMigration(const char *endpoint, const char *soap_action, gnvim2__ValidateMigrationRequestType *gnvim2__ValidateMigration, _gnvim2__ValidateMigrationResponse &gnvim2__ValidateMigrationResponse)
{	struct soap *soap = this;
	struct __gnvim2__ValidateMigration soap_tmp___gnvim2__ValidateMigration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ValidateMigration.gnvim2__ValidateMigration = gnvim2__ValidateMigration;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ValidateMigration(soap, &soap_tmp___gnvim2__ValidateMigration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ValidateMigration(soap, &soap_tmp___gnvim2__ValidateMigration, "-gnvim2:ValidateMigration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ValidateMigration(soap, &soap_tmp___gnvim2__ValidateMigration, "-gnvim2:ValidateMigration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ValidateMigrationResponse)
		return soap_closesock(soap);
	gnvim2__ValidateMigrationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ValidateMigrationResponse.soap_get(soap, "gnvim2:ValidateMigrationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryVMotionCompatibility(const char *endpoint, const char *soap_action, gnvim2__QueryVMotionCompatibilityRequestType *gnvim2__QueryVMotionCompatibility, _gnvim2__QueryVMotionCompatibilityResponse &gnvim2__QueryVMotionCompatibilityResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryVMotionCompatibility soap_tmp___gnvim2__QueryVMotionCompatibility;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryVMotionCompatibility.gnvim2__QueryVMotionCompatibility = gnvim2__QueryVMotionCompatibility;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryVMotionCompatibility(soap, &soap_tmp___gnvim2__QueryVMotionCompatibility);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryVMotionCompatibility(soap, &soap_tmp___gnvim2__QueryVMotionCompatibility, "-gnvim2:QueryVMotionCompatibility", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryVMotionCompatibility(soap, &soap_tmp___gnvim2__QueryVMotionCompatibility, "-gnvim2:QueryVMotionCompatibility", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryVMotionCompatibilityResponse)
		return soap_closesock(soap);
	gnvim2__QueryVMotionCompatibilityResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryVMotionCompatibilityResponse.soap_get(soap, "gnvim2:QueryVMotionCompatibilityResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveProductComponents(const char *endpoint, const char *soap_action, gnvim2__RetrieveProductComponentsRequestType *gnvim2__RetrieveProductComponents, _gnvim2__RetrieveProductComponentsResponse &gnvim2__RetrieveProductComponentsResponse)
{	struct soap *soap = this;
	struct __gnvim2__RetrieveProductComponents soap_tmp___gnvim2__RetrieveProductComponents;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RetrieveProductComponents.gnvim2__RetrieveProductComponents = gnvim2__RetrieveProductComponents;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RetrieveProductComponents(soap, &soap_tmp___gnvim2__RetrieveProductComponents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RetrieveProductComponents(soap, &soap_tmp___gnvim2__RetrieveProductComponents, "-gnvim2:RetrieveProductComponents", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RetrieveProductComponents(soap, &soap_tmp___gnvim2__RetrieveProductComponents, "-gnvim2:RetrieveProductComponents", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RetrieveProductComponentsResponse)
		return soap_closesock(soap);
	gnvim2__RetrieveProductComponentsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RetrieveProductComponentsResponse.soap_get(soap, "gnvim2:RetrieveProductComponentsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryServiceList(const char *endpoint, const char *soap_action, gnvim2__QueryServiceListRequestType *gnvim2__QueryServiceList, _gnvim2__QueryServiceListResponse &gnvim2__QueryServiceListResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryServiceList soap_tmp___gnvim2__QueryServiceList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryServiceList.gnvim2__QueryServiceList = gnvim2__QueryServiceList;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryServiceList(soap, &soap_tmp___gnvim2__QueryServiceList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryServiceList(soap, &soap_tmp___gnvim2__QueryServiceList, "-gnvim2:QueryServiceList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryServiceList(soap, &soap_tmp___gnvim2__QueryServiceList, "-gnvim2:QueryServiceList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryServiceListResponse)
		return soap_closesock(soap);
	gnvim2__QueryServiceListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryServiceListResponse.soap_get(soap, "gnvim2:QueryServiceListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateServiceMessage(const char *endpoint, const char *soap_action, gnvim2__UpdateServiceMessageRequestType *gnvim2__UpdateServiceMessage, _gnvim2__UpdateServiceMessageResponse &gnvim2__UpdateServiceMessageResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateServiceMessage soap_tmp___gnvim2__UpdateServiceMessage;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateServiceMessage.gnvim2__UpdateServiceMessage = gnvim2__UpdateServiceMessage;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateServiceMessage(soap, &soap_tmp___gnvim2__UpdateServiceMessage);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateServiceMessage(soap, &soap_tmp___gnvim2__UpdateServiceMessage, "-gnvim2:UpdateServiceMessage", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateServiceMessage(soap, &soap_tmp___gnvim2__UpdateServiceMessage, "-gnvim2:UpdateServiceMessage", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateServiceMessageResponse)
		return soap_closesock(soap);
	gnvim2__UpdateServiceMessageResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateServiceMessageResponse.soap_get(soap, "gnvim2:UpdateServiceMessageResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::LoginByToken(const char *endpoint, const char *soap_action, gnvim2__LoginByTokenRequestType *gnvim2__LoginByToken, _gnvim2__LoginByTokenResponse &gnvim2__LoginByTokenResponse)
{	struct soap *soap = this;
	struct __gnvim2__LoginByToken soap_tmp___gnvim2__LoginByToken;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__LoginByToken.gnvim2__LoginByToken = gnvim2__LoginByToken;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__LoginByToken(soap, &soap_tmp___gnvim2__LoginByToken);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__LoginByToken(soap, &soap_tmp___gnvim2__LoginByToken, "-gnvim2:LoginByToken", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__LoginByToken(soap, &soap_tmp___gnvim2__LoginByToken, "-gnvim2:LoginByToken", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__LoginByTokenResponse)
		return soap_closesock(soap);
	gnvim2__LoginByTokenResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__LoginByTokenResponse.soap_get(soap, "gnvim2:LoginByTokenResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::Login(const char *endpoint, const char *soap_action, gnvim2__LoginRequestType *gnvim2__Login, _gnvim2__LoginResponse &gnvim2__LoginResponse)
{	struct soap *soap = this;
	struct __gnvim2__Login soap_tmp___gnvim2__Login;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__Login.gnvim2__Login = gnvim2__Login;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__Login(soap, &soap_tmp___gnvim2__Login);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__Login(soap, &soap_tmp___gnvim2__Login, "-gnvim2:Login", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__Login(soap, &soap_tmp___gnvim2__Login, "-gnvim2:Login", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__LoginResponse)
		return soap_closesock(soap);
	gnvim2__LoginResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__LoginResponse.soap_get(soap, "gnvim2:LoginResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::LoginBySSPI(const char *endpoint, const char *soap_action, gnvim2__LoginBySSPIRequestType *gnvim2__LoginBySSPI, _gnvim2__LoginBySSPIResponse &gnvim2__LoginBySSPIResponse)
{	struct soap *soap = this;
	struct __gnvim2__LoginBySSPI soap_tmp___gnvim2__LoginBySSPI;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__LoginBySSPI.gnvim2__LoginBySSPI = gnvim2__LoginBySSPI;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__LoginBySSPI(soap, &soap_tmp___gnvim2__LoginBySSPI);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__LoginBySSPI(soap, &soap_tmp___gnvim2__LoginBySSPI, "-gnvim2:LoginBySSPI", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__LoginBySSPI(soap, &soap_tmp___gnvim2__LoginBySSPI, "-gnvim2:LoginBySSPI", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__LoginBySSPIResponse)
		return soap_closesock(soap);
	gnvim2__LoginBySSPIResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__LoginBySSPIResponse.soap_get(soap, "gnvim2:LoginBySSPIResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::Logout(const char *endpoint, const char *soap_action, gnvim2__LogoutRequestType *gnvim2__Logout, _gnvim2__LogoutResponse &gnvim2__LogoutResponse)
{	struct soap *soap = this;
	struct __gnvim2__Logout soap_tmp___gnvim2__Logout;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__Logout.gnvim2__Logout = gnvim2__Logout;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__Logout(soap, &soap_tmp___gnvim2__Logout);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__Logout(soap, &soap_tmp___gnvim2__Logout, "-gnvim2:Logout", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__Logout(soap, &soap_tmp___gnvim2__Logout, "-gnvim2:Logout", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__LogoutResponse)
		return soap_closesock(soap);
	gnvim2__LogoutResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__LogoutResponse.soap_get(soap, "gnvim2:LogoutResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AcquireLocalTicket(const char *endpoint, const char *soap_action, gnvim2__AcquireLocalTicketRequestType *gnvim2__AcquireLocalTicket, _gnvim2__AcquireLocalTicketResponse &gnvim2__AcquireLocalTicketResponse)
{	struct soap *soap = this;
	struct __gnvim2__AcquireLocalTicket soap_tmp___gnvim2__AcquireLocalTicket;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AcquireLocalTicket.gnvim2__AcquireLocalTicket = gnvim2__AcquireLocalTicket;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AcquireLocalTicket(soap, &soap_tmp___gnvim2__AcquireLocalTicket);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AcquireLocalTicket(soap, &soap_tmp___gnvim2__AcquireLocalTicket, "-gnvim2:AcquireLocalTicket", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AcquireLocalTicket(soap, &soap_tmp___gnvim2__AcquireLocalTicket, "-gnvim2:AcquireLocalTicket", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AcquireLocalTicketResponse)
		return soap_closesock(soap);
	gnvim2__AcquireLocalTicketResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AcquireLocalTicketResponse.soap_get(soap, "gnvim2:AcquireLocalTicketResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AcquireGenericServiceTicket(const char *endpoint, const char *soap_action, gnvim2__AcquireGenericServiceTicketRequestType *gnvim2__AcquireGenericServiceTicket, _gnvim2__AcquireGenericServiceTicketResponse &gnvim2__AcquireGenericServiceTicketResponse)
{	struct soap *soap = this;
	struct __gnvim2__AcquireGenericServiceTicket soap_tmp___gnvim2__AcquireGenericServiceTicket;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AcquireGenericServiceTicket.gnvim2__AcquireGenericServiceTicket = gnvim2__AcquireGenericServiceTicket;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AcquireGenericServiceTicket(soap, &soap_tmp___gnvim2__AcquireGenericServiceTicket);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AcquireGenericServiceTicket(soap, &soap_tmp___gnvim2__AcquireGenericServiceTicket, "-gnvim2:AcquireGenericServiceTicket", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AcquireGenericServiceTicket(soap, &soap_tmp___gnvim2__AcquireGenericServiceTicket, "-gnvim2:AcquireGenericServiceTicket", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AcquireGenericServiceTicketResponse)
		return soap_closesock(soap);
	gnvim2__AcquireGenericServiceTicketResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AcquireGenericServiceTicketResponse.soap_get(soap, "gnvim2:AcquireGenericServiceTicketResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::TerminateSession(const char *endpoint, const char *soap_action, gnvim2__TerminateSessionRequestType *gnvim2__TerminateSession, _gnvim2__TerminateSessionResponse &gnvim2__TerminateSessionResponse)
{	struct soap *soap = this;
	struct __gnvim2__TerminateSession soap_tmp___gnvim2__TerminateSession;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__TerminateSession.gnvim2__TerminateSession = gnvim2__TerminateSession;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__TerminateSession(soap, &soap_tmp___gnvim2__TerminateSession);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__TerminateSession(soap, &soap_tmp___gnvim2__TerminateSession, "-gnvim2:TerminateSession", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__TerminateSession(soap, &soap_tmp___gnvim2__TerminateSession, "-gnvim2:TerminateSession", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__TerminateSessionResponse)
		return soap_closesock(soap);
	gnvim2__TerminateSessionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__TerminateSessionResponse.soap_get(soap, "gnvim2:TerminateSessionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetLocale(const char *endpoint, const char *soap_action, gnvim2__SetLocaleRequestType *gnvim2__SetLocale, _gnvim2__SetLocaleResponse &gnvim2__SetLocaleResponse)
{	struct soap *soap = this;
	struct __gnvim2__SetLocale soap_tmp___gnvim2__SetLocale;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SetLocale.gnvim2__SetLocale = gnvim2__SetLocale;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SetLocale(soap, &soap_tmp___gnvim2__SetLocale);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SetLocale(soap, &soap_tmp___gnvim2__SetLocale, "-gnvim2:SetLocale", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SetLocale(soap, &soap_tmp___gnvim2__SetLocale, "-gnvim2:SetLocale", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SetLocaleResponse)
		return soap_closesock(soap);
	gnvim2__SetLocaleResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SetLocaleResponse.soap_get(soap, "gnvim2:SetLocaleResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::LoginExtensionBySubjectName(const char *endpoint, const char *soap_action, gnvim2__LoginExtensionBySubjectNameRequestType *gnvim2__LoginExtensionBySubjectName, _gnvim2__LoginExtensionBySubjectNameResponse &gnvim2__LoginExtensionBySubjectNameResponse)
{	struct soap *soap = this;
	struct __gnvim2__LoginExtensionBySubjectName soap_tmp___gnvim2__LoginExtensionBySubjectName;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__LoginExtensionBySubjectName.gnvim2__LoginExtensionBySubjectName = gnvim2__LoginExtensionBySubjectName;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__LoginExtensionBySubjectName(soap, &soap_tmp___gnvim2__LoginExtensionBySubjectName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__LoginExtensionBySubjectName(soap, &soap_tmp___gnvim2__LoginExtensionBySubjectName, "-gnvim2:LoginExtensionBySubjectName", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__LoginExtensionBySubjectName(soap, &soap_tmp___gnvim2__LoginExtensionBySubjectName, "-gnvim2:LoginExtensionBySubjectName", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__LoginExtensionBySubjectNameResponse)
		return soap_closesock(soap);
	gnvim2__LoginExtensionBySubjectNameResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__LoginExtensionBySubjectNameResponse.soap_get(soap, "gnvim2:LoginExtensionBySubjectNameResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::LoginExtensionByCertificate(const char *endpoint, const char *soap_action, gnvim2__LoginExtensionByCertificateRequestType *gnvim2__LoginExtensionByCertificate, _gnvim2__LoginExtensionByCertificateResponse &gnvim2__LoginExtensionByCertificateResponse)
{	struct soap *soap = this;
	struct __gnvim2__LoginExtensionByCertificate soap_tmp___gnvim2__LoginExtensionByCertificate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__LoginExtensionByCertificate.gnvim2__LoginExtensionByCertificate = gnvim2__LoginExtensionByCertificate;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__LoginExtensionByCertificate(soap, &soap_tmp___gnvim2__LoginExtensionByCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__LoginExtensionByCertificate(soap, &soap_tmp___gnvim2__LoginExtensionByCertificate, "-gnvim2:LoginExtensionByCertificate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__LoginExtensionByCertificate(soap, &soap_tmp___gnvim2__LoginExtensionByCertificate, "-gnvim2:LoginExtensionByCertificate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__LoginExtensionByCertificateResponse)
		return soap_closesock(soap);
	gnvim2__LoginExtensionByCertificateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__LoginExtensionByCertificateResponse.soap_get(soap, "gnvim2:LoginExtensionByCertificateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ImpersonateUser(const char *endpoint, const char *soap_action, gnvim2__ImpersonateUserRequestType *gnvim2__ImpersonateUser, _gnvim2__ImpersonateUserResponse &gnvim2__ImpersonateUserResponse)
{	struct soap *soap = this;
	struct __gnvim2__ImpersonateUser soap_tmp___gnvim2__ImpersonateUser;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ImpersonateUser.gnvim2__ImpersonateUser = gnvim2__ImpersonateUser;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ImpersonateUser(soap, &soap_tmp___gnvim2__ImpersonateUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ImpersonateUser(soap, &soap_tmp___gnvim2__ImpersonateUser, "-gnvim2:ImpersonateUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ImpersonateUser(soap, &soap_tmp___gnvim2__ImpersonateUser, "-gnvim2:ImpersonateUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ImpersonateUserResponse)
		return soap_closesock(soap);
	gnvim2__ImpersonateUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ImpersonateUserResponse.soap_get(soap, "gnvim2:ImpersonateUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SessionIsActive(const char *endpoint, const char *soap_action, gnvim2__SessionIsActiveRequestType *gnvim2__SessionIsActive, _gnvim2__SessionIsActiveResponse &gnvim2__SessionIsActiveResponse)
{	struct soap *soap = this;
	struct __gnvim2__SessionIsActive soap_tmp___gnvim2__SessionIsActive;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SessionIsActive.gnvim2__SessionIsActive = gnvim2__SessionIsActive;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SessionIsActive(soap, &soap_tmp___gnvim2__SessionIsActive);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SessionIsActive(soap, &soap_tmp___gnvim2__SessionIsActive, "-gnvim2:SessionIsActive", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SessionIsActive(soap, &soap_tmp___gnvim2__SessionIsActive, "-gnvim2:SessionIsActive", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SessionIsActiveResponse)
		return soap_closesock(soap);
	gnvim2__SessionIsActiveResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SessionIsActiveResponse.soap_get(soap, "gnvim2:SessionIsActiveResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AcquireCloneTicket(const char *endpoint, const char *soap_action, gnvim2__AcquireCloneTicketRequestType *gnvim2__AcquireCloneTicket, _gnvim2__AcquireCloneTicketResponse &gnvim2__AcquireCloneTicketResponse)
{	struct soap *soap = this;
	struct __gnvim2__AcquireCloneTicket soap_tmp___gnvim2__AcquireCloneTicket;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AcquireCloneTicket.gnvim2__AcquireCloneTicket = gnvim2__AcquireCloneTicket;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AcquireCloneTicket(soap, &soap_tmp___gnvim2__AcquireCloneTicket);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AcquireCloneTicket(soap, &soap_tmp___gnvim2__AcquireCloneTicket, "-gnvim2:AcquireCloneTicket", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AcquireCloneTicket(soap, &soap_tmp___gnvim2__AcquireCloneTicket, "-gnvim2:AcquireCloneTicket", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AcquireCloneTicketResponse)
		return soap_closesock(soap);
	gnvim2__AcquireCloneTicketResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AcquireCloneTicketResponse.soap_get(soap, "gnvim2:AcquireCloneTicketResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CloneSession(const char *endpoint, const char *soap_action, gnvim2__CloneSessionRequestType *gnvim2__CloneSession, _gnvim2__CloneSessionResponse &gnvim2__CloneSessionResponse)
{	struct soap *soap = this;
	struct __gnvim2__CloneSession soap_tmp___gnvim2__CloneSession;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CloneSession.gnvim2__CloneSession = gnvim2__CloneSession;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CloneSession(soap, &soap_tmp___gnvim2__CloneSession);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CloneSession(soap, &soap_tmp___gnvim2__CloneSession, "-gnvim2:CloneSession", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CloneSession(soap, &soap_tmp___gnvim2__CloneSession, "-gnvim2:CloneSession", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CloneSessionResponse)
		return soap_closesock(soap);
	gnvim2__CloneSessionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CloneSessionResponse.soap_get(soap, "gnvim2:CloneSessionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExecuteSimpleCommand(const char *endpoint, const char *soap_action, gnvim2__ExecuteSimpleCommandRequestType *gnvim2__ExecuteSimpleCommand, _gnvim2__ExecuteSimpleCommandResponse &gnvim2__ExecuteSimpleCommandResponse)
{	struct soap *soap = this;
	struct __gnvim2__ExecuteSimpleCommand soap_tmp___gnvim2__ExecuteSimpleCommand;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ExecuteSimpleCommand.gnvim2__ExecuteSimpleCommand = gnvim2__ExecuteSimpleCommand;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ExecuteSimpleCommand(soap, &soap_tmp___gnvim2__ExecuteSimpleCommand);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ExecuteSimpleCommand(soap, &soap_tmp___gnvim2__ExecuteSimpleCommand, "-gnvim2:ExecuteSimpleCommand", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ExecuteSimpleCommand(soap, &soap_tmp___gnvim2__ExecuteSimpleCommand, "-gnvim2:ExecuteSimpleCommand", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ExecuteSimpleCommandResponse)
		return soap_closesock(soap);
	gnvim2__ExecuteSimpleCommandResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ExecuteSimpleCommandResponse.soap_get(soap, "gnvim2:ExecuteSimpleCommandResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ConfigureDatastoreIORM_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ConfigureDatastoreIORMRequestType *gnvim2__ConfigureDatastoreIORM_USCORETask, _gnvim2__ConfigureDatastoreIORM_USCORETaskResponse &gnvim2__ConfigureDatastoreIORM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ConfigureDatastoreIORM_USCORETask soap_tmp___gnvim2__ConfigureDatastoreIORM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ConfigureDatastoreIORM_USCORETask.gnvim2__ConfigureDatastoreIORM_USCORETask = gnvim2__ConfigureDatastoreIORM_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ConfigureDatastoreIORM_USCORETask(soap, &soap_tmp___gnvim2__ConfigureDatastoreIORM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ConfigureDatastoreIORM_USCORETask(soap, &soap_tmp___gnvim2__ConfigureDatastoreIORM_USCORETask, "-gnvim2:ConfigureDatastoreIORM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ConfigureDatastoreIORM_USCORETask(soap, &soap_tmp___gnvim2__ConfigureDatastoreIORM_USCORETask, "-gnvim2:ConfigureDatastoreIORM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ConfigureDatastoreIORM_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ConfigureDatastoreIORM_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ConfigureDatastoreIORM_USCORETaskResponse.soap_get(soap, "gnvim2:ConfigureDatastoreIORM_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryIORMConfigOption(const char *endpoint, const char *soap_action, gnvim2__QueryIORMConfigOptionRequestType *gnvim2__QueryIORMConfigOption, _gnvim2__QueryIORMConfigOptionResponse &gnvim2__QueryIORMConfigOptionResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryIORMConfigOption soap_tmp___gnvim2__QueryIORMConfigOption;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryIORMConfigOption.gnvim2__QueryIORMConfigOption = gnvim2__QueryIORMConfigOption;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryIORMConfigOption(soap, &soap_tmp___gnvim2__QueryIORMConfigOption);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryIORMConfigOption(soap, &soap_tmp___gnvim2__QueryIORMConfigOption, "-gnvim2:QueryIORMConfigOption", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryIORMConfigOption(soap, &soap_tmp___gnvim2__QueryIORMConfigOption, "-gnvim2:QueryIORMConfigOption", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryIORMConfigOptionResponse)
		return soap_closesock(soap);
	gnvim2__QueryIORMConfigOptionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryIORMConfigOptionResponse.soap_get(soap, "gnvim2:QueryIORMConfigOptionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryDatastorePerformanceSummary(const char *endpoint, const char *soap_action, gnvim2__QueryDatastorePerformanceSummaryRequestType *gnvim2__QueryDatastorePerformanceSummary, _gnvim2__QueryDatastorePerformanceSummaryResponse &gnvim2__QueryDatastorePerformanceSummaryResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryDatastorePerformanceSummary soap_tmp___gnvim2__QueryDatastorePerformanceSummary;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryDatastorePerformanceSummary.gnvim2__QueryDatastorePerformanceSummary = gnvim2__QueryDatastorePerformanceSummary;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryDatastorePerformanceSummary(soap, &soap_tmp___gnvim2__QueryDatastorePerformanceSummary);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryDatastorePerformanceSummary(soap, &soap_tmp___gnvim2__QueryDatastorePerformanceSummary, "-gnvim2:QueryDatastorePerformanceSummary", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryDatastorePerformanceSummary(soap, &soap_tmp___gnvim2__QueryDatastorePerformanceSummary, "-gnvim2:QueryDatastorePerformanceSummary", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryDatastorePerformanceSummaryResponse)
		return soap_closesock(soap);
	gnvim2__QueryDatastorePerformanceSummaryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryDatastorePerformanceSummaryResponse.soap_get(soap, "gnvim2:QueryDatastorePerformanceSummaryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ApplyStorageDrsRecommendationToPod_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ApplyStorageDrsRecommendationToPodRequestType *gnvim2__ApplyStorageDrsRecommendationToPod_USCORETask, _gnvim2__ApplyStorageDrsRecommendationToPod_USCORETaskResponse &gnvim2__ApplyStorageDrsRecommendationToPod_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ApplyStorageDrsRecommendationToPod_USCORETask soap_tmp___gnvim2__ApplyStorageDrsRecommendationToPod_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ApplyStorageDrsRecommendationToPod_USCORETask.gnvim2__ApplyStorageDrsRecommendationToPod_USCORETask = gnvim2__ApplyStorageDrsRecommendationToPod_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ApplyStorageDrsRecommendationToPod_USCORETask(soap, &soap_tmp___gnvim2__ApplyStorageDrsRecommendationToPod_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ApplyStorageDrsRecommendationToPod_USCORETask(soap, &soap_tmp___gnvim2__ApplyStorageDrsRecommendationToPod_USCORETask, "-gnvim2:ApplyStorageDrsRecommendationToPod_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ApplyStorageDrsRecommendationToPod_USCORETask(soap, &soap_tmp___gnvim2__ApplyStorageDrsRecommendationToPod_USCORETask, "-gnvim2:ApplyStorageDrsRecommendationToPod_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ApplyStorageDrsRecommendationToPod_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ApplyStorageDrsRecommendationToPod_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ApplyStorageDrsRecommendationToPod_USCORETaskResponse.soap_get(soap, "gnvim2:ApplyStorageDrsRecommendationToPod_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ApplyStorageDrsRecommendation_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ApplyStorageDrsRecommendationRequestType *gnvim2__ApplyStorageDrsRecommendation_USCORETask, _gnvim2__ApplyStorageDrsRecommendation_USCORETaskResponse &gnvim2__ApplyStorageDrsRecommendation_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ApplyStorageDrsRecommendation_USCORETask soap_tmp___gnvim2__ApplyStorageDrsRecommendation_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ApplyStorageDrsRecommendation_USCORETask.gnvim2__ApplyStorageDrsRecommendation_USCORETask = gnvim2__ApplyStorageDrsRecommendation_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ApplyStorageDrsRecommendation_USCORETask(soap, &soap_tmp___gnvim2__ApplyStorageDrsRecommendation_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ApplyStorageDrsRecommendation_USCORETask(soap, &soap_tmp___gnvim2__ApplyStorageDrsRecommendation_USCORETask, "-gnvim2:ApplyStorageDrsRecommendation_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ApplyStorageDrsRecommendation_USCORETask(soap, &soap_tmp___gnvim2__ApplyStorageDrsRecommendation_USCORETask, "-gnvim2:ApplyStorageDrsRecommendation_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ApplyStorageDrsRecommendation_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ApplyStorageDrsRecommendation_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ApplyStorageDrsRecommendation_USCORETaskResponse.soap_get(soap, "gnvim2:ApplyStorageDrsRecommendation_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CancelStorageDrsRecommendation(const char *endpoint, const char *soap_action, gnvim2__CancelStorageDrsRecommendationRequestType *gnvim2__CancelStorageDrsRecommendation, _gnvim2__CancelStorageDrsRecommendationResponse &gnvim2__CancelStorageDrsRecommendationResponse)
{	struct soap *soap = this;
	struct __gnvim2__CancelStorageDrsRecommendation soap_tmp___gnvim2__CancelStorageDrsRecommendation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CancelStorageDrsRecommendation.gnvim2__CancelStorageDrsRecommendation = gnvim2__CancelStorageDrsRecommendation;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CancelStorageDrsRecommendation(soap, &soap_tmp___gnvim2__CancelStorageDrsRecommendation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CancelStorageDrsRecommendation(soap, &soap_tmp___gnvim2__CancelStorageDrsRecommendation, "-gnvim2:CancelStorageDrsRecommendation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CancelStorageDrsRecommendation(soap, &soap_tmp___gnvim2__CancelStorageDrsRecommendation, "-gnvim2:CancelStorageDrsRecommendation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CancelStorageDrsRecommendationResponse)
		return soap_closesock(soap);
	gnvim2__CancelStorageDrsRecommendationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CancelStorageDrsRecommendationResponse.soap_get(soap, "gnvim2:CancelStorageDrsRecommendationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshStorageDrsRecommendation(const char *endpoint, const char *soap_action, gnvim2__RefreshStorageDrsRecommendationRequestType *gnvim2__RefreshStorageDrsRecommendation, _gnvim2__RefreshStorageDrsRecommendationResponse &gnvim2__RefreshStorageDrsRecommendationResponse)
{	struct soap *soap = this;
	struct __gnvim2__RefreshStorageDrsRecommendation soap_tmp___gnvim2__RefreshStorageDrsRecommendation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RefreshStorageDrsRecommendation.gnvim2__RefreshStorageDrsRecommendation = gnvim2__RefreshStorageDrsRecommendation;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RefreshStorageDrsRecommendation(soap, &soap_tmp___gnvim2__RefreshStorageDrsRecommendation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RefreshStorageDrsRecommendation(soap, &soap_tmp___gnvim2__RefreshStorageDrsRecommendation, "-gnvim2:RefreshStorageDrsRecommendation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RefreshStorageDrsRecommendation(soap, &soap_tmp___gnvim2__RefreshStorageDrsRecommendation, "-gnvim2:RefreshStorageDrsRecommendation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RefreshStorageDrsRecommendationResponse)
		return soap_closesock(soap);
	gnvim2__RefreshStorageDrsRecommendationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RefreshStorageDrsRecommendationResponse.soap_get(soap, "gnvim2:RefreshStorageDrsRecommendationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ConfigureStorageDrsForPod_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ConfigureStorageDrsForPodRequestType *gnvim2__ConfigureStorageDrsForPod_USCORETask, _gnvim2__ConfigureStorageDrsForPod_USCORETaskResponse &gnvim2__ConfigureStorageDrsForPod_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ConfigureStorageDrsForPod_USCORETask soap_tmp___gnvim2__ConfigureStorageDrsForPod_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ConfigureStorageDrsForPod_USCORETask.gnvim2__ConfigureStorageDrsForPod_USCORETask = gnvim2__ConfigureStorageDrsForPod_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ConfigureStorageDrsForPod_USCORETask(soap, &soap_tmp___gnvim2__ConfigureStorageDrsForPod_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ConfigureStorageDrsForPod_USCORETask(soap, &soap_tmp___gnvim2__ConfigureStorageDrsForPod_USCORETask, "-gnvim2:ConfigureStorageDrsForPod_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ConfigureStorageDrsForPod_USCORETask(soap, &soap_tmp___gnvim2__ConfigureStorageDrsForPod_USCORETask, "-gnvim2:ConfigureStorageDrsForPod_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ConfigureStorageDrsForPod_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ConfigureStorageDrsForPod_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ConfigureStorageDrsForPod_USCORETaskResponse.soap_get(soap, "gnvim2:ConfigureStorageDrsForPod_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RecommendDatastores(const char *endpoint, const char *soap_action, gnvim2__RecommendDatastoresRequestType *gnvim2__RecommendDatastores, _gnvim2__RecommendDatastoresResponse &gnvim2__RecommendDatastoresResponse)
{	struct soap *soap = this;
	struct __gnvim2__RecommendDatastores soap_tmp___gnvim2__RecommendDatastores;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RecommendDatastores.gnvim2__RecommendDatastores = gnvim2__RecommendDatastores;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RecommendDatastores(soap, &soap_tmp___gnvim2__RecommendDatastores);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RecommendDatastores(soap, &soap_tmp___gnvim2__RecommendDatastores, "-gnvim2:RecommendDatastores", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RecommendDatastores(soap, &soap_tmp___gnvim2__RecommendDatastores, "-gnvim2:RecommendDatastores", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RecommendDatastoresResponse)
		return soap_closesock(soap);
	gnvim2__RecommendDatastoresResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RecommendDatastoresResponse.soap_get(soap, "gnvim2:RecommendDatastoresResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CancelTask(const char *endpoint, const char *soap_action, gnvim2__CancelTaskRequestType *gnvim2__CancelTask, _gnvim2__CancelTaskResponse &gnvim2__CancelTaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CancelTask soap_tmp___gnvim2__CancelTask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CancelTask.gnvim2__CancelTask = gnvim2__CancelTask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CancelTask(soap, &soap_tmp___gnvim2__CancelTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CancelTask(soap, &soap_tmp___gnvim2__CancelTask, "-gnvim2:CancelTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CancelTask(soap, &soap_tmp___gnvim2__CancelTask, "-gnvim2:CancelTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CancelTaskResponse)
		return soap_closesock(soap);
	gnvim2__CancelTaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CancelTaskResponse.soap_get(soap, "gnvim2:CancelTaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateProgress(const char *endpoint, const char *soap_action, gnvim2__UpdateProgressRequestType *gnvim2__UpdateProgress, _gnvim2__UpdateProgressResponse &gnvim2__UpdateProgressResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateProgress soap_tmp___gnvim2__UpdateProgress;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateProgress.gnvim2__UpdateProgress = gnvim2__UpdateProgress;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateProgress(soap, &soap_tmp___gnvim2__UpdateProgress);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateProgress(soap, &soap_tmp___gnvim2__UpdateProgress, "-gnvim2:UpdateProgress", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateProgress(soap, &soap_tmp___gnvim2__UpdateProgress, "-gnvim2:UpdateProgress", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateProgressResponse)
		return soap_closesock(soap);
	gnvim2__UpdateProgressResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateProgressResponse.soap_get(soap, "gnvim2:UpdateProgressResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetTaskState(const char *endpoint, const char *soap_action, gnvim2__SetTaskStateRequestType *gnvim2__SetTaskState, _gnvim2__SetTaskStateResponse &gnvim2__SetTaskStateResponse)
{	struct soap *soap = this;
	struct __gnvim2__SetTaskState soap_tmp___gnvim2__SetTaskState;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SetTaskState.gnvim2__SetTaskState = gnvim2__SetTaskState;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SetTaskState(soap, &soap_tmp___gnvim2__SetTaskState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SetTaskState(soap, &soap_tmp___gnvim2__SetTaskState, "-gnvim2:SetTaskState", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SetTaskState(soap, &soap_tmp___gnvim2__SetTaskState, "-gnvim2:SetTaskState", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SetTaskStateResponse)
		return soap_closesock(soap);
	gnvim2__SetTaskStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SetTaskStateResponse.soap_get(soap, "gnvim2:SetTaskStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetTaskDescription(const char *endpoint, const char *soap_action, gnvim2__SetTaskDescriptionRequestType *gnvim2__SetTaskDescription, _gnvim2__SetTaskDescriptionResponse &gnvim2__SetTaskDescriptionResponse)
{	struct soap *soap = this;
	struct __gnvim2__SetTaskDescription soap_tmp___gnvim2__SetTaskDescription;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SetTaskDescription.gnvim2__SetTaskDescription = gnvim2__SetTaskDescription;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SetTaskDescription(soap, &soap_tmp___gnvim2__SetTaskDescription);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SetTaskDescription(soap, &soap_tmp___gnvim2__SetTaskDescription, "-gnvim2:SetTaskDescription", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SetTaskDescription(soap, &soap_tmp___gnvim2__SetTaskDescription, "-gnvim2:SetTaskDescription", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SetTaskDescriptionResponse)
		return soap_closesock(soap);
	gnvim2__SetTaskDescriptionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SetTaskDescriptionResponse.soap_get(soap, "gnvim2:SetTaskDescriptionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReadNextTasks(const char *endpoint, const char *soap_action, gnvim2__ReadNextTasksRequestType *gnvim2__ReadNextTasks, _gnvim2__ReadNextTasksResponse &gnvim2__ReadNextTasksResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReadNextTasks soap_tmp___gnvim2__ReadNextTasks;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReadNextTasks.gnvim2__ReadNextTasks = gnvim2__ReadNextTasks;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReadNextTasks(soap, &soap_tmp___gnvim2__ReadNextTasks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReadNextTasks(soap, &soap_tmp___gnvim2__ReadNextTasks, "-gnvim2:ReadNextTasks", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReadNextTasks(soap, &soap_tmp___gnvim2__ReadNextTasks, "-gnvim2:ReadNextTasks", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReadNextTasksResponse)
		return soap_closesock(soap);
	gnvim2__ReadNextTasksResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReadNextTasksResponse.soap_get(soap, "gnvim2:ReadNextTasksResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReadPreviousTasks(const char *endpoint, const char *soap_action, gnvim2__ReadPreviousTasksRequestType *gnvim2__ReadPreviousTasks, _gnvim2__ReadPreviousTasksResponse &gnvim2__ReadPreviousTasksResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReadPreviousTasks soap_tmp___gnvim2__ReadPreviousTasks;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReadPreviousTasks.gnvim2__ReadPreviousTasks = gnvim2__ReadPreviousTasks;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReadPreviousTasks(soap, &soap_tmp___gnvim2__ReadPreviousTasks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReadPreviousTasks(soap, &soap_tmp___gnvim2__ReadPreviousTasks, "-gnvim2:ReadPreviousTasks", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReadPreviousTasks(soap, &soap_tmp___gnvim2__ReadPreviousTasks, "-gnvim2:ReadPreviousTasks", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReadPreviousTasksResponse)
		return soap_closesock(soap);
	gnvim2__ReadPreviousTasksResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReadPreviousTasksResponse.soap_get(soap, "gnvim2:ReadPreviousTasksResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateCollectorForTasks(const char *endpoint, const char *soap_action, gnvim2__CreateCollectorForTasksRequestType *gnvim2__CreateCollectorForTasks, _gnvim2__CreateCollectorForTasksResponse &gnvim2__CreateCollectorForTasksResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateCollectorForTasks soap_tmp___gnvim2__CreateCollectorForTasks;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateCollectorForTasks.gnvim2__CreateCollectorForTasks = gnvim2__CreateCollectorForTasks;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateCollectorForTasks(soap, &soap_tmp___gnvim2__CreateCollectorForTasks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateCollectorForTasks(soap, &soap_tmp___gnvim2__CreateCollectorForTasks, "-gnvim2:CreateCollectorForTasks", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateCollectorForTasks(soap, &soap_tmp___gnvim2__CreateCollectorForTasks, "-gnvim2:CreateCollectorForTasks", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateCollectorForTasksResponse)
		return soap_closesock(soap);
	gnvim2__CreateCollectorForTasksResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateCollectorForTasksResponse.soap_get(soap, "gnvim2:CreateCollectorForTasksResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateTask(const char *endpoint, const char *soap_action, gnvim2__CreateTaskRequestType *gnvim2__CreateTask, _gnvim2__CreateTaskResponse &gnvim2__CreateTaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateTask soap_tmp___gnvim2__CreateTask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateTask.gnvim2__CreateTask = gnvim2__CreateTask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateTask(soap, &soap_tmp___gnvim2__CreateTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateTask(soap, &soap_tmp___gnvim2__CreateTask, "-gnvim2:CreateTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateTask(soap, &soap_tmp___gnvim2__CreateTask, "-gnvim2:CreateTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateTaskResponse)
		return soap_closesock(soap);
	gnvim2__CreateTaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateTaskResponse.soap_get(soap, "gnvim2:CreateTaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveUserGroups(const char *endpoint, const char *soap_action, gnvim2__RetrieveUserGroupsRequestType *gnvim2__RetrieveUserGroups, _gnvim2__RetrieveUserGroupsResponse &gnvim2__RetrieveUserGroupsResponse)
{	struct soap *soap = this;
	struct __gnvim2__RetrieveUserGroups soap_tmp___gnvim2__RetrieveUserGroups;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RetrieveUserGroups.gnvim2__RetrieveUserGroups = gnvim2__RetrieveUserGroups;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RetrieveUserGroups(soap, &soap_tmp___gnvim2__RetrieveUserGroups);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RetrieveUserGroups(soap, &soap_tmp___gnvim2__RetrieveUserGroups, "-gnvim2:RetrieveUserGroups", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RetrieveUserGroups(soap, &soap_tmp___gnvim2__RetrieveUserGroups, "-gnvim2:RetrieveUserGroups", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RetrieveUserGroupsResponse)
		return soap_closesock(soap);
	gnvim2__RetrieveUserGroupsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RetrieveUserGroupsResponse.soap_get(soap, "gnvim2:RetrieveUserGroupsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateVRP(const char *endpoint, const char *soap_action, gnvim2__CreateVRPRequestType *gnvim2__CreateVRP, _gnvim2__CreateVRPResponse &gnvim2__CreateVRPResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateVRP soap_tmp___gnvim2__CreateVRP;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateVRP.gnvim2__CreateVRP = gnvim2__CreateVRP;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateVRP(soap, &soap_tmp___gnvim2__CreateVRP);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateVRP(soap, &soap_tmp___gnvim2__CreateVRP, "-gnvim2:CreateVRP", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateVRP(soap, &soap_tmp___gnvim2__CreateVRP, "-gnvim2:CreateVRP", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateVRPResponse)
		return soap_closesock(soap);
	gnvim2__CreateVRPResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateVRPResponse.soap_get(soap, "gnvim2:CreateVRPResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateVRP(const char *endpoint, const char *soap_action, gnvim2__UpdateVRPRequestType *gnvim2__UpdateVRP, _gnvim2__UpdateVRPResponse &gnvim2__UpdateVRPResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateVRP soap_tmp___gnvim2__UpdateVRP;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateVRP.gnvim2__UpdateVRP = gnvim2__UpdateVRP;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateVRP(soap, &soap_tmp___gnvim2__UpdateVRP);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateVRP(soap, &soap_tmp___gnvim2__UpdateVRP, "-gnvim2:UpdateVRP", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateVRP(soap, &soap_tmp___gnvim2__UpdateVRP, "-gnvim2:UpdateVRP", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateVRPResponse)
		return soap_closesock(soap);
	gnvim2__UpdateVRPResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateVRPResponse.soap_get(soap, "gnvim2:UpdateVRPResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeleteVRP(const char *endpoint, const char *soap_action, gnvim2__DeleteVRPRequestType *gnvim2__DeleteVRP, _gnvim2__DeleteVRPResponse &gnvim2__DeleteVRPResponse)
{	struct soap *soap = this;
	struct __gnvim2__DeleteVRP soap_tmp___gnvim2__DeleteVRP;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DeleteVRP.gnvim2__DeleteVRP = gnvim2__DeleteVRP;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DeleteVRP(soap, &soap_tmp___gnvim2__DeleteVRP);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DeleteVRP(soap, &soap_tmp___gnvim2__DeleteVRP, "-gnvim2:DeleteVRP", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DeleteVRP(soap, &soap_tmp___gnvim2__DeleteVRP, "-gnvim2:DeleteVRP", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DeleteVRPResponse)
		return soap_closesock(soap);
	gnvim2__DeleteVRPResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DeleteVRPResponse.soap_get(soap, "gnvim2:DeleteVRPResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeployVM(const char *endpoint, const char *soap_action, gnvim2__DeployVMRequestType *gnvim2__DeployVM, _gnvim2__DeployVMResponse &gnvim2__DeployVMResponse)
{	struct soap *soap = this;
	struct __gnvim2__DeployVM soap_tmp___gnvim2__DeployVM;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DeployVM.gnvim2__DeployVM = gnvim2__DeployVM;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DeployVM(soap, &soap_tmp___gnvim2__DeployVM);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DeployVM(soap, &soap_tmp___gnvim2__DeployVM, "-gnvim2:DeployVM", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DeployVM(soap, &soap_tmp___gnvim2__DeployVM, "-gnvim2:DeployVM", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DeployVMResponse)
		return soap_closesock(soap);
	gnvim2__DeployVMResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DeployVMResponse.soap_get(soap, "gnvim2:DeployVMResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UndeployVM(const char *endpoint, const char *soap_action, gnvim2__UndeployVMRequestType *gnvim2__UndeployVM, _gnvim2__UndeployVMResponse &gnvim2__UndeployVMResponse)
{	struct soap *soap = this;
	struct __gnvim2__UndeployVM soap_tmp___gnvim2__UndeployVM;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UndeployVM.gnvim2__UndeployVM = gnvim2__UndeployVM;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UndeployVM(soap, &soap_tmp___gnvim2__UndeployVM);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UndeployVM(soap, &soap_tmp___gnvim2__UndeployVM, "-gnvim2:UndeployVM", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UndeployVM(soap, &soap_tmp___gnvim2__UndeployVM, "-gnvim2:UndeployVM", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UndeployVMResponse)
		return soap_closesock(soap);
	gnvim2__UndeployVMResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UndeployVMResponse.soap_get(soap, "gnvim2:UndeployVMResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetManagedByVDC(const char *endpoint, const char *soap_action, gnvim2__SetManagedByVDCRequestType *gnvim2__SetManagedByVDC, _gnvim2__SetManagedByVDCResponse &gnvim2__SetManagedByVDCResponse)
{	struct soap *soap = this;
	struct __gnvim2__SetManagedByVDC soap_tmp___gnvim2__SetManagedByVDC;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SetManagedByVDC.gnvim2__SetManagedByVDC = gnvim2__SetManagedByVDC;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SetManagedByVDC(soap, &soap_tmp___gnvim2__SetManagedByVDC);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SetManagedByVDC(soap, &soap_tmp___gnvim2__SetManagedByVDC, "-gnvim2:SetManagedByVDC", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SetManagedByVDC(soap, &soap_tmp___gnvim2__SetManagedByVDC, "-gnvim2:SetManagedByVDC", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SetManagedByVDCResponse)
		return soap_closesock(soap);
	gnvim2__SetManagedByVDCResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SetManagedByVDCResponse.soap_get(soap, "gnvim2:SetManagedByVDCResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::GetAllVRPIds(const char *endpoint, const char *soap_action, gnvim2__GetAllVRPIdsRequestType *gnvim2__GetAllVRPIds, _gnvim2__GetAllVRPIdsResponse &gnvim2__GetAllVRPIdsResponse)
{	struct soap *soap = this;
	struct __gnvim2__GetAllVRPIds soap_tmp___gnvim2__GetAllVRPIds;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__GetAllVRPIds.gnvim2__GetAllVRPIds = gnvim2__GetAllVRPIds;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__GetAllVRPIds(soap, &soap_tmp___gnvim2__GetAllVRPIds);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__GetAllVRPIds(soap, &soap_tmp___gnvim2__GetAllVRPIds, "-gnvim2:GetAllVRPIds", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__GetAllVRPIds(soap, &soap_tmp___gnvim2__GetAllVRPIds, "-gnvim2:GetAllVRPIds", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__GetAllVRPIdsResponse)
		return soap_closesock(soap);
	gnvim2__GetAllVRPIdsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__GetAllVRPIdsResponse.soap_get(soap, "gnvim2:GetAllVRPIdsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::GetRPSettings(const char *endpoint, const char *soap_action, gnvim2__GetRPSettingsRequestType *gnvim2__GetRPSettings, _gnvim2__GetRPSettingsResponse &gnvim2__GetRPSettingsResponse)
{	struct soap *soap = this;
	struct __gnvim2__GetRPSettings soap_tmp___gnvim2__GetRPSettings;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__GetRPSettings.gnvim2__GetRPSettings = gnvim2__GetRPSettings;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__GetRPSettings(soap, &soap_tmp___gnvim2__GetRPSettings);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__GetRPSettings(soap, &soap_tmp___gnvim2__GetRPSettings, "-gnvim2:GetRPSettings", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__GetRPSettings(soap, &soap_tmp___gnvim2__GetRPSettings, "-gnvim2:GetRPSettings", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__GetRPSettingsResponse)
		return soap_closesock(soap);
	gnvim2__GetRPSettingsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__GetRPSettingsResponse.soap_get(soap, "gnvim2:GetRPSettingsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::GetVRPSettings(const char *endpoint, const char *soap_action, gnvim2__GetVRPSettingsRequestType *gnvim2__GetVRPSettings, _gnvim2__GetVRPSettingsResponse &gnvim2__GetVRPSettingsResponse)
{	struct soap *soap = this;
	struct __gnvim2__GetVRPSettings soap_tmp___gnvim2__GetVRPSettings;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__GetVRPSettings.gnvim2__GetVRPSettings = gnvim2__GetVRPSettings;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__GetVRPSettings(soap, &soap_tmp___gnvim2__GetVRPSettings);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__GetVRPSettings(soap, &soap_tmp___gnvim2__GetVRPSettings, "-gnvim2:GetVRPSettings", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__GetVRPSettings(soap, &soap_tmp___gnvim2__GetVRPSettings, "-gnvim2:GetVRPSettings", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__GetVRPSettingsResponse)
		return soap_closesock(soap);
	gnvim2__GetVRPSettingsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__GetVRPSettingsResponse.soap_get(soap, "gnvim2:GetVRPSettingsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::GetVRPUsage(const char *endpoint, const char *soap_action, gnvim2__GetVRPUsageRequestType *gnvim2__GetVRPUsage, _gnvim2__GetVRPUsageResponse &gnvim2__GetVRPUsageResponse)
{	struct soap *soap = this;
	struct __gnvim2__GetVRPUsage soap_tmp___gnvim2__GetVRPUsage;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__GetVRPUsage.gnvim2__GetVRPUsage = gnvim2__GetVRPUsage;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__GetVRPUsage(soap, &soap_tmp___gnvim2__GetVRPUsage);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__GetVRPUsage(soap, &soap_tmp___gnvim2__GetVRPUsage, "-gnvim2:GetVRPUsage", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__GetVRPUsage(soap, &soap_tmp___gnvim2__GetVRPUsage, "-gnvim2:GetVRPUsage", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__GetVRPUsageResponse)
		return soap_closesock(soap);
	gnvim2__GetVRPUsageResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__GetVRPUsageResponse.soap_get(soap, "gnvim2:GetVRPUsageResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::GetVRPofVM(const char *endpoint, const char *soap_action, gnvim2__GetVRPofVMRequestType *gnvim2__GetVRPofVM, _gnvim2__GetVRPofVMResponse &gnvim2__GetVRPofVMResponse)
{	struct soap *soap = this;
	struct __gnvim2__GetVRPofVM soap_tmp___gnvim2__GetVRPofVM;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__GetVRPofVM.gnvim2__GetVRPofVM = gnvim2__GetVRPofVM;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__GetVRPofVM(soap, &soap_tmp___gnvim2__GetVRPofVM);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__GetVRPofVM(soap, &soap_tmp___gnvim2__GetVRPofVM, "-gnvim2:GetVRPofVM", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__GetVRPofVM(soap, &soap_tmp___gnvim2__GetVRPofVM, "-gnvim2:GetVRPofVM", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__GetVRPofVMResponse)
		return soap_closesock(soap);
	gnvim2__GetVRPofVMResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__GetVRPofVMResponse.soap_get(soap, "gnvim2:GetVRPofVMResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::GetChildRPforHub(const char *endpoint, const char *soap_action, gnvim2__GetChildRPforHubRequestType *gnvim2__GetChildRPforHub, _gnvim2__GetChildRPforHubResponse &gnvim2__GetChildRPforHubResponse)
{	struct soap *soap = this;
	struct __gnvim2__GetChildRPforHub soap_tmp___gnvim2__GetChildRPforHub;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__GetChildRPforHub.gnvim2__GetChildRPforHub = gnvim2__GetChildRPforHub;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__GetChildRPforHub(soap, &soap_tmp___gnvim2__GetChildRPforHub);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__GetChildRPforHub(soap, &soap_tmp___gnvim2__GetChildRPforHub, "-gnvim2:GetChildRPforHub", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__GetChildRPforHub(soap, &soap_tmp___gnvim2__GetChildRPforHub, "-gnvim2:GetChildRPforHub", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__GetChildRPforHubResponse)
		return soap_closesock(soap);
	gnvim2__GetChildRPforHubResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__GetChildRPforHubResponse.soap_get(soap, "gnvim2:GetChildRPforHubResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateVAppConfig(const char *endpoint, const char *soap_action, gnvim2__UpdateVAppConfigRequestType *gnvim2__UpdateVAppConfig, _gnvim2__UpdateVAppConfigResponse &gnvim2__UpdateVAppConfigResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateVAppConfig soap_tmp___gnvim2__UpdateVAppConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateVAppConfig.gnvim2__UpdateVAppConfig = gnvim2__UpdateVAppConfig;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateVAppConfig(soap, &soap_tmp___gnvim2__UpdateVAppConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateVAppConfig(soap, &soap_tmp___gnvim2__UpdateVAppConfig, "-gnvim2:UpdateVAppConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateVAppConfig(soap, &soap_tmp___gnvim2__UpdateVAppConfig, "-gnvim2:UpdateVAppConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateVAppConfigResponse)
		return soap_closesock(soap);
	gnvim2__UpdateVAppConfigResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateVAppConfigResponse.soap_get(soap, "gnvim2:UpdateVAppConfigResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateLinkedChildren(const char *endpoint, const char *soap_action, gnvim2__UpdateLinkedChildrenRequestType *gnvim2__UpdateLinkedChildren, _gnvim2__UpdateLinkedChildrenResponse &gnvim2__UpdateLinkedChildrenResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateLinkedChildren soap_tmp___gnvim2__UpdateLinkedChildren;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateLinkedChildren.gnvim2__UpdateLinkedChildren = gnvim2__UpdateLinkedChildren;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateLinkedChildren(soap, &soap_tmp___gnvim2__UpdateLinkedChildren);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateLinkedChildren(soap, &soap_tmp___gnvim2__UpdateLinkedChildren, "-gnvim2:UpdateLinkedChildren", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateLinkedChildren(soap, &soap_tmp___gnvim2__UpdateLinkedChildren, "-gnvim2:UpdateLinkedChildren", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateLinkedChildrenResponse)
		return soap_closesock(soap);
	gnvim2__UpdateLinkedChildrenResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateLinkedChildrenResponse.soap_get(soap, "gnvim2:UpdateLinkedChildrenResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CloneVApp_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CloneVAppRequestType *gnvim2__CloneVApp_USCORETask, _gnvim2__CloneVApp_USCORETaskResponse &gnvim2__CloneVApp_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CloneVApp_USCORETask soap_tmp___gnvim2__CloneVApp_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CloneVApp_USCORETask.gnvim2__CloneVApp_USCORETask = gnvim2__CloneVApp_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CloneVApp_USCORETask(soap, &soap_tmp___gnvim2__CloneVApp_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CloneVApp_USCORETask(soap, &soap_tmp___gnvim2__CloneVApp_USCORETask, "-gnvim2:CloneVApp_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CloneVApp_USCORETask(soap, &soap_tmp___gnvim2__CloneVApp_USCORETask, "-gnvim2:CloneVApp_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CloneVApp_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CloneVApp_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CloneVApp_USCORETaskResponse.soap_get(soap, "gnvim2:CloneVApp_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExportVApp(const char *endpoint, const char *soap_action, gnvim2__ExportVAppRequestType *gnvim2__ExportVApp, _gnvim2__ExportVAppResponse &gnvim2__ExportVAppResponse)
{	struct soap *soap = this;
	struct __gnvim2__ExportVApp soap_tmp___gnvim2__ExportVApp;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ExportVApp.gnvim2__ExportVApp = gnvim2__ExportVApp;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ExportVApp(soap, &soap_tmp___gnvim2__ExportVApp);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ExportVApp(soap, &soap_tmp___gnvim2__ExportVApp, "-gnvim2:ExportVApp", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ExportVApp(soap, &soap_tmp___gnvim2__ExportVApp, "-gnvim2:ExportVApp", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ExportVAppResponse)
		return soap_closesock(soap);
	gnvim2__ExportVAppResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ExportVAppResponse.soap_get(soap, "gnvim2:ExportVAppResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::PowerOnVApp_USCORETask(const char *endpoint, const char *soap_action, gnvim2__PowerOnVAppRequestType *gnvim2__PowerOnVApp_USCORETask, _gnvim2__PowerOnVApp_USCORETaskResponse &gnvim2__PowerOnVApp_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__PowerOnVApp_USCORETask soap_tmp___gnvim2__PowerOnVApp_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__PowerOnVApp_USCORETask.gnvim2__PowerOnVApp_USCORETask = gnvim2__PowerOnVApp_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__PowerOnVApp_USCORETask(soap, &soap_tmp___gnvim2__PowerOnVApp_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__PowerOnVApp_USCORETask(soap, &soap_tmp___gnvim2__PowerOnVApp_USCORETask, "-gnvim2:PowerOnVApp_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__PowerOnVApp_USCORETask(soap, &soap_tmp___gnvim2__PowerOnVApp_USCORETask, "-gnvim2:PowerOnVApp_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__PowerOnVApp_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__PowerOnVApp_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__PowerOnVApp_USCORETaskResponse.soap_get(soap, "gnvim2:PowerOnVApp_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::PowerOffVApp_USCORETask(const char *endpoint, const char *soap_action, gnvim2__PowerOffVAppRequestType *gnvim2__PowerOffVApp_USCORETask, _gnvim2__PowerOffVApp_USCORETaskResponse &gnvim2__PowerOffVApp_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__PowerOffVApp_USCORETask soap_tmp___gnvim2__PowerOffVApp_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__PowerOffVApp_USCORETask.gnvim2__PowerOffVApp_USCORETask = gnvim2__PowerOffVApp_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__PowerOffVApp_USCORETask(soap, &soap_tmp___gnvim2__PowerOffVApp_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__PowerOffVApp_USCORETask(soap, &soap_tmp___gnvim2__PowerOffVApp_USCORETask, "-gnvim2:PowerOffVApp_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__PowerOffVApp_USCORETask(soap, &soap_tmp___gnvim2__PowerOffVApp_USCORETask, "-gnvim2:PowerOffVApp_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__PowerOffVApp_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__PowerOffVApp_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__PowerOffVApp_USCORETaskResponse.soap_get(soap, "gnvim2:PowerOffVApp_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SuspendVApp_USCORETask(const char *endpoint, const char *soap_action, gnvim2__SuspendVAppRequestType *gnvim2__SuspendVApp_USCORETask, _gnvim2__SuspendVApp_USCORETaskResponse &gnvim2__SuspendVApp_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__SuspendVApp_USCORETask soap_tmp___gnvim2__SuspendVApp_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SuspendVApp_USCORETask.gnvim2__SuspendVApp_USCORETask = gnvim2__SuspendVApp_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SuspendVApp_USCORETask(soap, &soap_tmp___gnvim2__SuspendVApp_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SuspendVApp_USCORETask(soap, &soap_tmp___gnvim2__SuspendVApp_USCORETask, "-gnvim2:SuspendVApp_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SuspendVApp_USCORETask(soap, &soap_tmp___gnvim2__SuspendVApp_USCORETask, "-gnvim2:SuspendVApp_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SuspendVApp_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__SuspendVApp_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SuspendVApp_USCORETaskResponse.soap_get(soap, "gnvim2:SuspendVApp_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::unregisterVApp_USCORETask(const char *endpoint, const char *soap_action, gnvim2__unregisterVAppRequestType *gnvim2__unregisterVApp_USCORETask, _gnvim2__unregisterVApp_USCORETaskResponse &gnvim2__unregisterVApp_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__unregisterVApp_USCORETask soap_tmp___gnvim2__unregisterVApp_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__unregisterVApp_USCORETask.gnvim2__unregisterVApp_USCORETask = gnvim2__unregisterVApp_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__unregisterVApp_USCORETask(soap, &soap_tmp___gnvim2__unregisterVApp_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__unregisterVApp_USCORETask(soap, &soap_tmp___gnvim2__unregisterVApp_USCORETask, "-gnvim2:unregisterVApp_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__unregisterVApp_USCORETask(soap, &soap_tmp___gnvim2__unregisterVApp_USCORETask, "-gnvim2:unregisterVApp_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__unregisterVApp_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__unregisterVApp_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__unregisterVApp_USCORETaskResponse.soap_get(soap, "gnvim2:unregisterVApp_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateVirtualDisk_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CreateVirtualDiskRequestType *gnvim2__CreateVirtualDisk_USCORETask, _gnvim2__CreateVirtualDisk_USCORETaskResponse &gnvim2__CreateVirtualDisk_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateVirtualDisk_USCORETask soap_tmp___gnvim2__CreateVirtualDisk_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateVirtualDisk_USCORETask.gnvim2__CreateVirtualDisk_USCORETask = gnvim2__CreateVirtualDisk_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__CreateVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__CreateVirtualDisk_USCORETask, "-gnvim2:CreateVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__CreateVirtualDisk_USCORETask, "-gnvim2:CreateVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CreateVirtualDisk_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateVirtualDisk_USCORETaskResponse.soap_get(soap, "gnvim2:CreateVirtualDisk_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeleteVirtualDisk_USCORETask(const char *endpoint, const char *soap_action, gnvim2__DeleteVirtualDiskRequestType *gnvim2__DeleteVirtualDisk_USCORETask, _gnvim2__DeleteVirtualDisk_USCORETaskResponse &gnvim2__DeleteVirtualDisk_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__DeleteVirtualDisk_USCORETask soap_tmp___gnvim2__DeleteVirtualDisk_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DeleteVirtualDisk_USCORETask.gnvim2__DeleteVirtualDisk_USCORETask = gnvim2__DeleteVirtualDisk_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DeleteVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__DeleteVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DeleteVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__DeleteVirtualDisk_USCORETask, "-gnvim2:DeleteVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DeleteVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__DeleteVirtualDisk_USCORETask, "-gnvim2:DeleteVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DeleteVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__DeleteVirtualDisk_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DeleteVirtualDisk_USCORETaskResponse.soap_get(soap, "gnvim2:DeleteVirtualDisk_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MoveVirtualDisk_USCORETask(const char *endpoint, const char *soap_action, gnvim2__MoveVirtualDiskRequestType *gnvim2__MoveVirtualDisk_USCORETask, _gnvim2__MoveVirtualDisk_USCORETaskResponse &gnvim2__MoveVirtualDisk_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__MoveVirtualDisk_USCORETask soap_tmp___gnvim2__MoveVirtualDisk_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MoveVirtualDisk_USCORETask.gnvim2__MoveVirtualDisk_USCORETask = gnvim2__MoveVirtualDisk_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MoveVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__MoveVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MoveVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__MoveVirtualDisk_USCORETask, "-gnvim2:MoveVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MoveVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__MoveVirtualDisk_USCORETask, "-gnvim2:MoveVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MoveVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__MoveVirtualDisk_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MoveVirtualDisk_USCORETaskResponse.soap_get(soap, "gnvim2:MoveVirtualDisk_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CopyVirtualDisk_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CopyVirtualDiskRequestType *gnvim2__CopyVirtualDisk_USCORETask, _gnvim2__CopyVirtualDisk_USCORETaskResponse &gnvim2__CopyVirtualDisk_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CopyVirtualDisk_USCORETask soap_tmp___gnvim2__CopyVirtualDisk_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CopyVirtualDisk_USCORETask.gnvim2__CopyVirtualDisk_USCORETask = gnvim2__CopyVirtualDisk_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CopyVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__CopyVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CopyVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__CopyVirtualDisk_USCORETask, "-gnvim2:CopyVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CopyVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__CopyVirtualDisk_USCORETask, "-gnvim2:CopyVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CopyVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CopyVirtualDisk_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CopyVirtualDisk_USCORETaskResponse.soap_get(soap, "gnvim2:CopyVirtualDisk_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExtendVirtualDisk_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ExtendVirtualDiskRequestType *gnvim2__ExtendVirtualDisk_USCORETask, _gnvim2__ExtendVirtualDisk_USCORETaskResponse &gnvim2__ExtendVirtualDisk_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ExtendVirtualDisk_USCORETask soap_tmp___gnvim2__ExtendVirtualDisk_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ExtendVirtualDisk_USCORETask.gnvim2__ExtendVirtualDisk_USCORETask = gnvim2__ExtendVirtualDisk_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ExtendVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__ExtendVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ExtendVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__ExtendVirtualDisk_USCORETask, "-gnvim2:ExtendVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ExtendVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__ExtendVirtualDisk_USCORETask, "-gnvim2:ExtendVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ExtendVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ExtendVirtualDisk_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ExtendVirtualDisk_USCORETaskResponse.soap_get(soap, "gnvim2:ExtendVirtualDisk_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryVirtualDiskFragmentation(const char *endpoint, const char *soap_action, gnvim2__QueryVirtualDiskFragmentationRequestType *gnvim2__QueryVirtualDiskFragmentation, _gnvim2__QueryVirtualDiskFragmentationResponse &gnvim2__QueryVirtualDiskFragmentationResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryVirtualDiskFragmentation soap_tmp___gnvim2__QueryVirtualDiskFragmentation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryVirtualDiskFragmentation.gnvim2__QueryVirtualDiskFragmentation = gnvim2__QueryVirtualDiskFragmentation;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryVirtualDiskFragmentation(soap, &soap_tmp___gnvim2__QueryVirtualDiskFragmentation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryVirtualDiskFragmentation(soap, &soap_tmp___gnvim2__QueryVirtualDiskFragmentation, "-gnvim2:QueryVirtualDiskFragmentation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryVirtualDiskFragmentation(soap, &soap_tmp___gnvim2__QueryVirtualDiskFragmentation, "-gnvim2:QueryVirtualDiskFragmentation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryVirtualDiskFragmentationResponse)
		return soap_closesock(soap);
	gnvim2__QueryVirtualDiskFragmentationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryVirtualDiskFragmentationResponse.soap_get(soap, "gnvim2:QueryVirtualDiskFragmentationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DefragmentVirtualDisk_USCORETask(const char *endpoint, const char *soap_action, gnvim2__DefragmentVirtualDiskRequestType *gnvim2__DefragmentVirtualDisk_USCORETask, _gnvim2__DefragmentVirtualDisk_USCORETaskResponse &gnvim2__DefragmentVirtualDisk_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__DefragmentVirtualDisk_USCORETask soap_tmp___gnvim2__DefragmentVirtualDisk_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DefragmentVirtualDisk_USCORETask.gnvim2__DefragmentVirtualDisk_USCORETask = gnvim2__DefragmentVirtualDisk_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DefragmentVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__DefragmentVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DefragmentVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__DefragmentVirtualDisk_USCORETask, "-gnvim2:DefragmentVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DefragmentVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__DefragmentVirtualDisk_USCORETask, "-gnvim2:DefragmentVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DefragmentVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__DefragmentVirtualDisk_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DefragmentVirtualDisk_USCORETaskResponse.soap_get(soap, "gnvim2:DefragmentVirtualDisk_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ShrinkVirtualDisk_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ShrinkVirtualDiskRequestType *gnvim2__ShrinkVirtualDisk_USCORETask, _gnvim2__ShrinkVirtualDisk_USCORETaskResponse &gnvim2__ShrinkVirtualDisk_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ShrinkVirtualDisk_USCORETask soap_tmp___gnvim2__ShrinkVirtualDisk_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ShrinkVirtualDisk_USCORETask.gnvim2__ShrinkVirtualDisk_USCORETask = gnvim2__ShrinkVirtualDisk_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ShrinkVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__ShrinkVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ShrinkVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__ShrinkVirtualDisk_USCORETask, "-gnvim2:ShrinkVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ShrinkVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__ShrinkVirtualDisk_USCORETask, "-gnvim2:ShrinkVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ShrinkVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ShrinkVirtualDisk_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ShrinkVirtualDisk_USCORETaskResponse.soap_get(soap, "gnvim2:ShrinkVirtualDisk_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::InflateVirtualDisk_USCORETask(const char *endpoint, const char *soap_action, gnvim2__InflateVirtualDiskRequestType *gnvim2__InflateVirtualDisk_USCORETask, _gnvim2__InflateVirtualDisk_USCORETaskResponse &gnvim2__InflateVirtualDisk_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__InflateVirtualDisk_USCORETask soap_tmp___gnvim2__InflateVirtualDisk_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__InflateVirtualDisk_USCORETask.gnvim2__InflateVirtualDisk_USCORETask = gnvim2__InflateVirtualDisk_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__InflateVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__InflateVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__InflateVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__InflateVirtualDisk_USCORETask, "-gnvim2:InflateVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__InflateVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__InflateVirtualDisk_USCORETask, "-gnvim2:InflateVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__InflateVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__InflateVirtualDisk_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__InflateVirtualDisk_USCORETaskResponse.soap_get(soap, "gnvim2:InflateVirtualDisk_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EagerZeroVirtualDisk_USCORETask(const char *endpoint, const char *soap_action, gnvim2__EagerZeroVirtualDiskRequestType *gnvim2__EagerZeroVirtualDisk_USCORETask, _gnvim2__EagerZeroVirtualDisk_USCORETaskResponse &gnvim2__EagerZeroVirtualDisk_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__EagerZeroVirtualDisk_USCORETask soap_tmp___gnvim2__EagerZeroVirtualDisk_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__EagerZeroVirtualDisk_USCORETask.gnvim2__EagerZeroVirtualDisk_USCORETask = gnvim2__EagerZeroVirtualDisk_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__EagerZeroVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__EagerZeroVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__EagerZeroVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__EagerZeroVirtualDisk_USCORETask, "-gnvim2:EagerZeroVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__EagerZeroVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__EagerZeroVirtualDisk_USCORETask, "-gnvim2:EagerZeroVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__EagerZeroVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__EagerZeroVirtualDisk_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__EagerZeroVirtualDisk_USCORETaskResponse.soap_get(soap, "gnvim2:EagerZeroVirtualDisk_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ZeroFillVirtualDisk_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ZeroFillVirtualDiskRequestType *gnvim2__ZeroFillVirtualDisk_USCORETask, _gnvim2__ZeroFillVirtualDisk_USCORETaskResponse &gnvim2__ZeroFillVirtualDisk_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ZeroFillVirtualDisk_USCORETask soap_tmp___gnvim2__ZeroFillVirtualDisk_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ZeroFillVirtualDisk_USCORETask.gnvim2__ZeroFillVirtualDisk_USCORETask = gnvim2__ZeroFillVirtualDisk_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ZeroFillVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__ZeroFillVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ZeroFillVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__ZeroFillVirtualDisk_USCORETask, "-gnvim2:ZeroFillVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ZeroFillVirtualDisk_USCORETask(soap, &soap_tmp___gnvim2__ZeroFillVirtualDisk_USCORETask, "-gnvim2:ZeroFillVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ZeroFillVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ZeroFillVirtualDisk_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ZeroFillVirtualDisk_USCORETaskResponse.soap_get(soap, "gnvim2:ZeroFillVirtualDisk_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetVirtualDiskUuid(const char *endpoint, const char *soap_action, gnvim2__SetVirtualDiskUuidRequestType *gnvim2__SetVirtualDiskUuid, _gnvim2__SetVirtualDiskUuidResponse &gnvim2__SetVirtualDiskUuidResponse)
{	struct soap *soap = this;
	struct __gnvim2__SetVirtualDiskUuid soap_tmp___gnvim2__SetVirtualDiskUuid;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SetVirtualDiskUuid.gnvim2__SetVirtualDiskUuid = gnvim2__SetVirtualDiskUuid;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SetVirtualDiskUuid(soap, &soap_tmp___gnvim2__SetVirtualDiskUuid);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SetVirtualDiskUuid(soap, &soap_tmp___gnvim2__SetVirtualDiskUuid, "-gnvim2:SetVirtualDiskUuid", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SetVirtualDiskUuid(soap, &soap_tmp___gnvim2__SetVirtualDiskUuid, "-gnvim2:SetVirtualDiskUuid", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SetVirtualDiskUuidResponse)
		return soap_closesock(soap);
	gnvim2__SetVirtualDiskUuidResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SetVirtualDiskUuidResponse.soap_get(soap, "gnvim2:SetVirtualDiskUuidResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryVirtualDiskUuid(const char *endpoint, const char *soap_action, gnvim2__QueryVirtualDiskUuidRequestType *gnvim2__QueryVirtualDiskUuid, _gnvim2__QueryVirtualDiskUuidResponse &gnvim2__QueryVirtualDiskUuidResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryVirtualDiskUuid soap_tmp___gnvim2__QueryVirtualDiskUuid;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryVirtualDiskUuid.gnvim2__QueryVirtualDiskUuid = gnvim2__QueryVirtualDiskUuid;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryVirtualDiskUuid(soap, &soap_tmp___gnvim2__QueryVirtualDiskUuid);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryVirtualDiskUuid(soap, &soap_tmp___gnvim2__QueryVirtualDiskUuid, "-gnvim2:QueryVirtualDiskUuid", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryVirtualDiskUuid(soap, &soap_tmp___gnvim2__QueryVirtualDiskUuid, "-gnvim2:QueryVirtualDiskUuid", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryVirtualDiskUuidResponse)
		return soap_closesock(soap);
	gnvim2__QueryVirtualDiskUuidResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryVirtualDiskUuidResponse.soap_get(soap, "gnvim2:QueryVirtualDiskUuidResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryVirtualDiskGeometry(const char *endpoint, const char *soap_action, gnvim2__QueryVirtualDiskGeometryRequestType *gnvim2__QueryVirtualDiskGeometry, _gnvim2__QueryVirtualDiskGeometryResponse &gnvim2__QueryVirtualDiskGeometryResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryVirtualDiskGeometry soap_tmp___gnvim2__QueryVirtualDiskGeometry;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryVirtualDiskGeometry.gnvim2__QueryVirtualDiskGeometry = gnvim2__QueryVirtualDiskGeometry;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryVirtualDiskGeometry(soap, &soap_tmp___gnvim2__QueryVirtualDiskGeometry);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryVirtualDiskGeometry(soap, &soap_tmp___gnvim2__QueryVirtualDiskGeometry, "-gnvim2:QueryVirtualDiskGeometry", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryVirtualDiskGeometry(soap, &soap_tmp___gnvim2__QueryVirtualDiskGeometry, "-gnvim2:QueryVirtualDiskGeometry", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryVirtualDiskGeometryResponse)
		return soap_closesock(soap);
	gnvim2__QueryVirtualDiskGeometryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryVirtualDiskGeometryResponse.soap_get(soap, "gnvim2:QueryVirtualDiskGeometryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ImportUnmanagedSnapshot(const char *endpoint, const char *soap_action, gnvim2__ImportUnmanagedSnapshotRequestType *gnvim2__ImportUnmanagedSnapshot, _gnvim2__ImportUnmanagedSnapshotResponse &gnvim2__ImportUnmanagedSnapshotResponse)
{	struct soap *soap = this;
	struct __gnvim2__ImportUnmanagedSnapshot soap_tmp___gnvim2__ImportUnmanagedSnapshot;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ImportUnmanagedSnapshot.gnvim2__ImportUnmanagedSnapshot = gnvim2__ImportUnmanagedSnapshot;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ImportUnmanagedSnapshot(soap, &soap_tmp___gnvim2__ImportUnmanagedSnapshot);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ImportUnmanagedSnapshot(soap, &soap_tmp___gnvim2__ImportUnmanagedSnapshot, "-gnvim2:ImportUnmanagedSnapshot", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ImportUnmanagedSnapshot(soap, &soap_tmp___gnvim2__ImportUnmanagedSnapshot, "-gnvim2:ImportUnmanagedSnapshot", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ImportUnmanagedSnapshotResponse)
		return soap_closesock(soap);
	gnvim2__ImportUnmanagedSnapshotResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ImportUnmanagedSnapshotResponse.soap_get(soap, "gnvim2:ImportUnmanagedSnapshotResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshStorageInfo(const char *endpoint, const char *soap_action, gnvim2__RefreshStorageInfoRequestType *gnvim2__RefreshStorageInfo, _gnvim2__RefreshStorageInfoResponse &gnvim2__RefreshStorageInfoResponse)
{	struct soap *soap = this;
	struct __gnvim2__RefreshStorageInfo soap_tmp___gnvim2__RefreshStorageInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RefreshStorageInfo.gnvim2__RefreshStorageInfo = gnvim2__RefreshStorageInfo;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RefreshStorageInfo(soap, &soap_tmp___gnvim2__RefreshStorageInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RefreshStorageInfo(soap, &soap_tmp___gnvim2__RefreshStorageInfo, "-gnvim2:RefreshStorageInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RefreshStorageInfo(soap, &soap_tmp___gnvim2__RefreshStorageInfo, "-gnvim2:RefreshStorageInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RefreshStorageInfoResponse)
		return soap_closesock(soap);
	gnvim2__RefreshStorageInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RefreshStorageInfoResponse.soap_get(soap, "gnvim2:RefreshStorageInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateSnapshot_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CreateSnapshotRequestType *gnvim2__CreateSnapshot_USCORETask, _gnvim2__CreateSnapshot_USCORETaskResponse &gnvim2__CreateSnapshot_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateSnapshot_USCORETask soap_tmp___gnvim2__CreateSnapshot_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateSnapshot_USCORETask.gnvim2__CreateSnapshot_USCORETask = gnvim2__CreateSnapshot_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateSnapshot_USCORETask(soap, &soap_tmp___gnvim2__CreateSnapshot_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateSnapshot_USCORETask(soap, &soap_tmp___gnvim2__CreateSnapshot_USCORETask, "-gnvim2:CreateSnapshot_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateSnapshot_USCORETask(soap, &soap_tmp___gnvim2__CreateSnapshot_USCORETask, "-gnvim2:CreateSnapshot_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateSnapshot_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CreateSnapshot_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateSnapshot_USCORETaskResponse.soap_get(soap, "gnvim2:CreateSnapshot_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RevertToCurrentSnapshot_USCORETask(const char *endpoint, const char *soap_action, gnvim2__RevertToCurrentSnapshotRequestType *gnvim2__RevertToCurrentSnapshot_USCORETask, _gnvim2__RevertToCurrentSnapshot_USCORETaskResponse &gnvim2__RevertToCurrentSnapshot_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__RevertToCurrentSnapshot_USCORETask soap_tmp___gnvim2__RevertToCurrentSnapshot_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RevertToCurrentSnapshot_USCORETask.gnvim2__RevertToCurrentSnapshot_USCORETask = gnvim2__RevertToCurrentSnapshot_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RevertToCurrentSnapshot_USCORETask(soap, &soap_tmp___gnvim2__RevertToCurrentSnapshot_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RevertToCurrentSnapshot_USCORETask(soap, &soap_tmp___gnvim2__RevertToCurrentSnapshot_USCORETask, "-gnvim2:RevertToCurrentSnapshot_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RevertToCurrentSnapshot_USCORETask(soap, &soap_tmp___gnvim2__RevertToCurrentSnapshot_USCORETask, "-gnvim2:RevertToCurrentSnapshot_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RevertToCurrentSnapshot_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__RevertToCurrentSnapshot_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RevertToCurrentSnapshot_USCORETaskResponse.soap_get(soap, "gnvim2:RevertToCurrentSnapshot_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveAllSnapshots_USCORETask(const char *endpoint, const char *soap_action, gnvim2__RemoveAllSnapshotsRequestType *gnvim2__RemoveAllSnapshots_USCORETask, _gnvim2__RemoveAllSnapshots_USCORETaskResponse &gnvim2__RemoveAllSnapshots_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveAllSnapshots_USCORETask soap_tmp___gnvim2__RemoveAllSnapshots_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveAllSnapshots_USCORETask.gnvim2__RemoveAllSnapshots_USCORETask = gnvim2__RemoveAllSnapshots_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveAllSnapshots_USCORETask(soap, &soap_tmp___gnvim2__RemoveAllSnapshots_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveAllSnapshots_USCORETask(soap, &soap_tmp___gnvim2__RemoveAllSnapshots_USCORETask, "-gnvim2:RemoveAllSnapshots_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveAllSnapshots_USCORETask(soap, &soap_tmp___gnvim2__RemoveAllSnapshots_USCORETask, "-gnvim2:RemoveAllSnapshots_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveAllSnapshots_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__RemoveAllSnapshots_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveAllSnapshots_USCORETaskResponse.soap_get(soap, "gnvim2:RemoveAllSnapshots_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ConsolidateVMDisks_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ConsolidateVMDisksRequestType *gnvim2__ConsolidateVMDisks_USCORETask, _gnvim2__ConsolidateVMDisks_USCORETaskResponse &gnvim2__ConsolidateVMDisks_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ConsolidateVMDisks_USCORETask soap_tmp___gnvim2__ConsolidateVMDisks_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ConsolidateVMDisks_USCORETask.gnvim2__ConsolidateVMDisks_USCORETask = gnvim2__ConsolidateVMDisks_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ConsolidateVMDisks_USCORETask(soap, &soap_tmp___gnvim2__ConsolidateVMDisks_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ConsolidateVMDisks_USCORETask(soap, &soap_tmp___gnvim2__ConsolidateVMDisks_USCORETask, "-gnvim2:ConsolidateVMDisks_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ConsolidateVMDisks_USCORETask(soap, &soap_tmp___gnvim2__ConsolidateVMDisks_USCORETask, "-gnvim2:ConsolidateVMDisks_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ConsolidateVMDisks_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ConsolidateVMDisks_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ConsolidateVMDisks_USCORETaskResponse.soap_get(soap, "gnvim2:ConsolidateVMDisks_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EstimateStorageForConsolidateSnapshots_USCORETask(const char *endpoint, const char *soap_action, gnvim2__EstimateStorageForConsolidateSnapshotsRequestType *gnvim2__EstimateStorageForConsolidateSnapshots_USCORETask, _gnvim2__EstimateStorageForConsolidateSnapshots_USCORETaskResponse &gnvim2__EstimateStorageForConsolidateSnapshots_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__EstimateStorageForConsolidateSnapshots_USCORETask soap_tmp___gnvim2__EstimateStorageForConsolidateSnapshots_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__EstimateStorageForConsolidateSnapshots_USCORETask.gnvim2__EstimateStorageForConsolidateSnapshots_USCORETask = gnvim2__EstimateStorageForConsolidateSnapshots_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__EstimateStorageForConsolidateSnapshots_USCORETask(soap, &soap_tmp___gnvim2__EstimateStorageForConsolidateSnapshots_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__EstimateStorageForConsolidateSnapshots_USCORETask(soap, &soap_tmp___gnvim2__EstimateStorageForConsolidateSnapshots_USCORETask, "-gnvim2:EstimateStorageForConsolidateSnapshots_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__EstimateStorageForConsolidateSnapshots_USCORETask(soap, &soap_tmp___gnvim2__EstimateStorageForConsolidateSnapshots_USCORETask, "-gnvim2:EstimateStorageForConsolidateSnapshots_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__EstimateStorageForConsolidateSnapshots_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__EstimateStorageForConsolidateSnapshots_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__EstimateStorageForConsolidateSnapshots_USCORETaskResponse.soap_get(soap, "gnvim2:EstimateStorageForConsolidateSnapshots_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigVM_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ReconfigVMRequestType *gnvim2__ReconfigVM_USCORETask, _gnvim2__ReconfigVM_USCORETaskResponse &gnvim2__ReconfigVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReconfigVM_USCORETask soap_tmp___gnvim2__ReconfigVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReconfigVM_USCORETask.gnvim2__ReconfigVM_USCORETask = gnvim2__ReconfigVM_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReconfigVM_USCORETask(soap, &soap_tmp___gnvim2__ReconfigVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReconfigVM_USCORETask(soap, &soap_tmp___gnvim2__ReconfigVM_USCORETask, "-gnvim2:ReconfigVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReconfigVM_USCORETask(soap, &soap_tmp___gnvim2__ReconfigVM_USCORETask, "-gnvim2:ReconfigVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReconfigVM_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ReconfigVM_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReconfigVM_USCORETaskResponse.soap_get(soap, "gnvim2:ReconfigVM_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpgradeVM_USCORETask(const char *endpoint, const char *soap_action, gnvim2__UpgradeVMRequestType *gnvim2__UpgradeVM_USCORETask, _gnvim2__UpgradeVM_USCORETaskResponse &gnvim2__UpgradeVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpgradeVM_USCORETask soap_tmp___gnvim2__UpgradeVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpgradeVM_USCORETask.gnvim2__UpgradeVM_USCORETask = gnvim2__UpgradeVM_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpgradeVM_USCORETask(soap, &soap_tmp___gnvim2__UpgradeVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpgradeVM_USCORETask(soap, &soap_tmp___gnvim2__UpgradeVM_USCORETask, "-gnvim2:UpgradeVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpgradeVM_USCORETask(soap, &soap_tmp___gnvim2__UpgradeVM_USCORETask, "-gnvim2:UpgradeVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpgradeVM_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__UpgradeVM_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpgradeVM_USCORETaskResponse.soap_get(soap, "gnvim2:UpgradeVM_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExtractOvfEnvironment(const char *endpoint, const char *soap_action, gnvim2__ExtractOvfEnvironmentRequestType *gnvim2__ExtractOvfEnvironment, _gnvim2__ExtractOvfEnvironmentResponse &gnvim2__ExtractOvfEnvironmentResponse)
{	struct soap *soap = this;
	struct __gnvim2__ExtractOvfEnvironment soap_tmp___gnvim2__ExtractOvfEnvironment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ExtractOvfEnvironment.gnvim2__ExtractOvfEnvironment = gnvim2__ExtractOvfEnvironment;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ExtractOvfEnvironment(soap, &soap_tmp___gnvim2__ExtractOvfEnvironment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ExtractOvfEnvironment(soap, &soap_tmp___gnvim2__ExtractOvfEnvironment, "-gnvim2:ExtractOvfEnvironment", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ExtractOvfEnvironment(soap, &soap_tmp___gnvim2__ExtractOvfEnvironment, "-gnvim2:ExtractOvfEnvironment", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ExtractOvfEnvironmentResponse)
		return soap_closesock(soap);
	gnvim2__ExtractOvfEnvironmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ExtractOvfEnvironmentResponse.soap_get(soap, "gnvim2:ExtractOvfEnvironmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::PowerOnVM_USCORETask(const char *endpoint, const char *soap_action, gnvim2__PowerOnVMRequestType *gnvim2__PowerOnVM_USCORETask, _gnvim2__PowerOnVM_USCORETaskResponse &gnvim2__PowerOnVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__PowerOnVM_USCORETask soap_tmp___gnvim2__PowerOnVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__PowerOnVM_USCORETask.gnvim2__PowerOnVM_USCORETask = gnvim2__PowerOnVM_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__PowerOnVM_USCORETask(soap, &soap_tmp___gnvim2__PowerOnVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__PowerOnVM_USCORETask(soap, &soap_tmp___gnvim2__PowerOnVM_USCORETask, "-gnvim2:PowerOnVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__PowerOnVM_USCORETask(soap, &soap_tmp___gnvim2__PowerOnVM_USCORETask, "-gnvim2:PowerOnVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__PowerOnVM_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__PowerOnVM_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__PowerOnVM_USCORETaskResponse.soap_get(soap, "gnvim2:PowerOnVM_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::PowerOffVM_USCORETask(const char *endpoint, const char *soap_action, gnvim2__PowerOffVMRequestType *gnvim2__PowerOffVM_USCORETask, _gnvim2__PowerOffVM_USCORETaskResponse &gnvim2__PowerOffVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__PowerOffVM_USCORETask soap_tmp___gnvim2__PowerOffVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__PowerOffVM_USCORETask.gnvim2__PowerOffVM_USCORETask = gnvim2__PowerOffVM_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__PowerOffVM_USCORETask(soap, &soap_tmp___gnvim2__PowerOffVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__PowerOffVM_USCORETask(soap, &soap_tmp___gnvim2__PowerOffVM_USCORETask, "-gnvim2:PowerOffVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__PowerOffVM_USCORETask(soap, &soap_tmp___gnvim2__PowerOffVM_USCORETask, "-gnvim2:PowerOffVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__PowerOffVM_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__PowerOffVM_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__PowerOffVM_USCORETaskResponse.soap_get(soap, "gnvim2:PowerOffVM_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SuspendVM_USCORETask(const char *endpoint, const char *soap_action, gnvim2__SuspendVMRequestType *gnvim2__SuspendVM_USCORETask, _gnvim2__SuspendVM_USCORETaskResponse &gnvim2__SuspendVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__SuspendVM_USCORETask soap_tmp___gnvim2__SuspendVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SuspendVM_USCORETask.gnvim2__SuspendVM_USCORETask = gnvim2__SuspendVM_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SuspendVM_USCORETask(soap, &soap_tmp___gnvim2__SuspendVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SuspendVM_USCORETask(soap, &soap_tmp___gnvim2__SuspendVM_USCORETask, "-gnvim2:SuspendVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SuspendVM_USCORETask(soap, &soap_tmp___gnvim2__SuspendVM_USCORETask, "-gnvim2:SuspendVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SuspendVM_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__SuspendVM_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SuspendVM_USCORETaskResponse.soap_get(soap, "gnvim2:SuspendVM_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResetVM_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ResetVMRequestType *gnvim2__ResetVM_USCORETask, _gnvim2__ResetVM_USCORETaskResponse &gnvim2__ResetVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ResetVM_USCORETask soap_tmp___gnvim2__ResetVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ResetVM_USCORETask.gnvim2__ResetVM_USCORETask = gnvim2__ResetVM_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ResetVM_USCORETask(soap, &soap_tmp___gnvim2__ResetVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ResetVM_USCORETask(soap, &soap_tmp___gnvim2__ResetVM_USCORETask, "-gnvim2:ResetVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ResetVM_USCORETask(soap, &soap_tmp___gnvim2__ResetVM_USCORETask, "-gnvim2:ResetVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ResetVM_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ResetVM_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ResetVM_USCORETaskResponse.soap_get(soap, "gnvim2:ResetVM_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ShutdownGuest(const char *endpoint, const char *soap_action, gnvim2__ShutdownGuestRequestType *gnvim2__ShutdownGuest, _gnvim2__ShutdownGuestResponse &gnvim2__ShutdownGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__ShutdownGuest soap_tmp___gnvim2__ShutdownGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ShutdownGuest.gnvim2__ShutdownGuest = gnvim2__ShutdownGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ShutdownGuest(soap, &soap_tmp___gnvim2__ShutdownGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ShutdownGuest(soap, &soap_tmp___gnvim2__ShutdownGuest, "-gnvim2:ShutdownGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ShutdownGuest(soap, &soap_tmp___gnvim2__ShutdownGuest, "-gnvim2:ShutdownGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ShutdownGuestResponse)
		return soap_closesock(soap);
	gnvim2__ShutdownGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ShutdownGuestResponse.soap_get(soap, "gnvim2:ShutdownGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RebootGuest(const char *endpoint, const char *soap_action, gnvim2__RebootGuestRequestType *gnvim2__RebootGuest, _gnvim2__RebootGuestResponse &gnvim2__RebootGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__RebootGuest soap_tmp___gnvim2__RebootGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RebootGuest.gnvim2__RebootGuest = gnvim2__RebootGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RebootGuest(soap, &soap_tmp___gnvim2__RebootGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RebootGuest(soap, &soap_tmp___gnvim2__RebootGuest, "-gnvim2:RebootGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RebootGuest(soap, &soap_tmp___gnvim2__RebootGuest, "-gnvim2:RebootGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RebootGuestResponse)
		return soap_closesock(soap);
	gnvim2__RebootGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RebootGuestResponse.soap_get(soap, "gnvim2:RebootGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::StandbyGuest(const char *endpoint, const char *soap_action, gnvim2__StandbyGuestRequestType *gnvim2__StandbyGuest, _gnvim2__StandbyGuestResponse &gnvim2__StandbyGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__StandbyGuest soap_tmp___gnvim2__StandbyGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__StandbyGuest.gnvim2__StandbyGuest = gnvim2__StandbyGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__StandbyGuest(soap, &soap_tmp___gnvim2__StandbyGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__StandbyGuest(soap, &soap_tmp___gnvim2__StandbyGuest, "-gnvim2:StandbyGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__StandbyGuest(soap, &soap_tmp___gnvim2__StandbyGuest, "-gnvim2:StandbyGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__StandbyGuestResponse)
		return soap_closesock(soap);
	gnvim2__StandbyGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__StandbyGuestResponse.soap_get(soap, "gnvim2:StandbyGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AnswerVM(const char *endpoint, const char *soap_action, gnvim2__AnswerVMRequestType *gnvim2__AnswerVM, _gnvim2__AnswerVMResponse &gnvim2__AnswerVMResponse)
{	struct soap *soap = this;
	struct __gnvim2__AnswerVM soap_tmp___gnvim2__AnswerVM;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AnswerVM.gnvim2__AnswerVM = gnvim2__AnswerVM;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AnswerVM(soap, &soap_tmp___gnvim2__AnswerVM);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AnswerVM(soap, &soap_tmp___gnvim2__AnswerVM, "-gnvim2:AnswerVM", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AnswerVM(soap, &soap_tmp___gnvim2__AnswerVM, "-gnvim2:AnswerVM", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AnswerVMResponse)
		return soap_closesock(soap);
	gnvim2__AnswerVMResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AnswerVMResponse.soap_get(soap, "gnvim2:AnswerVMResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CustomizeVM_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CustomizeVMRequestType *gnvim2__CustomizeVM_USCORETask, _gnvim2__CustomizeVM_USCORETaskResponse &gnvim2__CustomizeVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CustomizeVM_USCORETask soap_tmp___gnvim2__CustomizeVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CustomizeVM_USCORETask.gnvim2__CustomizeVM_USCORETask = gnvim2__CustomizeVM_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CustomizeVM_USCORETask(soap, &soap_tmp___gnvim2__CustomizeVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CustomizeVM_USCORETask(soap, &soap_tmp___gnvim2__CustomizeVM_USCORETask, "-gnvim2:CustomizeVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CustomizeVM_USCORETask(soap, &soap_tmp___gnvim2__CustomizeVM_USCORETask, "-gnvim2:CustomizeVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CustomizeVM_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CustomizeVM_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CustomizeVM_USCORETaskResponse.soap_get(soap, "gnvim2:CustomizeVM_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CheckCustomizationSpec(const char *endpoint, const char *soap_action, gnvim2__CheckCustomizationSpecRequestType *gnvim2__CheckCustomizationSpec, _gnvim2__CheckCustomizationSpecResponse &gnvim2__CheckCustomizationSpecResponse)
{	struct soap *soap = this;
	struct __gnvim2__CheckCustomizationSpec soap_tmp___gnvim2__CheckCustomizationSpec;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CheckCustomizationSpec.gnvim2__CheckCustomizationSpec = gnvim2__CheckCustomizationSpec;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CheckCustomizationSpec(soap, &soap_tmp___gnvim2__CheckCustomizationSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CheckCustomizationSpec(soap, &soap_tmp___gnvim2__CheckCustomizationSpec, "-gnvim2:CheckCustomizationSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CheckCustomizationSpec(soap, &soap_tmp___gnvim2__CheckCustomizationSpec, "-gnvim2:CheckCustomizationSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CheckCustomizationSpecResponse)
		return soap_closesock(soap);
	gnvim2__CheckCustomizationSpecResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CheckCustomizationSpecResponse.soap_get(soap, "gnvim2:CheckCustomizationSpecResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MigrateVM_USCORETask(const char *endpoint, const char *soap_action, gnvim2__MigrateVMRequestType *gnvim2__MigrateVM_USCORETask, _gnvim2__MigrateVM_USCORETaskResponse &gnvim2__MigrateVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__MigrateVM_USCORETask soap_tmp___gnvim2__MigrateVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MigrateVM_USCORETask.gnvim2__MigrateVM_USCORETask = gnvim2__MigrateVM_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MigrateVM_USCORETask(soap, &soap_tmp___gnvim2__MigrateVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MigrateVM_USCORETask(soap, &soap_tmp___gnvim2__MigrateVM_USCORETask, "-gnvim2:MigrateVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MigrateVM_USCORETask(soap, &soap_tmp___gnvim2__MigrateVM_USCORETask, "-gnvim2:MigrateVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MigrateVM_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__MigrateVM_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MigrateVM_USCORETaskResponse.soap_get(soap, "gnvim2:MigrateVM_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RelocateVM_USCORETask(const char *endpoint, const char *soap_action, gnvim2__RelocateVMRequestType *gnvim2__RelocateVM_USCORETask, _gnvim2__RelocateVM_USCORETaskResponse &gnvim2__RelocateVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__RelocateVM_USCORETask soap_tmp___gnvim2__RelocateVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RelocateVM_USCORETask.gnvim2__RelocateVM_USCORETask = gnvim2__RelocateVM_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RelocateVM_USCORETask(soap, &soap_tmp___gnvim2__RelocateVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RelocateVM_USCORETask(soap, &soap_tmp___gnvim2__RelocateVM_USCORETask, "-gnvim2:RelocateVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RelocateVM_USCORETask(soap, &soap_tmp___gnvim2__RelocateVM_USCORETask, "-gnvim2:RelocateVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RelocateVM_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__RelocateVM_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RelocateVM_USCORETaskResponse.soap_get(soap, "gnvim2:RelocateVM_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CloneVM_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CloneVMRequestType *gnvim2__CloneVM_USCORETask, _gnvim2__CloneVM_USCORETaskResponse &gnvim2__CloneVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CloneVM_USCORETask soap_tmp___gnvim2__CloneVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CloneVM_USCORETask.gnvim2__CloneVM_USCORETask = gnvim2__CloneVM_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CloneVM_USCORETask(soap, &soap_tmp___gnvim2__CloneVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CloneVM_USCORETask(soap, &soap_tmp___gnvim2__CloneVM_USCORETask, "-gnvim2:CloneVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CloneVM_USCORETask(soap, &soap_tmp___gnvim2__CloneVM_USCORETask, "-gnvim2:CloneVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CloneVM_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CloneVM_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CloneVM_USCORETaskResponse.soap_get(soap, "gnvim2:CloneVM_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExportVm(const char *endpoint, const char *soap_action, gnvim2__ExportVmRequestType *gnvim2__ExportVm, _gnvim2__ExportVmResponse &gnvim2__ExportVmResponse)
{	struct soap *soap = this;
	struct __gnvim2__ExportVm soap_tmp___gnvim2__ExportVm;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ExportVm.gnvim2__ExportVm = gnvim2__ExportVm;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ExportVm(soap, &soap_tmp___gnvim2__ExportVm);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ExportVm(soap, &soap_tmp___gnvim2__ExportVm, "-gnvim2:ExportVm", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ExportVm(soap, &soap_tmp___gnvim2__ExportVm, "-gnvim2:ExportVm", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ExportVmResponse)
		return soap_closesock(soap);
	gnvim2__ExportVmResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ExportVmResponse.soap_get(soap, "gnvim2:ExportVmResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MarkAsTemplate(const char *endpoint, const char *soap_action, gnvim2__MarkAsTemplateRequestType *gnvim2__MarkAsTemplate, _gnvim2__MarkAsTemplateResponse &gnvim2__MarkAsTemplateResponse)
{	struct soap *soap = this;
	struct __gnvim2__MarkAsTemplate soap_tmp___gnvim2__MarkAsTemplate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MarkAsTemplate.gnvim2__MarkAsTemplate = gnvim2__MarkAsTemplate;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MarkAsTemplate(soap, &soap_tmp___gnvim2__MarkAsTemplate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MarkAsTemplate(soap, &soap_tmp___gnvim2__MarkAsTemplate, "-gnvim2:MarkAsTemplate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MarkAsTemplate(soap, &soap_tmp___gnvim2__MarkAsTemplate, "-gnvim2:MarkAsTemplate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MarkAsTemplateResponse)
		return soap_closesock(soap);
	gnvim2__MarkAsTemplateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MarkAsTemplateResponse.soap_get(soap, "gnvim2:MarkAsTemplateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MarkAsVirtualMachine(const char *endpoint, const char *soap_action, gnvim2__MarkAsVirtualMachineRequestType *gnvim2__MarkAsVirtualMachine, _gnvim2__MarkAsVirtualMachineResponse &gnvim2__MarkAsVirtualMachineResponse)
{	struct soap *soap = this;
	struct __gnvim2__MarkAsVirtualMachine soap_tmp___gnvim2__MarkAsVirtualMachine;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MarkAsVirtualMachine.gnvim2__MarkAsVirtualMachine = gnvim2__MarkAsVirtualMachine;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MarkAsVirtualMachine(soap, &soap_tmp___gnvim2__MarkAsVirtualMachine);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MarkAsVirtualMachine(soap, &soap_tmp___gnvim2__MarkAsVirtualMachine, "-gnvim2:MarkAsVirtualMachine", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MarkAsVirtualMachine(soap, &soap_tmp___gnvim2__MarkAsVirtualMachine, "-gnvim2:MarkAsVirtualMachine", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MarkAsVirtualMachineResponse)
		return soap_closesock(soap);
	gnvim2__MarkAsVirtualMachineResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MarkAsVirtualMachineResponse.soap_get(soap, "gnvim2:MarkAsVirtualMachineResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UnregisterVM(const char *endpoint, const char *soap_action, gnvim2__UnregisterVMRequestType *gnvim2__UnregisterVM, _gnvim2__UnregisterVMResponse &gnvim2__UnregisterVMResponse)
{	struct soap *soap = this;
	struct __gnvim2__UnregisterVM soap_tmp___gnvim2__UnregisterVM;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UnregisterVM.gnvim2__UnregisterVM = gnvim2__UnregisterVM;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UnregisterVM(soap, &soap_tmp___gnvim2__UnregisterVM);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UnregisterVM(soap, &soap_tmp___gnvim2__UnregisterVM, "-gnvim2:UnregisterVM", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UnregisterVM(soap, &soap_tmp___gnvim2__UnregisterVM, "-gnvim2:UnregisterVM", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UnregisterVMResponse)
		return soap_closesock(soap);
	gnvim2__UnregisterVMResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UnregisterVMResponse.soap_get(soap, "gnvim2:UnregisterVMResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResetGuestInformation(const char *endpoint, const char *soap_action, gnvim2__ResetGuestInformationRequestType *gnvim2__ResetGuestInformation, _gnvim2__ResetGuestInformationResponse &gnvim2__ResetGuestInformationResponse)
{	struct soap *soap = this;
	struct __gnvim2__ResetGuestInformation soap_tmp___gnvim2__ResetGuestInformation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ResetGuestInformation.gnvim2__ResetGuestInformation = gnvim2__ResetGuestInformation;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ResetGuestInformation(soap, &soap_tmp___gnvim2__ResetGuestInformation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ResetGuestInformation(soap, &soap_tmp___gnvim2__ResetGuestInformation, "-gnvim2:ResetGuestInformation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ResetGuestInformation(soap, &soap_tmp___gnvim2__ResetGuestInformation, "-gnvim2:ResetGuestInformation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ResetGuestInformationResponse)
		return soap_closesock(soap);
	gnvim2__ResetGuestInformationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ResetGuestInformationResponse.soap_get(soap, "gnvim2:ResetGuestInformationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MountToolsInstaller(const char *endpoint, const char *soap_action, gnvim2__MountToolsInstallerRequestType *gnvim2__MountToolsInstaller, _gnvim2__MountToolsInstallerResponse &gnvim2__MountToolsInstallerResponse)
{	struct soap *soap = this;
	struct __gnvim2__MountToolsInstaller soap_tmp___gnvim2__MountToolsInstaller;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MountToolsInstaller.gnvim2__MountToolsInstaller = gnvim2__MountToolsInstaller;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MountToolsInstaller(soap, &soap_tmp___gnvim2__MountToolsInstaller);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MountToolsInstaller(soap, &soap_tmp___gnvim2__MountToolsInstaller, "-gnvim2:MountToolsInstaller", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MountToolsInstaller(soap, &soap_tmp___gnvim2__MountToolsInstaller, "-gnvim2:MountToolsInstaller", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MountToolsInstallerResponse)
		return soap_closesock(soap);
	gnvim2__MountToolsInstallerResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MountToolsInstallerResponse.soap_get(soap, "gnvim2:MountToolsInstallerResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UnmountToolsInstaller(const char *endpoint, const char *soap_action, gnvim2__UnmountToolsInstallerRequestType *gnvim2__UnmountToolsInstaller, _gnvim2__UnmountToolsInstallerResponse &gnvim2__UnmountToolsInstallerResponse)
{	struct soap *soap = this;
	struct __gnvim2__UnmountToolsInstaller soap_tmp___gnvim2__UnmountToolsInstaller;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UnmountToolsInstaller.gnvim2__UnmountToolsInstaller = gnvim2__UnmountToolsInstaller;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UnmountToolsInstaller(soap, &soap_tmp___gnvim2__UnmountToolsInstaller);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UnmountToolsInstaller(soap, &soap_tmp___gnvim2__UnmountToolsInstaller, "-gnvim2:UnmountToolsInstaller", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UnmountToolsInstaller(soap, &soap_tmp___gnvim2__UnmountToolsInstaller, "-gnvim2:UnmountToolsInstaller", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UnmountToolsInstallerResponse)
		return soap_closesock(soap);
	gnvim2__UnmountToolsInstallerResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UnmountToolsInstallerResponse.soap_get(soap, "gnvim2:UnmountToolsInstallerResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpgradeTools_USCORETask(const char *endpoint, const char *soap_action, gnvim2__UpgradeToolsRequestType *gnvim2__UpgradeTools_USCORETask, _gnvim2__UpgradeTools_USCORETaskResponse &gnvim2__UpgradeTools_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpgradeTools_USCORETask soap_tmp___gnvim2__UpgradeTools_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpgradeTools_USCORETask.gnvim2__UpgradeTools_USCORETask = gnvim2__UpgradeTools_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpgradeTools_USCORETask(soap, &soap_tmp___gnvim2__UpgradeTools_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpgradeTools_USCORETask(soap, &soap_tmp___gnvim2__UpgradeTools_USCORETask, "-gnvim2:UpgradeTools_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpgradeTools_USCORETask(soap, &soap_tmp___gnvim2__UpgradeTools_USCORETask, "-gnvim2:UpgradeTools_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpgradeTools_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__UpgradeTools_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpgradeTools_USCORETaskResponse.soap_get(soap, "gnvim2:UpgradeTools_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AcquireMksTicket(const char *endpoint, const char *soap_action, gnvim2__AcquireMksTicketRequestType *gnvim2__AcquireMksTicket, _gnvim2__AcquireMksTicketResponse &gnvim2__AcquireMksTicketResponse)
{	struct soap *soap = this;
	struct __gnvim2__AcquireMksTicket soap_tmp___gnvim2__AcquireMksTicket;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AcquireMksTicket.gnvim2__AcquireMksTicket = gnvim2__AcquireMksTicket;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AcquireMksTicket(soap, &soap_tmp___gnvim2__AcquireMksTicket);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AcquireMksTicket(soap, &soap_tmp___gnvim2__AcquireMksTicket, "-gnvim2:AcquireMksTicket", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AcquireMksTicket(soap, &soap_tmp___gnvim2__AcquireMksTicket, "-gnvim2:AcquireMksTicket", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AcquireMksTicketResponse)
		return soap_closesock(soap);
	gnvim2__AcquireMksTicketResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AcquireMksTicketResponse.soap_get(soap, "gnvim2:AcquireMksTicketResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AcquireTicket(const char *endpoint, const char *soap_action, gnvim2__AcquireTicketRequestType *gnvim2__AcquireTicket, _gnvim2__AcquireTicketResponse &gnvim2__AcquireTicketResponse)
{	struct soap *soap = this;
	struct __gnvim2__AcquireTicket soap_tmp___gnvim2__AcquireTicket;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AcquireTicket.gnvim2__AcquireTicket = gnvim2__AcquireTicket;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AcquireTicket(soap, &soap_tmp___gnvim2__AcquireTicket);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AcquireTicket(soap, &soap_tmp___gnvim2__AcquireTicket, "-gnvim2:AcquireTicket", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AcquireTicket(soap, &soap_tmp___gnvim2__AcquireTicket, "-gnvim2:AcquireTicket", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AcquireTicketResponse)
		return soap_closesock(soap);
	gnvim2__AcquireTicketResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AcquireTicketResponse.soap_get(soap, "gnvim2:AcquireTicketResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetScreenResolution(const char *endpoint, const char *soap_action, gnvim2__SetScreenResolutionRequestType *gnvim2__SetScreenResolution, _gnvim2__SetScreenResolutionResponse &gnvim2__SetScreenResolutionResponse)
{	struct soap *soap = this;
	struct __gnvim2__SetScreenResolution soap_tmp___gnvim2__SetScreenResolution;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SetScreenResolution.gnvim2__SetScreenResolution = gnvim2__SetScreenResolution;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SetScreenResolution(soap, &soap_tmp___gnvim2__SetScreenResolution);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SetScreenResolution(soap, &soap_tmp___gnvim2__SetScreenResolution, "-gnvim2:SetScreenResolution", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SetScreenResolution(soap, &soap_tmp___gnvim2__SetScreenResolution, "-gnvim2:SetScreenResolution", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SetScreenResolutionResponse)
		return soap_closesock(soap);
	gnvim2__SetScreenResolutionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SetScreenResolutionResponse.soap_get(soap, "gnvim2:SetScreenResolutionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DefragmentAllDisks(const char *endpoint, const char *soap_action, gnvim2__DefragmentAllDisksRequestType *gnvim2__DefragmentAllDisks, _gnvim2__DefragmentAllDisksResponse &gnvim2__DefragmentAllDisksResponse)
{	struct soap *soap = this;
	struct __gnvim2__DefragmentAllDisks soap_tmp___gnvim2__DefragmentAllDisks;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DefragmentAllDisks.gnvim2__DefragmentAllDisks = gnvim2__DefragmentAllDisks;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DefragmentAllDisks(soap, &soap_tmp___gnvim2__DefragmentAllDisks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DefragmentAllDisks(soap, &soap_tmp___gnvim2__DefragmentAllDisks, "-gnvim2:DefragmentAllDisks", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DefragmentAllDisks(soap, &soap_tmp___gnvim2__DefragmentAllDisks, "-gnvim2:DefragmentAllDisks", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DefragmentAllDisksResponse)
		return soap_closesock(soap);
	gnvim2__DefragmentAllDisksResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DefragmentAllDisksResponse.soap_get(soap, "gnvim2:DefragmentAllDisksResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateSecondaryVM_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CreateSecondaryVMRequestType *gnvim2__CreateSecondaryVM_USCORETask, _gnvim2__CreateSecondaryVM_USCORETaskResponse &gnvim2__CreateSecondaryVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateSecondaryVM_USCORETask soap_tmp___gnvim2__CreateSecondaryVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateSecondaryVM_USCORETask.gnvim2__CreateSecondaryVM_USCORETask = gnvim2__CreateSecondaryVM_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateSecondaryVM_USCORETask(soap, &soap_tmp___gnvim2__CreateSecondaryVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateSecondaryVM_USCORETask(soap, &soap_tmp___gnvim2__CreateSecondaryVM_USCORETask, "-gnvim2:CreateSecondaryVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateSecondaryVM_USCORETask(soap, &soap_tmp___gnvim2__CreateSecondaryVM_USCORETask, "-gnvim2:CreateSecondaryVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateSecondaryVM_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CreateSecondaryVM_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateSecondaryVM_USCORETaskResponse.soap_get(soap, "gnvim2:CreateSecondaryVM_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateSecondaryVMEx_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CreateSecondaryVMExRequestType *gnvim2__CreateSecondaryVMEx_USCORETask, _gnvim2__CreateSecondaryVMEx_USCORETaskResponse &gnvim2__CreateSecondaryVMEx_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateSecondaryVMEx_USCORETask soap_tmp___gnvim2__CreateSecondaryVMEx_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateSecondaryVMEx_USCORETask.gnvim2__CreateSecondaryVMEx_USCORETask = gnvim2__CreateSecondaryVMEx_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateSecondaryVMEx_USCORETask(soap, &soap_tmp___gnvim2__CreateSecondaryVMEx_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateSecondaryVMEx_USCORETask(soap, &soap_tmp___gnvim2__CreateSecondaryVMEx_USCORETask, "-gnvim2:CreateSecondaryVMEx_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateSecondaryVMEx_USCORETask(soap, &soap_tmp___gnvim2__CreateSecondaryVMEx_USCORETask, "-gnvim2:CreateSecondaryVMEx_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateSecondaryVMEx_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CreateSecondaryVMEx_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateSecondaryVMEx_USCORETaskResponse.soap_get(soap, "gnvim2:CreateSecondaryVMEx_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::TurnOffFaultToleranceForVM_USCORETask(const char *endpoint, const char *soap_action, gnvim2__TurnOffFaultToleranceForVMRequestType *gnvim2__TurnOffFaultToleranceForVM_USCORETask, _gnvim2__TurnOffFaultToleranceForVM_USCORETaskResponse &gnvim2__TurnOffFaultToleranceForVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__TurnOffFaultToleranceForVM_USCORETask soap_tmp___gnvim2__TurnOffFaultToleranceForVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__TurnOffFaultToleranceForVM_USCORETask.gnvim2__TurnOffFaultToleranceForVM_USCORETask = gnvim2__TurnOffFaultToleranceForVM_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__TurnOffFaultToleranceForVM_USCORETask(soap, &soap_tmp___gnvim2__TurnOffFaultToleranceForVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__TurnOffFaultToleranceForVM_USCORETask(soap, &soap_tmp___gnvim2__TurnOffFaultToleranceForVM_USCORETask, "-gnvim2:TurnOffFaultToleranceForVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__TurnOffFaultToleranceForVM_USCORETask(soap, &soap_tmp___gnvim2__TurnOffFaultToleranceForVM_USCORETask, "-gnvim2:TurnOffFaultToleranceForVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__TurnOffFaultToleranceForVM_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__TurnOffFaultToleranceForVM_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__TurnOffFaultToleranceForVM_USCORETaskResponse.soap_get(soap, "gnvim2:TurnOffFaultToleranceForVM_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MakePrimaryVM_USCORETask(const char *endpoint, const char *soap_action, gnvim2__MakePrimaryVMRequestType *gnvim2__MakePrimaryVM_USCORETask, _gnvim2__MakePrimaryVM_USCORETaskResponse &gnvim2__MakePrimaryVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__MakePrimaryVM_USCORETask soap_tmp___gnvim2__MakePrimaryVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MakePrimaryVM_USCORETask.gnvim2__MakePrimaryVM_USCORETask = gnvim2__MakePrimaryVM_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MakePrimaryVM_USCORETask(soap, &soap_tmp___gnvim2__MakePrimaryVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MakePrimaryVM_USCORETask(soap, &soap_tmp___gnvim2__MakePrimaryVM_USCORETask, "-gnvim2:MakePrimaryVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MakePrimaryVM_USCORETask(soap, &soap_tmp___gnvim2__MakePrimaryVM_USCORETask, "-gnvim2:MakePrimaryVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MakePrimaryVM_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__MakePrimaryVM_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MakePrimaryVM_USCORETaskResponse.soap_get(soap, "gnvim2:MakePrimaryVM_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::TerminateFaultTolerantVM_USCORETask(const char *endpoint, const char *soap_action, gnvim2__TerminateFaultTolerantVMRequestType *gnvim2__TerminateFaultTolerantVM_USCORETask, _gnvim2__TerminateFaultTolerantVM_USCORETaskResponse &gnvim2__TerminateFaultTolerantVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__TerminateFaultTolerantVM_USCORETask soap_tmp___gnvim2__TerminateFaultTolerantVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__TerminateFaultTolerantVM_USCORETask.gnvim2__TerminateFaultTolerantVM_USCORETask = gnvim2__TerminateFaultTolerantVM_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__TerminateFaultTolerantVM_USCORETask(soap, &soap_tmp___gnvim2__TerminateFaultTolerantVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__TerminateFaultTolerantVM_USCORETask(soap, &soap_tmp___gnvim2__TerminateFaultTolerantVM_USCORETask, "-gnvim2:TerminateFaultTolerantVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__TerminateFaultTolerantVM_USCORETask(soap, &soap_tmp___gnvim2__TerminateFaultTolerantVM_USCORETask, "-gnvim2:TerminateFaultTolerantVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__TerminateFaultTolerantVM_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__TerminateFaultTolerantVM_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__TerminateFaultTolerantVM_USCORETaskResponse.soap_get(soap, "gnvim2:TerminateFaultTolerantVM_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DisableSecondaryVM_USCORETask(const char *endpoint, const char *soap_action, gnvim2__DisableSecondaryVMRequestType *gnvim2__DisableSecondaryVM_USCORETask, _gnvim2__DisableSecondaryVM_USCORETaskResponse &gnvim2__DisableSecondaryVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__DisableSecondaryVM_USCORETask soap_tmp___gnvim2__DisableSecondaryVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DisableSecondaryVM_USCORETask.gnvim2__DisableSecondaryVM_USCORETask = gnvim2__DisableSecondaryVM_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DisableSecondaryVM_USCORETask(soap, &soap_tmp___gnvim2__DisableSecondaryVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DisableSecondaryVM_USCORETask(soap, &soap_tmp___gnvim2__DisableSecondaryVM_USCORETask, "-gnvim2:DisableSecondaryVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DisableSecondaryVM_USCORETask(soap, &soap_tmp___gnvim2__DisableSecondaryVM_USCORETask, "-gnvim2:DisableSecondaryVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DisableSecondaryVM_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__DisableSecondaryVM_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DisableSecondaryVM_USCORETaskResponse.soap_get(soap, "gnvim2:DisableSecondaryVM_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EnableSecondaryVM_USCORETask(const char *endpoint, const char *soap_action, gnvim2__EnableSecondaryVMRequestType *gnvim2__EnableSecondaryVM_USCORETask, _gnvim2__EnableSecondaryVM_USCORETaskResponse &gnvim2__EnableSecondaryVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__EnableSecondaryVM_USCORETask soap_tmp___gnvim2__EnableSecondaryVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__EnableSecondaryVM_USCORETask.gnvim2__EnableSecondaryVM_USCORETask = gnvim2__EnableSecondaryVM_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__EnableSecondaryVM_USCORETask(soap, &soap_tmp___gnvim2__EnableSecondaryVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__EnableSecondaryVM_USCORETask(soap, &soap_tmp___gnvim2__EnableSecondaryVM_USCORETask, "-gnvim2:EnableSecondaryVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__EnableSecondaryVM_USCORETask(soap, &soap_tmp___gnvim2__EnableSecondaryVM_USCORETask, "-gnvim2:EnableSecondaryVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__EnableSecondaryVM_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__EnableSecondaryVM_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__EnableSecondaryVM_USCORETaskResponse.soap_get(soap, "gnvim2:EnableSecondaryVM_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetDisplayTopology(const char *endpoint, const char *soap_action, gnvim2__SetDisplayTopologyRequestType *gnvim2__SetDisplayTopology, _gnvim2__SetDisplayTopologyResponse &gnvim2__SetDisplayTopologyResponse)
{	struct soap *soap = this;
	struct __gnvim2__SetDisplayTopology soap_tmp___gnvim2__SetDisplayTopology;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SetDisplayTopology.gnvim2__SetDisplayTopology = gnvim2__SetDisplayTopology;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SetDisplayTopology(soap, &soap_tmp___gnvim2__SetDisplayTopology);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SetDisplayTopology(soap, &soap_tmp___gnvim2__SetDisplayTopology, "-gnvim2:SetDisplayTopology", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SetDisplayTopology(soap, &soap_tmp___gnvim2__SetDisplayTopology, "-gnvim2:SetDisplayTopology", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SetDisplayTopologyResponse)
		return soap_closesock(soap);
	gnvim2__SetDisplayTopologyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SetDisplayTopologyResponse.soap_get(soap, "gnvim2:SetDisplayTopologyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::StartRecording_USCORETask(const char *endpoint, const char *soap_action, gnvim2__StartRecordingRequestType *gnvim2__StartRecording_USCORETask, _gnvim2__StartRecording_USCORETaskResponse &gnvim2__StartRecording_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__StartRecording_USCORETask soap_tmp___gnvim2__StartRecording_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__StartRecording_USCORETask.gnvim2__StartRecording_USCORETask = gnvim2__StartRecording_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__StartRecording_USCORETask(soap, &soap_tmp___gnvim2__StartRecording_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__StartRecording_USCORETask(soap, &soap_tmp___gnvim2__StartRecording_USCORETask, "-gnvim2:StartRecording_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__StartRecording_USCORETask(soap, &soap_tmp___gnvim2__StartRecording_USCORETask, "-gnvim2:StartRecording_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__StartRecording_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__StartRecording_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__StartRecording_USCORETaskResponse.soap_get(soap, "gnvim2:StartRecording_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::StopRecording_USCORETask(const char *endpoint, const char *soap_action, gnvim2__StopRecordingRequestType *gnvim2__StopRecording_USCORETask, _gnvim2__StopRecording_USCORETaskResponse &gnvim2__StopRecording_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__StopRecording_USCORETask soap_tmp___gnvim2__StopRecording_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__StopRecording_USCORETask.gnvim2__StopRecording_USCORETask = gnvim2__StopRecording_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__StopRecording_USCORETask(soap, &soap_tmp___gnvim2__StopRecording_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__StopRecording_USCORETask(soap, &soap_tmp___gnvim2__StopRecording_USCORETask, "-gnvim2:StopRecording_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__StopRecording_USCORETask(soap, &soap_tmp___gnvim2__StopRecording_USCORETask, "-gnvim2:StopRecording_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__StopRecording_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__StopRecording_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__StopRecording_USCORETaskResponse.soap_get(soap, "gnvim2:StopRecording_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::StartReplaying_USCORETask(const char *endpoint, const char *soap_action, gnvim2__StartReplayingRequestType *gnvim2__StartReplaying_USCORETask, _gnvim2__StartReplaying_USCORETaskResponse &gnvim2__StartReplaying_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__StartReplaying_USCORETask soap_tmp___gnvim2__StartReplaying_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__StartReplaying_USCORETask.gnvim2__StartReplaying_USCORETask = gnvim2__StartReplaying_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__StartReplaying_USCORETask(soap, &soap_tmp___gnvim2__StartReplaying_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__StartReplaying_USCORETask(soap, &soap_tmp___gnvim2__StartReplaying_USCORETask, "-gnvim2:StartReplaying_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__StartReplaying_USCORETask(soap, &soap_tmp___gnvim2__StartReplaying_USCORETask, "-gnvim2:StartReplaying_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__StartReplaying_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__StartReplaying_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__StartReplaying_USCORETaskResponse.soap_get(soap, "gnvim2:StartReplaying_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::StopReplaying_USCORETask(const char *endpoint, const char *soap_action, gnvim2__StopReplayingRequestType *gnvim2__StopReplaying_USCORETask, _gnvim2__StopReplaying_USCORETaskResponse &gnvim2__StopReplaying_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__StopReplaying_USCORETask soap_tmp___gnvim2__StopReplaying_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__StopReplaying_USCORETask.gnvim2__StopReplaying_USCORETask = gnvim2__StopReplaying_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__StopReplaying_USCORETask(soap, &soap_tmp___gnvim2__StopReplaying_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__StopReplaying_USCORETask(soap, &soap_tmp___gnvim2__StopReplaying_USCORETask, "-gnvim2:StopReplaying_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__StopReplaying_USCORETask(soap, &soap_tmp___gnvim2__StopReplaying_USCORETask, "-gnvim2:StopReplaying_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__StopReplaying_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__StopReplaying_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__StopReplaying_USCORETaskResponse.soap_get(soap, "gnvim2:StopReplaying_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::PromoteDisks_USCORETask(const char *endpoint, const char *soap_action, gnvim2__PromoteDisksRequestType *gnvim2__PromoteDisks_USCORETask, _gnvim2__PromoteDisks_USCORETaskResponse &gnvim2__PromoteDisks_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__PromoteDisks_USCORETask soap_tmp___gnvim2__PromoteDisks_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__PromoteDisks_USCORETask.gnvim2__PromoteDisks_USCORETask = gnvim2__PromoteDisks_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__PromoteDisks_USCORETask(soap, &soap_tmp___gnvim2__PromoteDisks_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__PromoteDisks_USCORETask(soap, &soap_tmp___gnvim2__PromoteDisks_USCORETask, "-gnvim2:PromoteDisks_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__PromoteDisks_USCORETask(soap, &soap_tmp___gnvim2__PromoteDisks_USCORETask, "-gnvim2:PromoteDisks_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__PromoteDisks_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__PromoteDisks_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__PromoteDisks_USCORETaskResponse.soap_get(soap, "gnvim2:PromoteDisks_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateScreenshot_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CreateScreenshotRequestType *gnvim2__CreateScreenshot_USCORETask, _gnvim2__CreateScreenshot_USCORETaskResponse &gnvim2__CreateScreenshot_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateScreenshot_USCORETask soap_tmp___gnvim2__CreateScreenshot_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateScreenshot_USCORETask.gnvim2__CreateScreenshot_USCORETask = gnvim2__CreateScreenshot_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateScreenshot_USCORETask(soap, &soap_tmp___gnvim2__CreateScreenshot_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateScreenshot_USCORETask(soap, &soap_tmp___gnvim2__CreateScreenshot_USCORETask, "-gnvim2:CreateScreenshot_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateScreenshot_USCORETask(soap, &soap_tmp___gnvim2__CreateScreenshot_USCORETask, "-gnvim2:CreateScreenshot_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateScreenshot_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CreateScreenshot_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateScreenshot_USCORETaskResponse.soap_get(soap, "gnvim2:CreateScreenshot_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryChangedDiskAreas(const char *endpoint, const char *soap_action, gnvim2__QueryChangedDiskAreasRequestType *gnvim2__QueryChangedDiskAreas, _gnvim2__QueryChangedDiskAreasResponse &gnvim2__QueryChangedDiskAreasResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryChangedDiskAreas soap_tmp___gnvim2__QueryChangedDiskAreas;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryChangedDiskAreas.gnvim2__QueryChangedDiskAreas = gnvim2__QueryChangedDiskAreas;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryChangedDiskAreas(soap, &soap_tmp___gnvim2__QueryChangedDiskAreas);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryChangedDiskAreas(soap, &soap_tmp___gnvim2__QueryChangedDiskAreas, "-gnvim2:QueryChangedDiskAreas", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryChangedDiskAreas(soap, &soap_tmp___gnvim2__QueryChangedDiskAreas, "-gnvim2:QueryChangedDiskAreas", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryChangedDiskAreasResponse)
		return soap_closesock(soap);
	gnvim2__QueryChangedDiskAreasResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryChangedDiskAreasResponse.soap_get(soap, "gnvim2:QueryChangedDiskAreasResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryUnownedFiles(const char *endpoint, const char *soap_action, gnvim2__QueryUnownedFilesRequestType *gnvim2__QueryUnownedFiles, _gnvim2__QueryUnownedFilesResponse &gnvim2__QueryUnownedFilesResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryUnownedFiles soap_tmp___gnvim2__QueryUnownedFiles;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryUnownedFiles.gnvim2__QueryUnownedFiles = gnvim2__QueryUnownedFiles;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryUnownedFiles(soap, &soap_tmp___gnvim2__QueryUnownedFiles);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryUnownedFiles(soap, &soap_tmp___gnvim2__QueryUnownedFiles, "-gnvim2:QueryUnownedFiles", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryUnownedFiles(soap, &soap_tmp___gnvim2__QueryUnownedFiles, "-gnvim2:QueryUnownedFiles", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryUnownedFilesResponse)
		return soap_closesock(soap);
	gnvim2__QueryUnownedFilesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryUnownedFilesResponse.soap_get(soap, "gnvim2:QueryUnownedFilesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::reloadVirtualMachineFromPath_USCORETask(const char *endpoint, const char *soap_action, gnvim2__reloadVirtualMachineFromPathRequestType *gnvim2__reloadVirtualMachineFromPath_USCORETask, _gnvim2__reloadVirtualMachineFromPath_USCORETaskResponse &gnvim2__reloadVirtualMachineFromPath_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__reloadVirtualMachineFromPath_USCORETask soap_tmp___gnvim2__reloadVirtualMachineFromPath_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__reloadVirtualMachineFromPath_USCORETask.gnvim2__reloadVirtualMachineFromPath_USCORETask = gnvim2__reloadVirtualMachineFromPath_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__reloadVirtualMachineFromPath_USCORETask(soap, &soap_tmp___gnvim2__reloadVirtualMachineFromPath_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__reloadVirtualMachineFromPath_USCORETask(soap, &soap_tmp___gnvim2__reloadVirtualMachineFromPath_USCORETask, "-gnvim2:reloadVirtualMachineFromPath_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__reloadVirtualMachineFromPath_USCORETask(soap, &soap_tmp___gnvim2__reloadVirtualMachineFromPath_USCORETask, "-gnvim2:reloadVirtualMachineFromPath_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__reloadVirtualMachineFromPath_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__reloadVirtualMachineFromPath_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__reloadVirtualMachineFromPath_USCORETaskResponse.soap_get(soap, "gnvim2:reloadVirtualMachineFromPath_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryFaultToleranceCompatibility(const char *endpoint, const char *soap_action, gnvim2__QueryFaultToleranceCompatibilityRequestType *gnvim2__QueryFaultToleranceCompatibility, _gnvim2__QueryFaultToleranceCompatibilityResponse &gnvim2__QueryFaultToleranceCompatibilityResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryFaultToleranceCompatibility soap_tmp___gnvim2__QueryFaultToleranceCompatibility;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryFaultToleranceCompatibility.gnvim2__QueryFaultToleranceCompatibility = gnvim2__QueryFaultToleranceCompatibility;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryFaultToleranceCompatibility(soap, &soap_tmp___gnvim2__QueryFaultToleranceCompatibility);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryFaultToleranceCompatibility(soap, &soap_tmp___gnvim2__QueryFaultToleranceCompatibility, "-gnvim2:QueryFaultToleranceCompatibility", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryFaultToleranceCompatibility(soap, &soap_tmp___gnvim2__QueryFaultToleranceCompatibility, "-gnvim2:QueryFaultToleranceCompatibility", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryFaultToleranceCompatibilityResponse)
		return soap_closesock(soap);
	gnvim2__QueryFaultToleranceCompatibilityResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryFaultToleranceCompatibilityResponse.soap_get(soap, "gnvim2:QueryFaultToleranceCompatibilityResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryFaultToleranceCompatibilityEx(const char *endpoint, const char *soap_action, gnvim2__QueryFaultToleranceCompatibilityExRequestType *gnvim2__QueryFaultToleranceCompatibilityEx, _gnvim2__QueryFaultToleranceCompatibilityExResponse &gnvim2__QueryFaultToleranceCompatibilityExResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryFaultToleranceCompatibilityEx soap_tmp___gnvim2__QueryFaultToleranceCompatibilityEx;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryFaultToleranceCompatibilityEx.gnvim2__QueryFaultToleranceCompatibilityEx = gnvim2__QueryFaultToleranceCompatibilityEx;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryFaultToleranceCompatibilityEx(soap, &soap_tmp___gnvim2__QueryFaultToleranceCompatibilityEx);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryFaultToleranceCompatibilityEx(soap, &soap_tmp___gnvim2__QueryFaultToleranceCompatibilityEx, "-gnvim2:QueryFaultToleranceCompatibilityEx", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryFaultToleranceCompatibilityEx(soap, &soap_tmp___gnvim2__QueryFaultToleranceCompatibilityEx, "-gnvim2:QueryFaultToleranceCompatibilityEx", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryFaultToleranceCompatibilityExResponse)
		return soap_closesock(soap);
	gnvim2__QueryFaultToleranceCompatibilityExResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryFaultToleranceCompatibilityExResponse.soap_get(soap, "gnvim2:QueryFaultToleranceCompatibilityExResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::TerminateVM(const char *endpoint, const char *soap_action, gnvim2__TerminateVMRequestType *gnvim2__TerminateVM, _gnvim2__TerminateVMResponse &gnvim2__TerminateVMResponse)
{	struct soap *soap = this;
	struct __gnvim2__TerminateVM soap_tmp___gnvim2__TerminateVM;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__TerminateVM.gnvim2__TerminateVM = gnvim2__TerminateVM;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__TerminateVM(soap, &soap_tmp___gnvim2__TerminateVM);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__TerminateVM(soap, &soap_tmp___gnvim2__TerminateVM, "-gnvim2:TerminateVM", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__TerminateVM(soap, &soap_tmp___gnvim2__TerminateVM, "-gnvim2:TerminateVM", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__TerminateVMResponse)
		return soap_closesock(soap);
	gnvim2__TerminateVMResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__TerminateVMResponse.soap_get(soap, "gnvim2:TerminateVMResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SendNMI(const char *endpoint, const char *soap_action, gnvim2__SendNMIRequestType *gnvim2__SendNMI, _gnvim2__SendNMIResponse &gnvim2__SendNMIResponse)
{	struct soap *soap = this;
	struct __gnvim2__SendNMI soap_tmp___gnvim2__SendNMI;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SendNMI.gnvim2__SendNMI = gnvim2__SendNMI;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SendNMI(soap, &soap_tmp___gnvim2__SendNMI);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SendNMI(soap, &soap_tmp___gnvim2__SendNMI, "-gnvim2:SendNMI", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SendNMI(soap, &soap_tmp___gnvim2__SendNMI, "-gnvim2:SendNMI", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SendNMIResponse)
		return soap_closesock(soap);
	gnvim2__SendNMIResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SendNMIResponse.soap_get(soap, "gnvim2:SendNMIResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::PerformVsanUpgradePreflightCheck(const char *endpoint, const char *soap_action, gnvim2__PerformVsanUpgradePreflightCheckRequestType *gnvim2__PerformVsanUpgradePreflightCheck, _gnvim2__PerformVsanUpgradePreflightCheckResponse &gnvim2__PerformVsanUpgradePreflightCheckResponse)
{	struct soap *soap = this;
	struct __gnvim2__PerformVsanUpgradePreflightCheck soap_tmp___gnvim2__PerformVsanUpgradePreflightCheck;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__PerformVsanUpgradePreflightCheck.gnvim2__PerformVsanUpgradePreflightCheck = gnvim2__PerformVsanUpgradePreflightCheck;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__PerformVsanUpgradePreflightCheck(soap, &soap_tmp___gnvim2__PerformVsanUpgradePreflightCheck);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__PerformVsanUpgradePreflightCheck(soap, &soap_tmp___gnvim2__PerformVsanUpgradePreflightCheck, "-gnvim2:PerformVsanUpgradePreflightCheck", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__PerformVsanUpgradePreflightCheck(soap, &soap_tmp___gnvim2__PerformVsanUpgradePreflightCheck, "-gnvim2:PerformVsanUpgradePreflightCheck", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__PerformVsanUpgradePreflightCheckResponse)
		return soap_closesock(soap);
	gnvim2__PerformVsanUpgradePreflightCheckResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__PerformVsanUpgradePreflightCheckResponse.soap_get(soap, "gnvim2:PerformVsanUpgradePreflightCheckResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryVsanUpgradeStatus(const char *endpoint, const char *soap_action, gnvim2__QueryVsanUpgradeStatusRequestType *gnvim2__QueryVsanUpgradeStatus, _gnvim2__QueryVsanUpgradeStatusResponse &gnvim2__QueryVsanUpgradeStatusResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryVsanUpgradeStatus soap_tmp___gnvim2__QueryVsanUpgradeStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryVsanUpgradeStatus.gnvim2__QueryVsanUpgradeStatus = gnvim2__QueryVsanUpgradeStatus;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryVsanUpgradeStatus(soap, &soap_tmp___gnvim2__QueryVsanUpgradeStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryVsanUpgradeStatus(soap, &soap_tmp___gnvim2__QueryVsanUpgradeStatus, "-gnvim2:QueryVsanUpgradeStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryVsanUpgradeStatus(soap, &soap_tmp___gnvim2__QueryVsanUpgradeStatus, "-gnvim2:QueryVsanUpgradeStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryVsanUpgradeStatusResponse)
		return soap_closesock(soap);
	gnvim2__QueryVsanUpgradeStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryVsanUpgradeStatusResponse.soap_get(soap, "gnvim2:QueryVsanUpgradeStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::PerformVsanUpgrade_USCORETask(const char *endpoint, const char *soap_action, gnvim2__PerformVsanUpgradeRequestType *gnvim2__PerformVsanUpgrade_USCORETask, _gnvim2__PerformVsanUpgrade_USCORETaskResponse &gnvim2__PerformVsanUpgrade_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__PerformVsanUpgrade_USCORETask soap_tmp___gnvim2__PerformVsanUpgrade_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__PerformVsanUpgrade_USCORETask.gnvim2__PerformVsanUpgrade_USCORETask = gnvim2__PerformVsanUpgrade_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__PerformVsanUpgrade_USCORETask(soap, &soap_tmp___gnvim2__PerformVsanUpgrade_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__PerformVsanUpgrade_USCORETask(soap, &soap_tmp___gnvim2__PerformVsanUpgrade_USCORETask, "-gnvim2:PerformVsanUpgrade_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__PerformVsanUpgrade_USCORETask(soap, &soap_tmp___gnvim2__PerformVsanUpgrade_USCORETask, "-gnvim2:PerformVsanUpgrade_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__PerformVsanUpgrade_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__PerformVsanUpgrade_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__PerformVsanUpgrade_USCORETaskResponse.soap_get(soap, "gnvim2:PerformVsanUpgrade_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveAlarm(const char *endpoint, const char *soap_action, gnvim2__RemoveAlarmRequestType *gnvim2__RemoveAlarm, _gnvim2__RemoveAlarmResponse &gnvim2__RemoveAlarmResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveAlarm soap_tmp___gnvim2__RemoveAlarm;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveAlarm.gnvim2__RemoveAlarm = gnvim2__RemoveAlarm;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveAlarm(soap, &soap_tmp___gnvim2__RemoveAlarm);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveAlarm(soap, &soap_tmp___gnvim2__RemoveAlarm, "-gnvim2:RemoveAlarm", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveAlarm(soap, &soap_tmp___gnvim2__RemoveAlarm, "-gnvim2:RemoveAlarm", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveAlarmResponse)
		return soap_closesock(soap);
	gnvim2__RemoveAlarmResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveAlarmResponse.soap_get(soap, "gnvim2:RemoveAlarmResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureAlarm(const char *endpoint, const char *soap_action, gnvim2__ReconfigureAlarmRequestType *gnvim2__ReconfigureAlarm, _gnvim2__ReconfigureAlarmResponse &gnvim2__ReconfigureAlarmResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReconfigureAlarm soap_tmp___gnvim2__ReconfigureAlarm;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReconfigureAlarm.gnvim2__ReconfigureAlarm = gnvim2__ReconfigureAlarm;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReconfigureAlarm(soap, &soap_tmp___gnvim2__ReconfigureAlarm);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReconfigureAlarm(soap, &soap_tmp___gnvim2__ReconfigureAlarm, "-gnvim2:ReconfigureAlarm", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReconfigureAlarm(soap, &soap_tmp___gnvim2__ReconfigureAlarm, "-gnvim2:ReconfigureAlarm", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReconfigureAlarmResponse)
		return soap_closesock(soap);
	gnvim2__ReconfigureAlarmResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReconfigureAlarmResponse.soap_get(soap, "gnvim2:ReconfigureAlarmResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateAlarm(const char *endpoint, const char *soap_action, gnvim2__CreateAlarmRequestType *gnvim2__CreateAlarm, _gnvim2__CreateAlarmResponse &gnvim2__CreateAlarmResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateAlarm soap_tmp___gnvim2__CreateAlarm;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateAlarm.gnvim2__CreateAlarm = gnvim2__CreateAlarm;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateAlarm(soap, &soap_tmp___gnvim2__CreateAlarm);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateAlarm(soap, &soap_tmp___gnvim2__CreateAlarm, "-gnvim2:CreateAlarm", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateAlarm(soap, &soap_tmp___gnvim2__CreateAlarm, "-gnvim2:CreateAlarm", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateAlarmResponse)
		return soap_closesock(soap);
	gnvim2__CreateAlarmResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateAlarmResponse.soap_get(soap, "gnvim2:CreateAlarmResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::GetAlarm(const char *endpoint, const char *soap_action, gnvim2__GetAlarmRequestType *gnvim2__GetAlarm, _gnvim2__GetAlarmResponse &gnvim2__GetAlarmResponse)
{	struct soap *soap = this;
	struct __gnvim2__GetAlarm soap_tmp___gnvim2__GetAlarm;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__GetAlarm.gnvim2__GetAlarm = gnvim2__GetAlarm;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__GetAlarm(soap, &soap_tmp___gnvim2__GetAlarm);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__GetAlarm(soap, &soap_tmp___gnvim2__GetAlarm, "-gnvim2:GetAlarm", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__GetAlarm(soap, &soap_tmp___gnvim2__GetAlarm, "-gnvim2:GetAlarm", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__GetAlarmResponse)
		return soap_closesock(soap);
	gnvim2__GetAlarmResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__GetAlarmResponse.soap_get(soap, "gnvim2:GetAlarmResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AreAlarmActionsEnabled(const char *endpoint, const char *soap_action, gnvim2__AreAlarmActionsEnabledRequestType *gnvim2__AreAlarmActionsEnabled, _gnvim2__AreAlarmActionsEnabledResponse &gnvim2__AreAlarmActionsEnabledResponse)
{	struct soap *soap = this;
	struct __gnvim2__AreAlarmActionsEnabled soap_tmp___gnvim2__AreAlarmActionsEnabled;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AreAlarmActionsEnabled.gnvim2__AreAlarmActionsEnabled = gnvim2__AreAlarmActionsEnabled;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AreAlarmActionsEnabled(soap, &soap_tmp___gnvim2__AreAlarmActionsEnabled);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AreAlarmActionsEnabled(soap, &soap_tmp___gnvim2__AreAlarmActionsEnabled, "-gnvim2:AreAlarmActionsEnabled", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AreAlarmActionsEnabled(soap, &soap_tmp___gnvim2__AreAlarmActionsEnabled, "-gnvim2:AreAlarmActionsEnabled", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AreAlarmActionsEnabledResponse)
		return soap_closesock(soap);
	gnvim2__AreAlarmActionsEnabledResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AreAlarmActionsEnabledResponse.soap_get(soap, "gnvim2:AreAlarmActionsEnabledResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EnableAlarmActions(const char *endpoint, const char *soap_action, gnvim2__EnableAlarmActionsRequestType *gnvim2__EnableAlarmActions, _gnvim2__EnableAlarmActionsResponse &gnvim2__EnableAlarmActionsResponse)
{	struct soap *soap = this;
	struct __gnvim2__EnableAlarmActions soap_tmp___gnvim2__EnableAlarmActions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__EnableAlarmActions.gnvim2__EnableAlarmActions = gnvim2__EnableAlarmActions;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__EnableAlarmActions(soap, &soap_tmp___gnvim2__EnableAlarmActions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__EnableAlarmActions(soap, &soap_tmp___gnvim2__EnableAlarmActions, "-gnvim2:EnableAlarmActions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__EnableAlarmActions(soap, &soap_tmp___gnvim2__EnableAlarmActions, "-gnvim2:EnableAlarmActions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__EnableAlarmActionsResponse)
		return soap_closesock(soap);
	gnvim2__EnableAlarmActionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__EnableAlarmActionsResponse.soap_get(soap, "gnvim2:EnableAlarmActionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::GetAlarmState(const char *endpoint, const char *soap_action, gnvim2__GetAlarmStateRequestType *gnvim2__GetAlarmState, _gnvim2__GetAlarmStateResponse &gnvim2__GetAlarmStateResponse)
{	struct soap *soap = this;
	struct __gnvim2__GetAlarmState soap_tmp___gnvim2__GetAlarmState;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__GetAlarmState.gnvim2__GetAlarmState = gnvim2__GetAlarmState;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__GetAlarmState(soap, &soap_tmp___gnvim2__GetAlarmState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__GetAlarmState(soap, &soap_tmp___gnvim2__GetAlarmState, "-gnvim2:GetAlarmState", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__GetAlarmState(soap, &soap_tmp___gnvim2__GetAlarmState, "-gnvim2:GetAlarmState", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__GetAlarmStateResponse)
		return soap_closesock(soap);
	gnvim2__GetAlarmStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__GetAlarmStateResponse.soap_get(soap, "gnvim2:GetAlarmStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AcknowledgeAlarm(const char *endpoint, const char *soap_action, gnvim2__AcknowledgeAlarmRequestType *gnvim2__AcknowledgeAlarm, _gnvim2__AcknowledgeAlarmResponse &gnvim2__AcknowledgeAlarmResponse)
{	struct soap *soap = this;
	struct __gnvim2__AcknowledgeAlarm soap_tmp___gnvim2__AcknowledgeAlarm;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AcknowledgeAlarm.gnvim2__AcknowledgeAlarm = gnvim2__AcknowledgeAlarm;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AcknowledgeAlarm(soap, &soap_tmp___gnvim2__AcknowledgeAlarm);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AcknowledgeAlarm(soap, &soap_tmp___gnvim2__AcknowledgeAlarm, "-gnvim2:AcknowledgeAlarm", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AcknowledgeAlarm(soap, &soap_tmp___gnvim2__AcknowledgeAlarm, "-gnvim2:AcknowledgeAlarm", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AcknowledgeAlarmResponse)
		return soap_closesock(soap);
	gnvim2__AcknowledgeAlarmResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AcknowledgeAlarmResponse.soap_get(soap, "gnvim2:AcknowledgeAlarmResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ConfigureEvcMode_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ConfigureEvcModeRequestType *gnvim2__ConfigureEvcMode_USCORETask, _gnvim2__ConfigureEvcMode_USCORETaskResponse &gnvim2__ConfigureEvcMode_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ConfigureEvcMode_USCORETask soap_tmp___gnvim2__ConfigureEvcMode_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ConfigureEvcMode_USCORETask.gnvim2__ConfigureEvcMode_USCORETask = gnvim2__ConfigureEvcMode_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ConfigureEvcMode_USCORETask(soap, &soap_tmp___gnvim2__ConfigureEvcMode_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ConfigureEvcMode_USCORETask(soap, &soap_tmp___gnvim2__ConfigureEvcMode_USCORETask, "-gnvim2:ConfigureEvcMode_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ConfigureEvcMode_USCORETask(soap, &soap_tmp___gnvim2__ConfigureEvcMode_USCORETask, "-gnvim2:ConfigureEvcMode_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ConfigureEvcMode_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ConfigureEvcMode_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ConfigureEvcMode_USCORETaskResponse.soap_get(soap, "gnvim2:ConfigureEvcMode_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DisableEvcMode_USCORETask(const char *endpoint, const char *soap_action, gnvim2__DisableEvcModeRequestType *gnvim2__DisableEvcMode_USCORETask, _gnvim2__DisableEvcMode_USCORETaskResponse &gnvim2__DisableEvcMode_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__DisableEvcMode_USCORETask soap_tmp___gnvim2__DisableEvcMode_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DisableEvcMode_USCORETask.gnvim2__DisableEvcMode_USCORETask = gnvim2__DisableEvcMode_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DisableEvcMode_USCORETask(soap, &soap_tmp___gnvim2__DisableEvcMode_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DisableEvcMode_USCORETask(soap, &soap_tmp___gnvim2__DisableEvcMode_USCORETask, "-gnvim2:DisableEvcMode_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DisableEvcMode_USCORETask(soap, &soap_tmp___gnvim2__DisableEvcMode_USCORETask, "-gnvim2:DisableEvcMode_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DisableEvcMode_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__DisableEvcMode_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DisableEvcMode_USCORETaskResponse.soap_get(soap, "gnvim2:DisableEvcMode_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CheckConfigureEvcMode_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CheckConfigureEvcModeRequestType *gnvim2__CheckConfigureEvcMode_USCORETask, _gnvim2__CheckConfigureEvcMode_USCORETaskResponse &gnvim2__CheckConfigureEvcMode_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CheckConfigureEvcMode_USCORETask soap_tmp___gnvim2__CheckConfigureEvcMode_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CheckConfigureEvcMode_USCORETask.gnvim2__CheckConfigureEvcMode_USCORETask = gnvim2__CheckConfigureEvcMode_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CheckConfigureEvcMode_USCORETask(soap, &soap_tmp___gnvim2__CheckConfigureEvcMode_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CheckConfigureEvcMode_USCORETask(soap, &soap_tmp___gnvim2__CheckConfigureEvcMode_USCORETask, "-gnvim2:CheckConfigureEvcMode_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CheckConfigureEvcMode_USCORETask(soap, &soap_tmp___gnvim2__CheckConfigureEvcMode_USCORETask, "-gnvim2:CheckConfigureEvcMode_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CheckConfigureEvcMode_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CheckConfigureEvcMode_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CheckConfigureEvcMode_USCORETaskResponse.soap_get(soap, "gnvim2:CheckConfigureEvcMode_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CheckAddHostEvc_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CheckAddHostEvcRequestType *gnvim2__CheckAddHostEvc_USCORETask, _gnvim2__CheckAddHostEvc_USCORETaskResponse &gnvim2__CheckAddHostEvc_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CheckAddHostEvc_USCORETask soap_tmp___gnvim2__CheckAddHostEvc_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CheckAddHostEvc_USCORETask.gnvim2__CheckAddHostEvc_USCORETask = gnvim2__CheckAddHostEvc_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CheckAddHostEvc_USCORETask(soap, &soap_tmp___gnvim2__CheckAddHostEvc_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CheckAddHostEvc_USCORETask(soap, &soap_tmp___gnvim2__CheckAddHostEvc_USCORETask, "-gnvim2:CheckAddHostEvc_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CheckAddHostEvc_USCORETask(soap, &soap_tmp___gnvim2__CheckAddHostEvc_USCORETask, "-gnvim2:CheckAddHostEvc_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CheckAddHostEvc_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CheckAddHostEvc_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CheckAddHostEvc_USCORETaskResponse.soap_get(soap, "gnvim2:CheckAddHostEvc_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureDVPortgroup_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ReconfigureDVPortgroupRequestType *gnvim2__ReconfigureDVPortgroup_USCORETask, _gnvim2__ReconfigureDVPortgroup_USCORETaskResponse &gnvim2__ReconfigureDVPortgroup_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReconfigureDVPortgroup_USCORETask soap_tmp___gnvim2__ReconfigureDVPortgroup_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReconfigureDVPortgroup_USCORETask.gnvim2__ReconfigureDVPortgroup_USCORETask = gnvim2__ReconfigureDVPortgroup_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReconfigureDVPortgroup_USCORETask(soap, &soap_tmp___gnvim2__ReconfigureDVPortgroup_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReconfigureDVPortgroup_USCORETask(soap, &soap_tmp___gnvim2__ReconfigureDVPortgroup_USCORETask, "-gnvim2:ReconfigureDVPortgroup_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReconfigureDVPortgroup_USCORETask(soap, &soap_tmp___gnvim2__ReconfigureDVPortgroup_USCORETask, "-gnvim2:ReconfigureDVPortgroup_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReconfigureDVPortgroup_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ReconfigureDVPortgroup_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReconfigureDVPortgroup_USCORETaskResponse.soap_get(soap, "gnvim2:ReconfigureDVPortgroup_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DVPortgroupRollback_USCORETask(const char *endpoint, const char *soap_action, gnvim2__DVPortgroupRollbackRequestType *gnvim2__DVPortgroupRollback_USCORETask, _gnvim2__DVPortgroupRollback_USCORETaskResponse &gnvim2__DVPortgroupRollback_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__DVPortgroupRollback_USCORETask soap_tmp___gnvim2__DVPortgroupRollback_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DVPortgroupRollback_USCORETask.gnvim2__DVPortgroupRollback_USCORETask = gnvim2__DVPortgroupRollback_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DVPortgroupRollback_USCORETask(soap, &soap_tmp___gnvim2__DVPortgroupRollback_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DVPortgroupRollback_USCORETask(soap, &soap_tmp___gnvim2__DVPortgroupRollback_USCORETask, "-gnvim2:DVPortgroupRollback_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DVPortgroupRollback_USCORETask(soap, &soap_tmp___gnvim2__DVPortgroupRollback_USCORETask, "-gnvim2:DVPortgroupRollback_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DVPortgroupRollback_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__DVPortgroupRollback_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DVPortgroupRollback_USCORETaskResponse.soap_get(soap, "gnvim2:DVPortgroupRollback_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryAvailableDvsSpec(const char *endpoint, const char *soap_action, gnvim2__QueryAvailableDvsSpecRequestType *gnvim2__QueryAvailableDvsSpec, _gnvim2__QueryAvailableDvsSpecResponse &gnvim2__QueryAvailableDvsSpecResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryAvailableDvsSpec soap_tmp___gnvim2__QueryAvailableDvsSpec;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryAvailableDvsSpec.gnvim2__QueryAvailableDvsSpec = gnvim2__QueryAvailableDvsSpec;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryAvailableDvsSpec(soap, &soap_tmp___gnvim2__QueryAvailableDvsSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryAvailableDvsSpec(soap, &soap_tmp___gnvim2__QueryAvailableDvsSpec, "-gnvim2:QueryAvailableDvsSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryAvailableDvsSpec(soap, &soap_tmp___gnvim2__QueryAvailableDvsSpec, "-gnvim2:QueryAvailableDvsSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryAvailableDvsSpecResponse)
		return soap_closesock(soap);
	gnvim2__QueryAvailableDvsSpecResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryAvailableDvsSpecResponse.soap_get(soap, "gnvim2:QueryAvailableDvsSpecResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryCompatibleHostForNewDvs(const char *endpoint, const char *soap_action, gnvim2__QueryCompatibleHostForNewDvsRequestType *gnvim2__QueryCompatibleHostForNewDvs, _gnvim2__QueryCompatibleHostForNewDvsResponse &gnvim2__QueryCompatibleHostForNewDvsResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryCompatibleHostForNewDvs soap_tmp___gnvim2__QueryCompatibleHostForNewDvs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryCompatibleHostForNewDvs.gnvim2__QueryCompatibleHostForNewDvs = gnvim2__QueryCompatibleHostForNewDvs;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryCompatibleHostForNewDvs(soap, &soap_tmp___gnvim2__QueryCompatibleHostForNewDvs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryCompatibleHostForNewDvs(soap, &soap_tmp___gnvim2__QueryCompatibleHostForNewDvs, "-gnvim2:QueryCompatibleHostForNewDvs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryCompatibleHostForNewDvs(soap, &soap_tmp___gnvim2__QueryCompatibleHostForNewDvs, "-gnvim2:QueryCompatibleHostForNewDvs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryCompatibleHostForNewDvsResponse)
		return soap_closesock(soap);
	gnvim2__QueryCompatibleHostForNewDvsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryCompatibleHostForNewDvsResponse.soap_get(soap, "gnvim2:QueryCompatibleHostForNewDvsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryCompatibleHostForExistingDvs(const char *endpoint, const char *soap_action, gnvim2__QueryCompatibleHostForExistingDvsRequestType *gnvim2__QueryCompatibleHostForExistingDvs, _gnvim2__QueryCompatibleHostForExistingDvsResponse &gnvim2__QueryCompatibleHostForExistingDvsResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryCompatibleHostForExistingDvs soap_tmp___gnvim2__QueryCompatibleHostForExistingDvs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryCompatibleHostForExistingDvs.gnvim2__QueryCompatibleHostForExistingDvs = gnvim2__QueryCompatibleHostForExistingDvs;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryCompatibleHostForExistingDvs(soap, &soap_tmp___gnvim2__QueryCompatibleHostForExistingDvs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryCompatibleHostForExistingDvs(soap, &soap_tmp___gnvim2__QueryCompatibleHostForExistingDvs, "-gnvim2:QueryCompatibleHostForExistingDvs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryCompatibleHostForExistingDvs(soap, &soap_tmp___gnvim2__QueryCompatibleHostForExistingDvs, "-gnvim2:QueryCompatibleHostForExistingDvs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryCompatibleHostForExistingDvsResponse)
		return soap_closesock(soap);
	gnvim2__QueryCompatibleHostForExistingDvsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryCompatibleHostForExistingDvsResponse.soap_get(soap, "gnvim2:QueryCompatibleHostForExistingDvsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryDvsCompatibleHostSpec(const char *endpoint, const char *soap_action, gnvim2__QueryDvsCompatibleHostSpecRequestType *gnvim2__QueryDvsCompatibleHostSpec, _gnvim2__QueryDvsCompatibleHostSpecResponse &gnvim2__QueryDvsCompatibleHostSpecResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryDvsCompatibleHostSpec soap_tmp___gnvim2__QueryDvsCompatibleHostSpec;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryDvsCompatibleHostSpec.gnvim2__QueryDvsCompatibleHostSpec = gnvim2__QueryDvsCompatibleHostSpec;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryDvsCompatibleHostSpec(soap, &soap_tmp___gnvim2__QueryDvsCompatibleHostSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryDvsCompatibleHostSpec(soap, &soap_tmp___gnvim2__QueryDvsCompatibleHostSpec, "-gnvim2:QueryDvsCompatibleHostSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryDvsCompatibleHostSpec(soap, &soap_tmp___gnvim2__QueryDvsCompatibleHostSpec, "-gnvim2:QueryDvsCompatibleHostSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryDvsCompatibleHostSpecResponse)
		return soap_closesock(soap);
	gnvim2__QueryDvsCompatibleHostSpecResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryDvsCompatibleHostSpecResponse.soap_get(soap, "gnvim2:QueryDvsCompatibleHostSpecResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryDvsFeatureCapability(const char *endpoint, const char *soap_action, gnvim2__QueryDvsFeatureCapabilityRequestType *gnvim2__QueryDvsFeatureCapability, _gnvim2__QueryDvsFeatureCapabilityResponse &gnvim2__QueryDvsFeatureCapabilityResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryDvsFeatureCapability soap_tmp___gnvim2__QueryDvsFeatureCapability;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryDvsFeatureCapability.gnvim2__QueryDvsFeatureCapability = gnvim2__QueryDvsFeatureCapability;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryDvsFeatureCapability(soap, &soap_tmp___gnvim2__QueryDvsFeatureCapability);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryDvsFeatureCapability(soap, &soap_tmp___gnvim2__QueryDvsFeatureCapability, "-gnvim2:QueryDvsFeatureCapability", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryDvsFeatureCapability(soap, &soap_tmp___gnvim2__QueryDvsFeatureCapability, "-gnvim2:QueryDvsFeatureCapability", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryDvsFeatureCapabilityResponse)
		return soap_closesock(soap);
	gnvim2__QueryDvsFeatureCapabilityResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryDvsFeatureCapabilityResponse.soap_get(soap, "gnvim2:QueryDvsFeatureCapabilityResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryDvsByUuid(const char *endpoint, const char *soap_action, gnvim2__QueryDvsByUuidRequestType *gnvim2__QueryDvsByUuid, _gnvim2__QueryDvsByUuidResponse &gnvim2__QueryDvsByUuidResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryDvsByUuid soap_tmp___gnvim2__QueryDvsByUuid;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryDvsByUuid.gnvim2__QueryDvsByUuid = gnvim2__QueryDvsByUuid;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryDvsByUuid(soap, &soap_tmp___gnvim2__QueryDvsByUuid);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryDvsByUuid(soap, &soap_tmp___gnvim2__QueryDvsByUuid, "-gnvim2:QueryDvsByUuid", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryDvsByUuid(soap, &soap_tmp___gnvim2__QueryDvsByUuid, "-gnvim2:QueryDvsByUuid", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryDvsByUuidResponse)
		return soap_closesock(soap);
	gnvim2__QueryDvsByUuidResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryDvsByUuidResponse.soap_get(soap, "gnvim2:QueryDvsByUuidResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryDvsConfigTarget(const char *endpoint, const char *soap_action, gnvim2__QueryDvsConfigTargetRequestType *gnvim2__QueryDvsConfigTarget, _gnvim2__QueryDvsConfigTargetResponse &gnvim2__QueryDvsConfigTargetResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryDvsConfigTarget soap_tmp___gnvim2__QueryDvsConfigTarget;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryDvsConfigTarget.gnvim2__QueryDvsConfigTarget = gnvim2__QueryDvsConfigTarget;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryDvsConfigTarget(soap, &soap_tmp___gnvim2__QueryDvsConfigTarget);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryDvsConfigTarget(soap, &soap_tmp___gnvim2__QueryDvsConfigTarget, "-gnvim2:QueryDvsConfigTarget", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryDvsConfigTarget(soap, &soap_tmp___gnvim2__QueryDvsConfigTarget, "-gnvim2:QueryDvsConfigTarget", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryDvsConfigTargetResponse)
		return soap_closesock(soap);
	gnvim2__QueryDvsConfigTargetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryDvsConfigTargetResponse.soap_get(soap, "gnvim2:QueryDvsConfigTargetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryDvsCheckCompatibility(const char *endpoint, const char *soap_action, gnvim2__QueryDvsCheckCompatibilityRequestType *gnvim2__QueryDvsCheckCompatibility, _gnvim2__QueryDvsCheckCompatibilityResponse &gnvim2__QueryDvsCheckCompatibilityResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryDvsCheckCompatibility soap_tmp___gnvim2__QueryDvsCheckCompatibility;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryDvsCheckCompatibility.gnvim2__QueryDvsCheckCompatibility = gnvim2__QueryDvsCheckCompatibility;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryDvsCheckCompatibility(soap, &soap_tmp___gnvim2__QueryDvsCheckCompatibility);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryDvsCheckCompatibility(soap, &soap_tmp___gnvim2__QueryDvsCheckCompatibility, "-gnvim2:QueryDvsCheckCompatibility", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryDvsCheckCompatibility(soap, &soap_tmp___gnvim2__QueryDvsCheckCompatibility, "-gnvim2:QueryDvsCheckCompatibility", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryDvsCheckCompatibilityResponse)
		return soap_closesock(soap);
	gnvim2__QueryDvsCheckCompatibilityResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryDvsCheckCompatibilityResponse.soap_get(soap, "gnvim2:QueryDvsCheckCompatibilityResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RectifyDvsOnHost_USCORETask(const char *endpoint, const char *soap_action, gnvim2__RectifyDvsOnHostRequestType *gnvim2__RectifyDvsOnHost_USCORETask, _gnvim2__RectifyDvsOnHost_USCORETaskResponse &gnvim2__RectifyDvsOnHost_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__RectifyDvsOnHost_USCORETask soap_tmp___gnvim2__RectifyDvsOnHost_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RectifyDvsOnHost_USCORETask.gnvim2__RectifyDvsOnHost_USCORETask = gnvim2__RectifyDvsOnHost_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RectifyDvsOnHost_USCORETask(soap, &soap_tmp___gnvim2__RectifyDvsOnHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RectifyDvsOnHost_USCORETask(soap, &soap_tmp___gnvim2__RectifyDvsOnHost_USCORETask, "-gnvim2:RectifyDvsOnHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RectifyDvsOnHost_USCORETask(soap, &soap_tmp___gnvim2__RectifyDvsOnHost_USCORETask, "-gnvim2:RectifyDvsOnHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RectifyDvsOnHost_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__RectifyDvsOnHost_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RectifyDvsOnHost_USCORETaskResponse.soap_get(soap, "gnvim2:RectifyDvsOnHost_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DVSManagerExportEntity_USCORETask(const char *endpoint, const char *soap_action, gnvim2__DVSManagerExportEntityRequestType *gnvim2__DVSManagerExportEntity_USCORETask, _gnvim2__DVSManagerExportEntity_USCORETaskResponse &gnvim2__DVSManagerExportEntity_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__DVSManagerExportEntity_USCORETask soap_tmp___gnvim2__DVSManagerExportEntity_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DVSManagerExportEntity_USCORETask.gnvim2__DVSManagerExportEntity_USCORETask = gnvim2__DVSManagerExportEntity_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DVSManagerExportEntity_USCORETask(soap, &soap_tmp___gnvim2__DVSManagerExportEntity_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DVSManagerExportEntity_USCORETask(soap, &soap_tmp___gnvim2__DVSManagerExportEntity_USCORETask, "-gnvim2:DVSManagerExportEntity_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DVSManagerExportEntity_USCORETask(soap, &soap_tmp___gnvim2__DVSManagerExportEntity_USCORETask, "-gnvim2:DVSManagerExportEntity_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DVSManagerExportEntity_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__DVSManagerExportEntity_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DVSManagerExportEntity_USCORETaskResponse.soap_get(soap, "gnvim2:DVSManagerExportEntity_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DVSManagerImportEntity_USCORETask(const char *endpoint, const char *soap_action, gnvim2__DVSManagerImportEntityRequestType *gnvim2__DVSManagerImportEntity_USCORETask, _gnvim2__DVSManagerImportEntity_USCORETaskResponse &gnvim2__DVSManagerImportEntity_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__DVSManagerImportEntity_USCORETask soap_tmp___gnvim2__DVSManagerImportEntity_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DVSManagerImportEntity_USCORETask.gnvim2__DVSManagerImportEntity_USCORETask = gnvim2__DVSManagerImportEntity_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DVSManagerImportEntity_USCORETask(soap, &soap_tmp___gnvim2__DVSManagerImportEntity_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DVSManagerImportEntity_USCORETask(soap, &soap_tmp___gnvim2__DVSManagerImportEntity_USCORETask, "-gnvim2:DVSManagerImportEntity_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DVSManagerImportEntity_USCORETask(soap, &soap_tmp___gnvim2__DVSManagerImportEntity_USCORETask, "-gnvim2:DVSManagerImportEntity_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DVSManagerImportEntity_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__DVSManagerImportEntity_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DVSManagerImportEntity_USCORETaskResponse.soap_get(soap, "gnvim2:DVSManagerImportEntity_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DVSManagerLookupDvPortGroup(const char *endpoint, const char *soap_action, gnvim2__DVSManagerLookupDvPortGroupRequestType *gnvim2__DVSManagerLookupDvPortGroup, _gnvim2__DVSManagerLookupDvPortGroupResponse &gnvim2__DVSManagerLookupDvPortGroupResponse)
{	struct soap *soap = this;
	struct __gnvim2__DVSManagerLookupDvPortGroup soap_tmp___gnvim2__DVSManagerLookupDvPortGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DVSManagerLookupDvPortGroup.gnvim2__DVSManagerLookupDvPortGroup = gnvim2__DVSManagerLookupDvPortGroup;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DVSManagerLookupDvPortGroup(soap, &soap_tmp___gnvim2__DVSManagerLookupDvPortGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DVSManagerLookupDvPortGroup(soap, &soap_tmp___gnvim2__DVSManagerLookupDvPortGroup, "-gnvim2:DVSManagerLookupDvPortGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DVSManagerLookupDvPortGroup(soap, &soap_tmp___gnvim2__DVSManagerLookupDvPortGroup, "-gnvim2:DVSManagerLookupDvPortGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DVSManagerLookupDvPortGroupResponse)
		return soap_closesock(soap);
	gnvim2__DVSManagerLookupDvPortGroupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DVSManagerLookupDvPortGroupResponse.soap_get(soap, "gnvim2:DVSManagerLookupDvPortGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateDVSLacpGroupConfig_USCORETask(const char *endpoint, const char *soap_action, gnvim2__UpdateDVSLacpGroupConfigRequestType *gnvim2__UpdateDVSLacpGroupConfig_USCORETask, _gnvim2__UpdateDVSLacpGroupConfig_USCORETaskResponse &gnvim2__UpdateDVSLacpGroupConfig_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateDVSLacpGroupConfig_USCORETask soap_tmp___gnvim2__UpdateDVSLacpGroupConfig_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateDVSLacpGroupConfig_USCORETask.gnvim2__UpdateDVSLacpGroupConfig_USCORETask = gnvim2__UpdateDVSLacpGroupConfig_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateDVSLacpGroupConfig_USCORETask(soap, &soap_tmp___gnvim2__UpdateDVSLacpGroupConfig_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateDVSLacpGroupConfig_USCORETask(soap, &soap_tmp___gnvim2__UpdateDVSLacpGroupConfig_USCORETask, "-gnvim2:UpdateDVSLacpGroupConfig_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateDVSLacpGroupConfig_USCORETask(soap, &soap_tmp___gnvim2__UpdateDVSLacpGroupConfig_USCORETask, "-gnvim2:UpdateDVSLacpGroupConfig_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateDVSLacpGroupConfig_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__UpdateDVSLacpGroupConfig_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateDVSLacpGroupConfig_USCORETaskResponse.soap_get(soap, "gnvim2:UpdateDVSLacpGroupConfig_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReadNextEvents(const char *endpoint, const char *soap_action, gnvim2__ReadNextEventsRequestType *gnvim2__ReadNextEvents, _gnvim2__ReadNextEventsResponse &gnvim2__ReadNextEventsResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReadNextEvents soap_tmp___gnvim2__ReadNextEvents;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReadNextEvents.gnvim2__ReadNextEvents = gnvim2__ReadNextEvents;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReadNextEvents(soap, &soap_tmp___gnvim2__ReadNextEvents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReadNextEvents(soap, &soap_tmp___gnvim2__ReadNextEvents, "-gnvim2:ReadNextEvents", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReadNextEvents(soap, &soap_tmp___gnvim2__ReadNextEvents, "-gnvim2:ReadNextEvents", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReadNextEventsResponse)
		return soap_closesock(soap);
	gnvim2__ReadNextEventsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReadNextEventsResponse.soap_get(soap, "gnvim2:ReadNextEventsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReadPreviousEvents(const char *endpoint, const char *soap_action, gnvim2__ReadPreviousEventsRequestType *gnvim2__ReadPreviousEvents, _gnvim2__ReadPreviousEventsResponse &gnvim2__ReadPreviousEventsResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReadPreviousEvents soap_tmp___gnvim2__ReadPreviousEvents;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReadPreviousEvents.gnvim2__ReadPreviousEvents = gnvim2__ReadPreviousEvents;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReadPreviousEvents(soap, &soap_tmp___gnvim2__ReadPreviousEvents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReadPreviousEvents(soap, &soap_tmp___gnvim2__ReadPreviousEvents, "-gnvim2:ReadPreviousEvents", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReadPreviousEvents(soap, &soap_tmp___gnvim2__ReadPreviousEvents, "-gnvim2:ReadPreviousEvents", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReadPreviousEventsResponse)
		return soap_closesock(soap);
	gnvim2__ReadPreviousEventsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReadPreviousEventsResponse.soap_get(soap, "gnvim2:ReadPreviousEventsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveArgumentDescription(const char *endpoint, const char *soap_action, gnvim2__RetrieveArgumentDescriptionRequestType *gnvim2__RetrieveArgumentDescription, _gnvim2__RetrieveArgumentDescriptionResponse &gnvim2__RetrieveArgumentDescriptionResponse)
{	struct soap *soap = this;
	struct __gnvim2__RetrieveArgumentDescription soap_tmp___gnvim2__RetrieveArgumentDescription;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RetrieveArgumentDescription.gnvim2__RetrieveArgumentDescription = gnvim2__RetrieveArgumentDescription;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RetrieveArgumentDescription(soap, &soap_tmp___gnvim2__RetrieveArgumentDescription);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RetrieveArgumentDescription(soap, &soap_tmp___gnvim2__RetrieveArgumentDescription, "-gnvim2:RetrieveArgumentDescription", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RetrieveArgumentDescription(soap, &soap_tmp___gnvim2__RetrieveArgumentDescription, "-gnvim2:RetrieveArgumentDescription", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RetrieveArgumentDescriptionResponse)
		return soap_closesock(soap);
	gnvim2__RetrieveArgumentDescriptionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RetrieveArgumentDescriptionResponse.soap_get(soap, "gnvim2:RetrieveArgumentDescriptionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateCollectorForEvents(const char *endpoint, const char *soap_action, gnvim2__CreateCollectorForEventsRequestType *gnvim2__CreateCollectorForEvents, _gnvim2__CreateCollectorForEventsResponse &gnvim2__CreateCollectorForEventsResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateCollectorForEvents soap_tmp___gnvim2__CreateCollectorForEvents;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateCollectorForEvents.gnvim2__CreateCollectorForEvents = gnvim2__CreateCollectorForEvents;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateCollectorForEvents(soap, &soap_tmp___gnvim2__CreateCollectorForEvents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateCollectorForEvents(soap, &soap_tmp___gnvim2__CreateCollectorForEvents, "-gnvim2:CreateCollectorForEvents", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateCollectorForEvents(soap, &soap_tmp___gnvim2__CreateCollectorForEvents, "-gnvim2:CreateCollectorForEvents", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateCollectorForEventsResponse)
		return soap_closesock(soap);
	gnvim2__CreateCollectorForEventsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateCollectorForEventsResponse.soap_get(soap, "gnvim2:CreateCollectorForEventsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::LogUserEvent(const char *endpoint, const char *soap_action, gnvim2__LogUserEventRequestType *gnvim2__LogUserEvent, _gnvim2__LogUserEventResponse &gnvim2__LogUserEventResponse)
{	struct soap *soap = this;
	struct __gnvim2__LogUserEvent soap_tmp___gnvim2__LogUserEvent;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__LogUserEvent.gnvim2__LogUserEvent = gnvim2__LogUserEvent;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__LogUserEvent(soap, &soap_tmp___gnvim2__LogUserEvent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__LogUserEvent(soap, &soap_tmp___gnvim2__LogUserEvent, "-gnvim2:LogUserEvent", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__LogUserEvent(soap, &soap_tmp___gnvim2__LogUserEvent, "-gnvim2:LogUserEvent", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__LogUserEventResponse)
		return soap_closesock(soap);
	gnvim2__LogUserEventResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__LogUserEventResponse.soap_get(soap, "gnvim2:LogUserEventResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryEvents(const char *endpoint, const char *soap_action, gnvim2__QueryEventsRequestType *gnvim2__QueryEvents, _gnvim2__QueryEventsResponse &gnvim2__QueryEventsResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryEvents soap_tmp___gnvim2__QueryEvents;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryEvents.gnvim2__QueryEvents = gnvim2__QueryEvents;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryEvents(soap, &soap_tmp___gnvim2__QueryEvents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryEvents(soap, &soap_tmp___gnvim2__QueryEvents, "-gnvim2:QueryEvents", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryEvents(soap, &soap_tmp___gnvim2__QueryEvents, "-gnvim2:QueryEvents", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryEventsResponse)
		return soap_closesock(soap);
	gnvim2__QueryEventsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryEventsResponse.soap_get(soap, "gnvim2:QueryEventsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::PostEvent(const char *endpoint, const char *soap_action, gnvim2__PostEventRequestType *gnvim2__PostEvent, _gnvim2__PostEventResponse &gnvim2__PostEventResponse)
{	struct soap *soap = this;
	struct __gnvim2__PostEvent soap_tmp___gnvim2__PostEvent;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__PostEvent.gnvim2__PostEvent = gnvim2__PostEvent;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__PostEvent(soap, &soap_tmp___gnvim2__PostEvent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__PostEvent(soap, &soap_tmp___gnvim2__PostEvent, "-gnvim2:PostEvent", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__PostEvent(soap, &soap_tmp___gnvim2__PostEvent, "-gnvim2:PostEvent", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__PostEventResponse)
		return soap_closesock(soap);
	gnvim2__PostEventResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__PostEventResponse.soap_get(soap, "gnvim2:PostEventResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::JoinDomain_USCORETask(const char *endpoint, const char *soap_action, gnvim2__JoinDomainRequestType *gnvim2__JoinDomain_USCORETask, _gnvim2__JoinDomain_USCORETaskResponse &gnvim2__JoinDomain_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__JoinDomain_USCORETask soap_tmp___gnvim2__JoinDomain_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__JoinDomain_USCORETask.gnvim2__JoinDomain_USCORETask = gnvim2__JoinDomain_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__JoinDomain_USCORETask(soap, &soap_tmp___gnvim2__JoinDomain_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__JoinDomain_USCORETask(soap, &soap_tmp___gnvim2__JoinDomain_USCORETask, "-gnvim2:JoinDomain_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__JoinDomain_USCORETask(soap, &soap_tmp___gnvim2__JoinDomain_USCORETask, "-gnvim2:JoinDomain_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__JoinDomain_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__JoinDomain_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__JoinDomain_USCORETaskResponse.soap_get(soap, "gnvim2:JoinDomain_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::JoinDomainWithCAM_USCORETask(const char *endpoint, const char *soap_action, gnvim2__JoinDomainWithCAMRequestType *gnvim2__JoinDomainWithCAM_USCORETask, _gnvim2__JoinDomainWithCAM_USCORETaskResponse &gnvim2__JoinDomainWithCAM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__JoinDomainWithCAM_USCORETask soap_tmp___gnvim2__JoinDomainWithCAM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__JoinDomainWithCAM_USCORETask.gnvim2__JoinDomainWithCAM_USCORETask = gnvim2__JoinDomainWithCAM_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__JoinDomainWithCAM_USCORETask(soap, &soap_tmp___gnvim2__JoinDomainWithCAM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__JoinDomainWithCAM_USCORETask(soap, &soap_tmp___gnvim2__JoinDomainWithCAM_USCORETask, "-gnvim2:JoinDomainWithCAM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__JoinDomainWithCAM_USCORETask(soap, &soap_tmp___gnvim2__JoinDomainWithCAM_USCORETask, "-gnvim2:JoinDomainWithCAM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__JoinDomainWithCAM_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__JoinDomainWithCAM_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__JoinDomainWithCAM_USCORETaskResponse.soap_get(soap, "gnvim2:JoinDomainWithCAM_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ImportCertificateForCAM_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ImportCertificateForCAMRequestType *gnvim2__ImportCertificateForCAM_USCORETask, _gnvim2__ImportCertificateForCAM_USCORETaskResponse &gnvim2__ImportCertificateForCAM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ImportCertificateForCAM_USCORETask soap_tmp___gnvim2__ImportCertificateForCAM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ImportCertificateForCAM_USCORETask.gnvim2__ImportCertificateForCAM_USCORETask = gnvim2__ImportCertificateForCAM_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ImportCertificateForCAM_USCORETask(soap, &soap_tmp___gnvim2__ImportCertificateForCAM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ImportCertificateForCAM_USCORETask(soap, &soap_tmp___gnvim2__ImportCertificateForCAM_USCORETask, "-gnvim2:ImportCertificateForCAM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ImportCertificateForCAM_USCORETask(soap, &soap_tmp___gnvim2__ImportCertificateForCAM_USCORETask, "-gnvim2:ImportCertificateForCAM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ImportCertificateForCAM_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ImportCertificateForCAM_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ImportCertificateForCAM_USCORETaskResponse.soap_get(soap, "gnvim2:ImportCertificateForCAM_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::LeaveCurrentDomain_USCORETask(const char *endpoint, const char *soap_action, gnvim2__LeaveCurrentDomainRequestType *gnvim2__LeaveCurrentDomain_USCORETask, _gnvim2__LeaveCurrentDomain_USCORETaskResponse &gnvim2__LeaveCurrentDomain_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__LeaveCurrentDomain_USCORETask soap_tmp___gnvim2__LeaveCurrentDomain_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__LeaveCurrentDomain_USCORETask.gnvim2__LeaveCurrentDomain_USCORETask = gnvim2__LeaveCurrentDomain_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__LeaveCurrentDomain_USCORETask(soap, &soap_tmp___gnvim2__LeaveCurrentDomain_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__LeaveCurrentDomain_USCORETask(soap, &soap_tmp___gnvim2__LeaveCurrentDomain_USCORETask, "-gnvim2:LeaveCurrentDomain_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__LeaveCurrentDomain_USCORETask(soap, &soap_tmp___gnvim2__LeaveCurrentDomain_USCORETask, "-gnvim2:LeaveCurrentDomain_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__LeaveCurrentDomain_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__LeaveCurrentDomain_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__LeaveCurrentDomain_USCORETaskResponse.soap_get(soap, "gnvim2:LeaveCurrentDomain_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EnableSmartCardAuthentication(const char *endpoint, const char *soap_action, gnvim2__EnableSmartCardAuthenticationRequestType *gnvim2__EnableSmartCardAuthentication, _gnvim2__EnableSmartCardAuthenticationResponse &gnvim2__EnableSmartCardAuthenticationResponse)
{	struct soap *soap = this;
	struct __gnvim2__EnableSmartCardAuthentication soap_tmp___gnvim2__EnableSmartCardAuthentication;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__EnableSmartCardAuthentication.gnvim2__EnableSmartCardAuthentication = gnvim2__EnableSmartCardAuthentication;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__EnableSmartCardAuthentication(soap, &soap_tmp___gnvim2__EnableSmartCardAuthentication);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__EnableSmartCardAuthentication(soap, &soap_tmp___gnvim2__EnableSmartCardAuthentication, "-gnvim2:EnableSmartCardAuthentication", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__EnableSmartCardAuthentication(soap, &soap_tmp___gnvim2__EnableSmartCardAuthentication, "-gnvim2:EnableSmartCardAuthentication", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__EnableSmartCardAuthenticationResponse)
		return soap_closesock(soap);
	gnvim2__EnableSmartCardAuthenticationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__EnableSmartCardAuthenticationResponse.soap_get(soap, "gnvim2:EnableSmartCardAuthenticationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::InstallSmartCardTrustAnchor(const char *endpoint, const char *soap_action, gnvim2__InstallSmartCardTrustAnchorRequestType *gnvim2__InstallSmartCardTrustAnchor, _gnvim2__InstallSmartCardTrustAnchorResponse &gnvim2__InstallSmartCardTrustAnchorResponse)
{	struct soap *soap = this;
	struct __gnvim2__InstallSmartCardTrustAnchor soap_tmp___gnvim2__InstallSmartCardTrustAnchor;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__InstallSmartCardTrustAnchor.gnvim2__InstallSmartCardTrustAnchor = gnvim2__InstallSmartCardTrustAnchor;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__InstallSmartCardTrustAnchor(soap, &soap_tmp___gnvim2__InstallSmartCardTrustAnchor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__InstallSmartCardTrustAnchor(soap, &soap_tmp___gnvim2__InstallSmartCardTrustAnchor, "-gnvim2:InstallSmartCardTrustAnchor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__InstallSmartCardTrustAnchor(soap, &soap_tmp___gnvim2__InstallSmartCardTrustAnchor, "-gnvim2:InstallSmartCardTrustAnchor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__InstallSmartCardTrustAnchorResponse)
		return soap_closesock(soap);
	gnvim2__InstallSmartCardTrustAnchorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__InstallSmartCardTrustAnchorResponse.soap_get(soap, "gnvim2:InstallSmartCardTrustAnchorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReplaceSmartCardTrustAnchors(const char *endpoint, const char *soap_action, gnvim2__ReplaceSmartCardTrustAnchorsRequestType *gnvim2__ReplaceSmartCardTrustAnchors, _gnvim2__ReplaceSmartCardTrustAnchorsResponse &gnvim2__ReplaceSmartCardTrustAnchorsResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReplaceSmartCardTrustAnchors soap_tmp___gnvim2__ReplaceSmartCardTrustAnchors;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReplaceSmartCardTrustAnchors.gnvim2__ReplaceSmartCardTrustAnchors = gnvim2__ReplaceSmartCardTrustAnchors;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReplaceSmartCardTrustAnchors(soap, &soap_tmp___gnvim2__ReplaceSmartCardTrustAnchors);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReplaceSmartCardTrustAnchors(soap, &soap_tmp___gnvim2__ReplaceSmartCardTrustAnchors, "-gnvim2:ReplaceSmartCardTrustAnchors", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReplaceSmartCardTrustAnchors(soap, &soap_tmp___gnvim2__ReplaceSmartCardTrustAnchors, "-gnvim2:ReplaceSmartCardTrustAnchors", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReplaceSmartCardTrustAnchorsResponse)
		return soap_closesock(soap);
	gnvim2__ReplaceSmartCardTrustAnchorsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReplaceSmartCardTrustAnchorsResponse.soap_get(soap, "gnvim2:ReplaceSmartCardTrustAnchorsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveSmartCardTrustAnchor(const char *endpoint, const char *soap_action, gnvim2__RemoveSmartCardTrustAnchorRequestType *gnvim2__RemoveSmartCardTrustAnchor, _gnvim2__RemoveSmartCardTrustAnchorResponse &gnvim2__RemoveSmartCardTrustAnchorResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveSmartCardTrustAnchor soap_tmp___gnvim2__RemoveSmartCardTrustAnchor;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveSmartCardTrustAnchor.gnvim2__RemoveSmartCardTrustAnchor = gnvim2__RemoveSmartCardTrustAnchor;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveSmartCardTrustAnchor(soap, &soap_tmp___gnvim2__RemoveSmartCardTrustAnchor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveSmartCardTrustAnchor(soap, &soap_tmp___gnvim2__RemoveSmartCardTrustAnchor, "-gnvim2:RemoveSmartCardTrustAnchor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveSmartCardTrustAnchor(soap, &soap_tmp___gnvim2__RemoveSmartCardTrustAnchor, "-gnvim2:RemoveSmartCardTrustAnchor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveSmartCardTrustAnchorResponse)
		return soap_closesock(soap);
	gnvim2__RemoveSmartCardTrustAnchorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveSmartCardTrustAnchorResponse.soap_get(soap, "gnvim2:RemoveSmartCardTrustAnchorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveSmartCardTrustAnchorByFingerprint(const char *endpoint, const char *soap_action, gnvim2__RemoveSmartCardTrustAnchorByFingerprintRequestType *gnvim2__RemoveSmartCardTrustAnchorByFingerprint, _gnvim2__RemoveSmartCardTrustAnchorByFingerprintResponse &gnvim2__RemoveSmartCardTrustAnchorByFingerprintResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveSmartCardTrustAnchorByFingerprint soap_tmp___gnvim2__RemoveSmartCardTrustAnchorByFingerprint;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveSmartCardTrustAnchorByFingerprint.gnvim2__RemoveSmartCardTrustAnchorByFingerprint = gnvim2__RemoveSmartCardTrustAnchorByFingerprint;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveSmartCardTrustAnchorByFingerprint(soap, &soap_tmp___gnvim2__RemoveSmartCardTrustAnchorByFingerprint);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveSmartCardTrustAnchorByFingerprint(soap, &soap_tmp___gnvim2__RemoveSmartCardTrustAnchorByFingerprint, "-gnvim2:RemoveSmartCardTrustAnchorByFingerprint", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveSmartCardTrustAnchorByFingerprint(soap, &soap_tmp___gnvim2__RemoveSmartCardTrustAnchorByFingerprint, "-gnvim2:RemoveSmartCardTrustAnchorByFingerprint", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveSmartCardTrustAnchorByFingerprintResponse)
		return soap_closesock(soap);
	gnvim2__RemoveSmartCardTrustAnchorByFingerprintResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveSmartCardTrustAnchorByFingerprintResponse.soap_get(soap, "gnvim2:RemoveSmartCardTrustAnchorByFingerprintResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ListSmartCardTrustAnchors(const char *endpoint, const char *soap_action, gnvim2__ListSmartCardTrustAnchorsRequestType *gnvim2__ListSmartCardTrustAnchors, _gnvim2__ListSmartCardTrustAnchorsResponse &gnvim2__ListSmartCardTrustAnchorsResponse)
{	struct soap *soap = this;
	struct __gnvim2__ListSmartCardTrustAnchors soap_tmp___gnvim2__ListSmartCardTrustAnchors;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ListSmartCardTrustAnchors.gnvim2__ListSmartCardTrustAnchors = gnvim2__ListSmartCardTrustAnchors;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ListSmartCardTrustAnchors(soap, &soap_tmp___gnvim2__ListSmartCardTrustAnchors);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ListSmartCardTrustAnchors(soap, &soap_tmp___gnvim2__ListSmartCardTrustAnchors, "-gnvim2:ListSmartCardTrustAnchors", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ListSmartCardTrustAnchors(soap, &soap_tmp___gnvim2__ListSmartCardTrustAnchors, "-gnvim2:ListSmartCardTrustAnchors", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ListSmartCardTrustAnchorsResponse)
		return soap_closesock(soap);
	gnvim2__ListSmartCardTrustAnchorsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ListSmartCardTrustAnchorsResponse.soap_get(soap, "gnvim2:ListSmartCardTrustAnchorsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DisableSmartCardAuthentication(const char *endpoint, const char *soap_action, gnvim2__DisableSmartCardAuthenticationRequestType *gnvim2__DisableSmartCardAuthentication, _gnvim2__DisableSmartCardAuthenticationResponse &gnvim2__DisableSmartCardAuthenticationResponse)
{	struct soap *soap = this;
	struct __gnvim2__DisableSmartCardAuthentication soap_tmp___gnvim2__DisableSmartCardAuthentication;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DisableSmartCardAuthentication.gnvim2__DisableSmartCardAuthentication = gnvim2__DisableSmartCardAuthentication;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DisableSmartCardAuthentication(soap, &soap_tmp___gnvim2__DisableSmartCardAuthentication);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DisableSmartCardAuthentication(soap, &soap_tmp___gnvim2__DisableSmartCardAuthentication, "-gnvim2:DisableSmartCardAuthentication", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DisableSmartCardAuthentication(soap, &soap_tmp___gnvim2__DisableSmartCardAuthentication, "-gnvim2:DisableSmartCardAuthentication", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DisableSmartCardAuthenticationResponse)
		return soap_closesock(soap);
	gnvim2__DisableSmartCardAuthenticationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DisableSmartCardAuthenticationResponse.soap_get(soap, "gnvim2:DisableSmartCardAuthenticationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureAutostart(const char *endpoint, const char *soap_action, gnvim2__ReconfigureAutostartRequestType *gnvim2__ReconfigureAutostart, _gnvim2__ReconfigureAutostartResponse &gnvim2__ReconfigureAutostartResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReconfigureAutostart soap_tmp___gnvim2__ReconfigureAutostart;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReconfigureAutostart.gnvim2__ReconfigureAutostart = gnvim2__ReconfigureAutostart;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReconfigureAutostart(soap, &soap_tmp___gnvim2__ReconfigureAutostart);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReconfigureAutostart(soap, &soap_tmp___gnvim2__ReconfigureAutostart, "-gnvim2:ReconfigureAutostart", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReconfigureAutostart(soap, &soap_tmp___gnvim2__ReconfigureAutostart, "-gnvim2:ReconfigureAutostart", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReconfigureAutostartResponse)
		return soap_closesock(soap);
	gnvim2__ReconfigureAutostartResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReconfigureAutostartResponse.soap_get(soap, "gnvim2:ReconfigureAutostartResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AutoStartPowerOn(const char *endpoint, const char *soap_action, gnvim2__AutoStartPowerOnRequestType *gnvim2__AutoStartPowerOn, _gnvim2__AutoStartPowerOnResponse &gnvim2__AutoStartPowerOnResponse)
{	struct soap *soap = this;
	struct __gnvim2__AutoStartPowerOn soap_tmp___gnvim2__AutoStartPowerOn;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AutoStartPowerOn.gnvim2__AutoStartPowerOn = gnvim2__AutoStartPowerOn;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AutoStartPowerOn(soap, &soap_tmp___gnvim2__AutoStartPowerOn);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AutoStartPowerOn(soap, &soap_tmp___gnvim2__AutoStartPowerOn, "-gnvim2:AutoStartPowerOn", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AutoStartPowerOn(soap, &soap_tmp___gnvim2__AutoStartPowerOn, "-gnvim2:AutoStartPowerOn", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AutoStartPowerOnResponse)
		return soap_closesock(soap);
	gnvim2__AutoStartPowerOnResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AutoStartPowerOnResponse.soap_get(soap, "gnvim2:AutoStartPowerOnResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AutoStartPowerOff(const char *endpoint, const char *soap_action, gnvim2__AutoStartPowerOffRequestType *gnvim2__AutoStartPowerOff, _gnvim2__AutoStartPowerOffResponse &gnvim2__AutoStartPowerOffResponse)
{	struct soap *soap = this;
	struct __gnvim2__AutoStartPowerOff soap_tmp___gnvim2__AutoStartPowerOff;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AutoStartPowerOff.gnvim2__AutoStartPowerOff = gnvim2__AutoStartPowerOff;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AutoStartPowerOff(soap, &soap_tmp___gnvim2__AutoStartPowerOff);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AutoStartPowerOff(soap, &soap_tmp___gnvim2__AutoStartPowerOff, "-gnvim2:AutoStartPowerOff", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AutoStartPowerOff(soap, &soap_tmp___gnvim2__AutoStartPowerOff, "-gnvim2:AutoStartPowerOff", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AutoStartPowerOffResponse)
		return soap_closesock(soap);
	gnvim2__AutoStartPowerOffResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AutoStartPowerOffResponse.soap_get(soap, "gnvim2:AutoStartPowerOffResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryBootDevices(const char *endpoint, const char *soap_action, gnvim2__QueryBootDevicesRequestType *gnvim2__QueryBootDevices, _gnvim2__QueryBootDevicesResponse &gnvim2__QueryBootDevicesResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryBootDevices soap_tmp___gnvim2__QueryBootDevices;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryBootDevices.gnvim2__QueryBootDevices = gnvim2__QueryBootDevices;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryBootDevices(soap, &soap_tmp___gnvim2__QueryBootDevices);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryBootDevices(soap, &soap_tmp___gnvim2__QueryBootDevices, "-gnvim2:QueryBootDevices", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryBootDevices(soap, &soap_tmp___gnvim2__QueryBootDevices, "-gnvim2:QueryBootDevices", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryBootDevicesResponse)
		return soap_closesock(soap);
	gnvim2__QueryBootDevicesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryBootDevicesResponse.soap_get(soap, "gnvim2:QueryBootDevicesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateBootDevice(const char *endpoint, const char *soap_action, gnvim2__UpdateBootDeviceRequestType *gnvim2__UpdateBootDevice, _gnvim2__UpdateBootDeviceResponse &gnvim2__UpdateBootDeviceResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateBootDevice soap_tmp___gnvim2__UpdateBootDevice;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateBootDevice.gnvim2__UpdateBootDevice = gnvim2__UpdateBootDevice;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateBootDevice(soap, &soap_tmp___gnvim2__UpdateBootDevice);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateBootDevice(soap, &soap_tmp___gnvim2__UpdateBootDevice, "-gnvim2:UpdateBootDevice", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateBootDevice(soap, &soap_tmp___gnvim2__UpdateBootDevice, "-gnvim2:UpdateBootDevice", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateBootDeviceResponse)
		return soap_closesock(soap);
	gnvim2__UpdateBootDeviceResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateBootDeviceResponse.soap_get(soap, "gnvim2:UpdateBootDeviceResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ConfigureHostCache_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ConfigureHostCacheRequestType *gnvim2__ConfigureHostCache_USCORETask, _gnvim2__ConfigureHostCache_USCORETaskResponse &gnvim2__ConfigureHostCache_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ConfigureHostCache_USCORETask soap_tmp___gnvim2__ConfigureHostCache_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ConfigureHostCache_USCORETask.gnvim2__ConfigureHostCache_USCORETask = gnvim2__ConfigureHostCache_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ConfigureHostCache_USCORETask(soap, &soap_tmp___gnvim2__ConfigureHostCache_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ConfigureHostCache_USCORETask(soap, &soap_tmp___gnvim2__ConfigureHostCache_USCORETask, "-gnvim2:ConfigureHostCache_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ConfigureHostCache_USCORETask(soap, &soap_tmp___gnvim2__ConfigureHostCache_USCORETask, "-gnvim2:ConfigureHostCache_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ConfigureHostCache_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ConfigureHostCache_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ConfigureHostCache_USCORETaskResponse.soap_get(soap, "gnvim2:ConfigureHostCache_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::GenerateCertificateSigningRequest(const char *endpoint, const char *soap_action, gnvim2__GenerateCertificateSigningRequestRequestType *gnvim2__GenerateCertificateSigningRequest, _gnvim2__GenerateCertificateSigningRequestResponse &gnvim2__GenerateCertificateSigningRequestResponse)
{	struct soap *soap = this;
	struct __gnvim2__GenerateCertificateSigningRequest soap_tmp___gnvim2__GenerateCertificateSigningRequest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__GenerateCertificateSigningRequest.gnvim2__GenerateCertificateSigningRequest = gnvim2__GenerateCertificateSigningRequest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__GenerateCertificateSigningRequest(soap, &soap_tmp___gnvim2__GenerateCertificateSigningRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__GenerateCertificateSigningRequest(soap, &soap_tmp___gnvim2__GenerateCertificateSigningRequest, "-gnvim2:GenerateCertificateSigningRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__GenerateCertificateSigningRequest(soap, &soap_tmp___gnvim2__GenerateCertificateSigningRequest, "-gnvim2:GenerateCertificateSigningRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__GenerateCertificateSigningRequestResponse)
		return soap_closesock(soap);
	gnvim2__GenerateCertificateSigningRequestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__GenerateCertificateSigningRequestResponse.soap_get(soap, "gnvim2:GenerateCertificateSigningRequestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::GenerateCertificateSigningRequestByDn(const char *endpoint, const char *soap_action, gnvim2__GenerateCertificateSigningRequestByDnRequestType *gnvim2__GenerateCertificateSigningRequestByDn, _gnvim2__GenerateCertificateSigningRequestByDnResponse &gnvim2__GenerateCertificateSigningRequestByDnResponse)
{	struct soap *soap = this;
	struct __gnvim2__GenerateCertificateSigningRequestByDn soap_tmp___gnvim2__GenerateCertificateSigningRequestByDn;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__GenerateCertificateSigningRequestByDn.gnvim2__GenerateCertificateSigningRequestByDn = gnvim2__GenerateCertificateSigningRequestByDn;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__GenerateCertificateSigningRequestByDn(soap, &soap_tmp___gnvim2__GenerateCertificateSigningRequestByDn);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__GenerateCertificateSigningRequestByDn(soap, &soap_tmp___gnvim2__GenerateCertificateSigningRequestByDn, "-gnvim2:GenerateCertificateSigningRequestByDn", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__GenerateCertificateSigningRequestByDn(soap, &soap_tmp___gnvim2__GenerateCertificateSigningRequestByDn, "-gnvim2:GenerateCertificateSigningRequestByDn", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__GenerateCertificateSigningRequestByDnResponse)
		return soap_closesock(soap);
	gnvim2__GenerateCertificateSigningRequestByDnResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__GenerateCertificateSigningRequestByDnResponse.soap_get(soap, "gnvim2:GenerateCertificateSigningRequestByDnResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::InstallServerCertificate(const char *endpoint, const char *soap_action, gnvim2__InstallServerCertificateRequestType *gnvim2__InstallServerCertificate, _gnvim2__InstallServerCertificateResponse &gnvim2__InstallServerCertificateResponse)
{	struct soap *soap = this;
	struct __gnvim2__InstallServerCertificate soap_tmp___gnvim2__InstallServerCertificate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__InstallServerCertificate.gnvim2__InstallServerCertificate = gnvim2__InstallServerCertificate;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__InstallServerCertificate(soap, &soap_tmp___gnvim2__InstallServerCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__InstallServerCertificate(soap, &soap_tmp___gnvim2__InstallServerCertificate, "-gnvim2:InstallServerCertificate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__InstallServerCertificate(soap, &soap_tmp___gnvim2__InstallServerCertificate, "-gnvim2:InstallServerCertificate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__InstallServerCertificateResponse)
		return soap_closesock(soap);
	gnvim2__InstallServerCertificateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__InstallServerCertificateResponse.soap_get(soap, "gnvim2:InstallServerCertificateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReplaceCACertificatesAndCRLs(const char *endpoint, const char *soap_action, gnvim2__ReplaceCACertificatesAndCRLsRequestType *gnvim2__ReplaceCACertificatesAndCRLs, _gnvim2__ReplaceCACertificatesAndCRLsResponse &gnvim2__ReplaceCACertificatesAndCRLsResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReplaceCACertificatesAndCRLs soap_tmp___gnvim2__ReplaceCACertificatesAndCRLs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReplaceCACertificatesAndCRLs.gnvim2__ReplaceCACertificatesAndCRLs = gnvim2__ReplaceCACertificatesAndCRLs;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReplaceCACertificatesAndCRLs(soap, &soap_tmp___gnvim2__ReplaceCACertificatesAndCRLs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReplaceCACertificatesAndCRLs(soap, &soap_tmp___gnvim2__ReplaceCACertificatesAndCRLs, "-gnvim2:ReplaceCACertificatesAndCRLs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReplaceCACertificatesAndCRLs(soap, &soap_tmp___gnvim2__ReplaceCACertificatesAndCRLs, "-gnvim2:ReplaceCACertificatesAndCRLs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReplaceCACertificatesAndCRLsResponse)
		return soap_closesock(soap);
	gnvim2__ReplaceCACertificatesAndCRLsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReplaceCACertificatesAndCRLsResponse.soap_get(soap, "gnvim2:ReplaceCACertificatesAndCRLsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ListCACertificates(const char *endpoint, const char *soap_action, gnvim2__ListCACertificatesRequestType *gnvim2__ListCACertificates, _gnvim2__ListCACertificatesResponse &gnvim2__ListCACertificatesResponse)
{	struct soap *soap = this;
	struct __gnvim2__ListCACertificates soap_tmp___gnvim2__ListCACertificates;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ListCACertificates.gnvim2__ListCACertificates = gnvim2__ListCACertificates;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ListCACertificates(soap, &soap_tmp___gnvim2__ListCACertificates);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ListCACertificates(soap, &soap_tmp___gnvim2__ListCACertificates, "-gnvim2:ListCACertificates", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ListCACertificates(soap, &soap_tmp___gnvim2__ListCACertificates, "-gnvim2:ListCACertificates", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ListCACertificatesResponse)
		return soap_closesock(soap);
	gnvim2__ListCACertificatesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ListCACertificatesResponse.soap_get(soap, "gnvim2:ListCACertificatesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ListCACertificateRevocationLists(const char *endpoint, const char *soap_action, gnvim2__ListCACertificateRevocationListsRequestType *gnvim2__ListCACertificateRevocationLists, _gnvim2__ListCACertificateRevocationListsResponse &gnvim2__ListCACertificateRevocationListsResponse)
{	struct soap *soap = this;
	struct __gnvim2__ListCACertificateRevocationLists soap_tmp___gnvim2__ListCACertificateRevocationLists;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ListCACertificateRevocationLists.gnvim2__ListCACertificateRevocationLists = gnvim2__ListCACertificateRevocationLists;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ListCACertificateRevocationLists(soap, &soap_tmp___gnvim2__ListCACertificateRevocationLists);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ListCACertificateRevocationLists(soap, &soap_tmp___gnvim2__ListCACertificateRevocationLists, "-gnvim2:ListCACertificateRevocationLists", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ListCACertificateRevocationLists(soap, &soap_tmp___gnvim2__ListCACertificateRevocationLists, "-gnvim2:ListCACertificateRevocationLists", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ListCACertificateRevocationListsResponse)
		return soap_closesock(soap);
	gnvim2__ListCACertificateRevocationListsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ListCACertificateRevocationListsResponse.soap_get(soap, "gnvim2:ListCACertificateRevocationListsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EnableHyperThreading(const char *endpoint, const char *soap_action, gnvim2__EnableHyperThreadingRequestType *gnvim2__EnableHyperThreading, _gnvim2__EnableHyperThreadingResponse &gnvim2__EnableHyperThreadingResponse)
{	struct soap *soap = this;
	struct __gnvim2__EnableHyperThreading soap_tmp___gnvim2__EnableHyperThreading;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__EnableHyperThreading.gnvim2__EnableHyperThreading = gnvim2__EnableHyperThreading;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__EnableHyperThreading(soap, &soap_tmp___gnvim2__EnableHyperThreading);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__EnableHyperThreading(soap, &soap_tmp___gnvim2__EnableHyperThreading, "-gnvim2:EnableHyperThreading", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__EnableHyperThreading(soap, &soap_tmp___gnvim2__EnableHyperThreading, "-gnvim2:EnableHyperThreading", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__EnableHyperThreadingResponse)
		return soap_closesock(soap);
	gnvim2__EnableHyperThreadingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__EnableHyperThreadingResponse.soap_get(soap, "gnvim2:EnableHyperThreadingResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DisableHyperThreading(const char *endpoint, const char *soap_action, gnvim2__DisableHyperThreadingRequestType *gnvim2__DisableHyperThreading, _gnvim2__DisableHyperThreadingResponse &gnvim2__DisableHyperThreadingResponse)
{	struct soap *soap = this;
	struct __gnvim2__DisableHyperThreading soap_tmp___gnvim2__DisableHyperThreading;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DisableHyperThreading.gnvim2__DisableHyperThreading = gnvim2__DisableHyperThreading;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DisableHyperThreading(soap, &soap_tmp___gnvim2__DisableHyperThreading);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DisableHyperThreading(soap, &soap_tmp___gnvim2__DisableHyperThreading, "-gnvim2:DisableHyperThreading", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DisableHyperThreading(soap, &soap_tmp___gnvim2__DisableHyperThreading, "-gnvim2:DisableHyperThreading", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DisableHyperThreadingResponse)
		return soap_closesock(soap);
	gnvim2__DisableHyperThreadingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DisableHyperThreadingResponse.soap_get(soap, "gnvim2:DisableHyperThreadingResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SearchDatastore_USCORETask(const char *endpoint, const char *soap_action, gnvim2__SearchDatastoreRequestType *gnvim2__SearchDatastore_USCORETask, _gnvim2__SearchDatastore_USCORETaskResponse &gnvim2__SearchDatastore_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__SearchDatastore_USCORETask soap_tmp___gnvim2__SearchDatastore_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SearchDatastore_USCORETask.gnvim2__SearchDatastore_USCORETask = gnvim2__SearchDatastore_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SearchDatastore_USCORETask(soap, &soap_tmp___gnvim2__SearchDatastore_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SearchDatastore_USCORETask(soap, &soap_tmp___gnvim2__SearchDatastore_USCORETask, "-gnvim2:SearchDatastore_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SearchDatastore_USCORETask(soap, &soap_tmp___gnvim2__SearchDatastore_USCORETask, "-gnvim2:SearchDatastore_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SearchDatastore_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__SearchDatastore_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SearchDatastore_USCORETaskResponse.soap_get(soap, "gnvim2:SearchDatastore_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SearchDatastoreSubFolders_USCORETask(const char *endpoint, const char *soap_action, gnvim2__SearchDatastoreSubFoldersRequestType *gnvim2__SearchDatastoreSubFolders_USCORETask, _gnvim2__SearchDatastoreSubFolders_USCORETaskResponse &gnvim2__SearchDatastoreSubFolders_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__SearchDatastoreSubFolders_USCORETask soap_tmp___gnvim2__SearchDatastoreSubFolders_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SearchDatastoreSubFolders_USCORETask.gnvim2__SearchDatastoreSubFolders_USCORETask = gnvim2__SearchDatastoreSubFolders_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SearchDatastoreSubFolders_USCORETask(soap, &soap_tmp___gnvim2__SearchDatastoreSubFolders_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SearchDatastoreSubFolders_USCORETask(soap, &soap_tmp___gnvim2__SearchDatastoreSubFolders_USCORETask, "-gnvim2:SearchDatastoreSubFolders_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SearchDatastoreSubFolders_USCORETask(soap, &soap_tmp___gnvim2__SearchDatastoreSubFolders_USCORETask, "-gnvim2:SearchDatastoreSubFolders_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SearchDatastoreSubFolders_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__SearchDatastoreSubFolders_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SearchDatastoreSubFolders_USCORETaskResponse.soap_get(soap, "gnvim2:SearchDatastoreSubFolders_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeleteFile(const char *endpoint, const char *soap_action, gnvim2__DeleteFileRequestType *gnvim2__DeleteFile, _gnvim2__DeleteFileResponse &gnvim2__DeleteFileResponse)
{	struct soap *soap = this;
	struct __gnvim2__DeleteFile soap_tmp___gnvim2__DeleteFile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DeleteFile.gnvim2__DeleteFile = gnvim2__DeleteFile;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DeleteFile(soap, &soap_tmp___gnvim2__DeleteFile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DeleteFile(soap, &soap_tmp___gnvim2__DeleteFile, "-gnvim2:DeleteFile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DeleteFile(soap, &soap_tmp___gnvim2__DeleteFile, "-gnvim2:DeleteFile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DeleteFileResponse)
		return soap_closesock(soap);
	gnvim2__DeleteFileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DeleteFileResponse.soap_get(soap, "gnvim2:DeleteFileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateLocalSwapDatastore(const char *endpoint, const char *soap_action, gnvim2__UpdateLocalSwapDatastoreRequestType *gnvim2__UpdateLocalSwapDatastore, _gnvim2__UpdateLocalSwapDatastoreResponse &gnvim2__UpdateLocalSwapDatastoreResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateLocalSwapDatastore soap_tmp___gnvim2__UpdateLocalSwapDatastore;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateLocalSwapDatastore.gnvim2__UpdateLocalSwapDatastore = gnvim2__UpdateLocalSwapDatastore;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateLocalSwapDatastore(soap, &soap_tmp___gnvim2__UpdateLocalSwapDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateLocalSwapDatastore(soap, &soap_tmp___gnvim2__UpdateLocalSwapDatastore, "-gnvim2:UpdateLocalSwapDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateLocalSwapDatastore(soap, &soap_tmp___gnvim2__UpdateLocalSwapDatastore, "-gnvim2:UpdateLocalSwapDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateLocalSwapDatastoreResponse)
		return soap_closesock(soap);
	gnvim2__UpdateLocalSwapDatastoreResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateLocalSwapDatastoreResponse.soap_get(soap, "gnvim2:UpdateLocalSwapDatastoreResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryAvailableDisksForVmfs(const char *endpoint, const char *soap_action, gnvim2__QueryAvailableDisksForVmfsRequestType *gnvim2__QueryAvailableDisksForVmfs, _gnvim2__QueryAvailableDisksForVmfsResponse &gnvim2__QueryAvailableDisksForVmfsResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryAvailableDisksForVmfs soap_tmp___gnvim2__QueryAvailableDisksForVmfs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryAvailableDisksForVmfs.gnvim2__QueryAvailableDisksForVmfs = gnvim2__QueryAvailableDisksForVmfs;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryAvailableDisksForVmfs(soap, &soap_tmp___gnvim2__QueryAvailableDisksForVmfs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryAvailableDisksForVmfs(soap, &soap_tmp___gnvim2__QueryAvailableDisksForVmfs, "-gnvim2:QueryAvailableDisksForVmfs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryAvailableDisksForVmfs(soap, &soap_tmp___gnvim2__QueryAvailableDisksForVmfs, "-gnvim2:QueryAvailableDisksForVmfs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryAvailableDisksForVmfsResponse)
		return soap_closesock(soap);
	gnvim2__QueryAvailableDisksForVmfsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryAvailableDisksForVmfsResponse.soap_get(soap, "gnvim2:QueryAvailableDisksForVmfsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryVmfsDatastoreCreateOptions(const char *endpoint, const char *soap_action, gnvim2__QueryVmfsDatastoreCreateOptionsRequestType *gnvim2__QueryVmfsDatastoreCreateOptions, _gnvim2__QueryVmfsDatastoreCreateOptionsResponse &gnvim2__QueryVmfsDatastoreCreateOptionsResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryVmfsDatastoreCreateOptions soap_tmp___gnvim2__QueryVmfsDatastoreCreateOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryVmfsDatastoreCreateOptions.gnvim2__QueryVmfsDatastoreCreateOptions = gnvim2__QueryVmfsDatastoreCreateOptions;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryVmfsDatastoreCreateOptions(soap, &soap_tmp___gnvim2__QueryVmfsDatastoreCreateOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryVmfsDatastoreCreateOptions(soap, &soap_tmp___gnvim2__QueryVmfsDatastoreCreateOptions, "-gnvim2:QueryVmfsDatastoreCreateOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryVmfsDatastoreCreateOptions(soap, &soap_tmp___gnvim2__QueryVmfsDatastoreCreateOptions, "-gnvim2:QueryVmfsDatastoreCreateOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryVmfsDatastoreCreateOptionsResponse)
		return soap_closesock(soap);
	gnvim2__QueryVmfsDatastoreCreateOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryVmfsDatastoreCreateOptionsResponse.soap_get(soap, "gnvim2:QueryVmfsDatastoreCreateOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateVmfsDatastore(const char *endpoint, const char *soap_action, gnvim2__CreateVmfsDatastoreRequestType *gnvim2__CreateVmfsDatastore, _gnvim2__CreateVmfsDatastoreResponse &gnvim2__CreateVmfsDatastoreResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateVmfsDatastore soap_tmp___gnvim2__CreateVmfsDatastore;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateVmfsDatastore.gnvim2__CreateVmfsDatastore = gnvim2__CreateVmfsDatastore;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateVmfsDatastore(soap, &soap_tmp___gnvim2__CreateVmfsDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateVmfsDatastore(soap, &soap_tmp___gnvim2__CreateVmfsDatastore, "-gnvim2:CreateVmfsDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateVmfsDatastore(soap, &soap_tmp___gnvim2__CreateVmfsDatastore, "-gnvim2:CreateVmfsDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateVmfsDatastoreResponse)
		return soap_closesock(soap);
	gnvim2__CreateVmfsDatastoreResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateVmfsDatastoreResponse.soap_get(soap, "gnvim2:CreateVmfsDatastoreResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryVmfsDatastoreExtendOptions(const char *endpoint, const char *soap_action, gnvim2__QueryVmfsDatastoreExtendOptionsRequestType *gnvim2__QueryVmfsDatastoreExtendOptions, _gnvim2__QueryVmfsDatastoreExtendOptionsResponse &gnvim2__QueryVmfsDatastoreExtendOptionsResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryVmfsDatastoreExtendOptions soap_tmp___gnvim2__QueryVmfsDatastoreExtendOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryVmfsDatastoreExtendOptions.gnvim2__QueryVmfsDatastoreExtendOptions = gnvim2__QueryVmfsDatastoreExtendOptions;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryVmfsDatastoreExtendOptions(soap, &soap_tmp___gnvim2__QueryVmfsDatastoreExtendOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryVmfsDatastoreExtendOptions(soap, &soap_tmp___gnvim2__QueryVmfsDatastoreExtendOptions, "-gnvim2:QueryVmfsDatastoreExtendOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryVmfsDatastoreExtendOptions(soap, &soap_tmp___gnvim2__QueryVmfsDatastoreExtendOptions, "-gnvim2:QueryVmfsDatastoreExtendOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryVmfsDatastoreExtendOptionsResponse)
		return soap_closesock(soap);
	gnvim2__QueryVmfsDatastoreExtendOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryVmfsDatastoreExtendOptionsResponse.soap_get(soap, "gnvim2:QueryVmfsDatastoreExtendOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryVmfsDatastoreExpandOptions(const char *endpoint, const char *soap_action, gnvim2__QueryVmfsDatastoreExpandOptionsRequestType *gnvim2__QueryVmfsDatastoreExpandOptions, _gnvim2__QueryVmfsDatastoreExpandOptionsResponse &gnvim2__QueryVmfsDatastoreExpandOptionsResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryVmfsDatastoreExpandOptions soap_tmp___gnvim2__QueryVmfsDatastoreExpandOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryVmfsDatastoreExpandOptions.gnvim2__QueryVmfsDatastoreExpandOptions = gnvim2__QueryVmfsDatastoreExpandOptions;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryVmfsDatastoreExpandOptions(soap, &soap_tmp___gnvim2__QueryVmfsDatastoreExpandOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryVmfsDatastoreExpandOptions(soap, &soap_tmp___gnvim2__QueryVmfsDatastoreExpandOptions, "-gnvim2:QueryVmfsDatastoreExpandOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryVmfsDatastoreExpandOptions(soap, &soap_tmp___gnvim2__QueryVmfsDatastoreExpandOptions, "-gnvim2:QueryVmfsDatastoreExpandOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryVmfsDatastoreExpandOptionsResponse)
		return soap_closesock(soap);
	gnvim2__QueryVmfsDatastoreExpandOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryVmfsDatastoreExpandOptionsResponse.soap_get(soap, "gnvim2:QueryVmfsDatastoreExpandOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExtendVmfsDatastore(const char *endpoint, const char *soap_action, gnvim2__ExtendVmfsDatastoreRequestType *gnvim2__ExtendVmfsDatastore, _gnvim2__ExtendVmfsDatastoreResponse &gnvim2__ExtendVmfsDatastoreResponse)
{	struct soap *soap = this;
	struct __gnvim2__ExtendVmfsDatastore soap_tmp___gnvim2__ExtendVmfsDatastore;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ExtendVmfsDatastore.gnvim2__ExtendVmfsDatastore = gnvim2__ExtendVmfsDatastore;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ExtendVmfsDatastore(soap, &soap_tmp___gnvim2__ExtendVmfsDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ExtendVmfsDatastore(soap, &soap_tmp___gnvim2__ExtendVmfsDatastore, "-gnvim2:ExtendVmfsDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ExtendVmfsDatastore(soap, &soap_tmp___gnvim2__ExtendVmfsDatastore, "-gnvim2:ExtendVmfsDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ExtendVmfsDatastoreResponse)
		return soap_closesock(soap);
	gnvim2__ExtendVmfsDatastoreResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ExtendVmfsDatastoreResponse.soap_get(soap, "gnvim2:ExtendVmfsDatastoreResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExpandVmfsDatastore(const char *endpoint, const char *soap_action, gnvim2__ExpandVmfsDatastoreRequestType *gnvim2__ExpandVmfsDatastore, _gnvim2__ExpandVmfsDatastoreResponse &gnvim2__ExpandVmfsDatastoreResponse)
{	struct soap *soap = this;
	struct __gnvim2__ExpandVmfsDatastore soap_tmp___gnvim2__ExpandVmfsDatastore;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ExpandVmfsDatastore.gnvim2__ExpandVmfsDatastore = gnvim2__ExpandVmfsDatastore;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ExpandVmfsDatastore(soap, &soap_tmp___gnvim2__ExpandVmfsDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ExpandVmfsDatastore(soap, &soap_tmp___gnvim2__ExpandVmfsDatastore, "-gnvim2:ExpandVmfsDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ExpandVmfsDatastore(soap, &soap_tmp___gnvim2__ExpandVmfsDatastore, "-gnvim2:ExpandVmfsDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ExpandVmfsDatastoreResponse)
		return soap_closesock(soap);
	gnvim2__ExpandVmfsDatastoreResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ExpandVmfsDatastoreResponse.soap_get(soap, "gnvim2:ExpandVmfsDatastoreResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateNasDatastore(const char *endpoint, const char *soap_action, gnvim2__CreateNasDatastoreRequestType *gnvim2__CreateNasDatastore, _gnvim2__CreateNasDatastoreResponse &gnvim2__CreateNasDatastoreResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateNasDatastore soap_tmp___gnvim2__CreateNasDatastore;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateNasDatastore.gnvim2__CreateNasDatastore = gnvim2__CreateNasDatastore;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateNasDatastore(soap, &soap_tmp___gnvim2__CreateNasDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateNasDatastore(soap, &soap_tmp___gnvim2__CreateNasDatastore, "-gnvim2:CreateNasDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateNasDatastore(soap, &soap_tmp___gnvim2__CreateNasDatastore, "-gnvim2:CreateNasDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateNasDatastoreResponse)
		return soap_closesock(soap);
	gnvim2__CreateNasDatastoreResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateNasDatastoreResponse.soap_get(soap, "gnvim2:CreateNasDatastoreResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateLocalDatastore(const char *endpoint, const char *soap_action, gnvim2__CreateLocalDatastoreRequestType *gnvim2__CreateLocalDatastore, _gnvim2__CreateLocalDatastoreResponse &gnvim2__CreateLocalDatastoreResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateLocalDatastore soap_tmp___gnvim2__CreateLocalDatastore;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateLocalDatastore.gnvim2__CreateLocalDatastore = gnvim2__CreateLocalDatastore;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateLocalDatastore(soap, &soap_tmp___gnvim2__CreateLocalDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateLocalDatastore(soap, &soap_tmp___gnvim2__CreateLocalDatastore, "-gnvim2:CreateLocalDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateLocalDatastore(soap, &soap_tmp___gnvim2__CreateLocalDatastore, "-gnvim2:CreateLocalDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateLocalDatastoreResponse)
		return soap_closesock(soap);
	gnvim2__CreateLocalDatastoreResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateLocalDatastoreResponse.soap_get(soap, "gnvim2:CreateLocalDatastoreResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateVvolDatastore(const char *endpoint, const char *soap_action, gnvim2__CreateVvolDatastoreRequestType *gnvim2__CreateVvolDatastore, _gnvim2__CreateVvolDatastoreResponse &gnvim2__CreateVvolDatastoreResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateVvolDatastore soap_tmp___gnvim2__CreateVvolDatastore;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateVvolDatastore.gnvim2__CreateVvolDatastore = gnvim2__CreateVvolDatastore;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateVvolDatastore(soap, &soap_tmp___gnvim2__CreateVvolDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateVvolDatastore(soap, &soap_tmp___gnvim2__CreateVvolDatastore, "-gnvim2:CreateVvolDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateVvolDatastore(soap, &soap_tmp___gnvim2__CreateVvolDatastore, "-gnvim2:CreateVvolDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateVvolDatastoreResponse)
		return soap_closesock(soap);
	gnvim2__CreateVvolDatastoreResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateVvolDatastoreResponse.soap_get(soap, "gnvim2:CreateVvolDatastoreResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveDatastore(const char *endpoint, const char *soap_action, gnvim2__RemoveDatastoreRequestType *gnvim2__RemoveDatastore, _gnvim2__RemoveDatastoreResponse &gnvim2__RemoveDatastoreResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveDatastore soap_tmp___gnvim2__RemoveDatastore;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveDatastore.gnvim2__RemoveDatastore = gnvim2__RemoveDatastore;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveDatastore(soap, &soap_tmp___gnvim2__RemoveDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveDatastore(soap, &soap_tmp___gnvim2__RemoveDatastore, "-gnvim2:RemoveDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveDatastore(soap, &soap_tmp___gnvim2__RemoveDatastore, "-gnvim2:RemoveDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveDatastoreResponse)
		return soap_closesock(soap);
	gnvim2__RemoveDatastoreResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveDatastoreResponse.soap_get(soap, "gnvim2:RemoveDatastoreResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveDatastoreEx_USCORETask(const char *endpoint, const char *soap_action, gnvim2__RemoveDatastoreExRequestType *gnvim2__RemoveDatastoreEx_USCORETask, _gnvim2__RemoveDatastoreEx_USCORETaskResponse &gnvim2__RemoveDatastoreEx_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveDatastoreEx_USCORETask soap_tmp___gnvim2__RemoveDatastoreEx_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveDatastoreEx_USCORETask.gnvim2__RemoveDatastoreEx_USCORETask = gnvim2__RemoveDatastoreEx_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveDatastoreEx_USCORETask(soap, &soap_tmp___gnvim2__RemoveDatastoreEx_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveDatastoreEx_USCORETask(soap, &soap_tmp___gnvim2__RemoveDatastoreEx_USCORETask, "-gnvim2:RemoveDatastoreEx_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveDatastoreEx_USCORETask(soap, &soap_tmp___gnvim2__RemoveDatastoreEx_USCORETask, "-gnvim2:RemoveDatastoreEx_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveDatastoreEx_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__RemoveDatastoreEx_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveDatastoreEx_USCORETaskResponse.soap_get(soap, "gnvim2:RemoveDatastoreEx_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ConfigureDatastorePrincipal(const char *endpoint, const char *soap_action, gnvim2__ConfigureDatastorePrincipalRequestType *gnvim2__ConfigureDatastorePrincipal, _gnvim2__ConfigureDatastorePrincipalResponse &gnvim2__ConfigureDatastorePrincipalResponse)
{	struct soap *soap = this;
	struct __gnvim2__ConfigureDatastorePrincipal soap_tmp___gnvim2__ConfigureDatastorePrincipal;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ConfigureDatastorePrincipal.gnvim2__ConfigureDatastorePrincipal = gnvim2__ConfigureDatastorePrincipal;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ConfigureDatastorePrincipal(soap, &soap_tmp___gnvim2__ConfigureDatastorePrincipal);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ConfigureDatastorePrincipal(soap, &soap_tmp___gnvim2__ConfigureDatastorePrincipal, "-gnvim2:ConfigureDatastorePrincipal", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ConfigureDatastorePrincipal(soap, &soap_tmp___gnvim2__ConfigureDatastorePrincipal, "-gnvim2:ConfigureDatastorePrincipal", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ConfigureDatastorePrincipalResponse)
		return soap_closesock(soap);
	gnvim2__ConfigureDatastorePrincipalResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ConfigureDatastorePrincipalResponse.soap_get(soap, "gnvim2:ConfigureDatastorePrincipalResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryUnresolvedVmfsVolumes(const char *endpoint, const char *soap_action, gnvim2__QueryUnresolvedVmfsVolumesRequestType *gnvim2__QueryUnresolvedVmfsVolumes, _gnvim2__QueryUnresolvedVmfsVolumesResponse &gnvim2__QueryUnresolvedVmfsVolumesResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryUnresolvedVmfsVolumes soap_tmp___gnvim2__QueryUnresolvedVmfsVolumes;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryUnresolvedVmfsVolumes.gnvim2__QueryUnresolvedVmfsVolumes = gnvim2__QueryUnresolvedVmfsVolumes;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryUnresolvedVmfsVolumes(soap, &soap_tmp___gnvim2__QueryUnresolvedVmfsVolumes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryUnresolvedVmfsVolumes(soap, &soap_tmp___gnvim2__QueryUnresolvedVmfsVolumes, "-gnvim2:QueryUnresolvedVmfsVolumes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryUnresolvedVmfsVolumes(soap, &soap_tmp___gnvim2__QueryUnresolvedVmfsVolumes, "-gnvim2:QueryUnresolvedVmfsVolumes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryUnresolvedVmfsVolumesResponse)
		return soap_closesock(soap);
	gnvim2__QueryUnresolvedVmfsVolumesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryUnresolvedVmfsVolumesResponse.soap_get(soap, "gnvim2:QueryUnresolvedVmfsVolumesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResignatureUnresolvedVmfsVolume_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ResignatureUnresolvedVmfsVolumeRequestType *gnvim2__ResignatureUnresolvedVmfsVolume_USCORETask, _gnvim2__ResignatureUnresolvedVmfsVolume_USCORETaskResponse &gnvim2__ResignatureUnresolvedVmfsVolume_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ResignatureUnresolvedVmfsVolume_USCORETask soap_tmp___gnvim2__ResignatureUnresolvedVmfsVolume_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ResignatureUnresolvedVmfsVolume_USCORETask.gnvim2__ResignatureUnresolvedVmfsVolume_USCORETask = gnvim2__ResignatureUnresolvedVmfsVolume_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ResignatureUnresolvedVmfsVolume_USCORETask(soap, &soap_tmp___gnvim2__ResignatureUnresolvedVmfsVolume_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ResignatureUnresolvedVmfsVolume_USCORETask(soap, &soap_tmp___gnvim2__ResignatureUnresolvedVmfsVolume_USCORETask, "-gnvim2:ResignatureUnresolvedVmfsVolume_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ResignatureUnresolvedVmfsVolume_USCORETask(soap, &soap_tmp___gnvim2__ResignatureUnresolvedVmfsVolume_USCORETask, "-gnvim2:ResignatureUnresolvedVmfsVolume_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ResignatureUnresolvedVmfsVolume_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ResignatureUnresolvedVmfsVolume_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ResignatureUnresolvedVmfsVolume_USCORETaskResponse.soap_get(soap, "gnvim2:ResignatureUnresolvedVmfsVolume_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateDateTimeConfig(const char *endpoint, const char *soap_action, gnvim2__UpdateDateTimeConfigRequestType *gnvim2__UpdateDateTimeConfig, _gnvim2__UpdateDateTimeConfigResponse &gnvim2__UpdateDateTimeConfigResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateDateTimeConfig soap_tmp___gnvim2__UpdateDateTimeConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateDateTimeConfig.gnvim2__UpdateDateTimeConfig = gnvim2__UpdateDateTimeConfig;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateDateTimeConfig(soap, &soap_tmp___gnvim2__UpdateDateTimeConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateDateTimeConfig(soap, &soap_tmp___gnvim2__UpdateDateTimeConfig, "-gnvim2:UpdateDateTimeConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateDateTimeConfig(soap, &soap_tmp___gnvim2__UpdateDateTimeConfig, "-gnvim2:UpdateDateTimeConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateDateTimeConfigResponse)
		return soap_closesock(soap);
	gnvim2__UpdateDateTimeConfigResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateDateTimeConfigResponse.soap_get(soap, "gnvim2:UpdateDateTimeConfigResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryAvailableTimeZones(const char *endpoint, const char *soap_action, gnvim2__QueryAvailableTimeZonesRequestType *gnvim2__QueryAvailableTimeZones, _gnvim2__QueryAvailableTimeZonesResponse &gnvim2__QueryAvailableTimeZonesResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryAvailableTimeZones soap_tmp___gnvim2__QueryAvailableTimeZones;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryAvailableTimeZones.gnvim2__QueryAvailableTimeZones = gnvim2__QueryAvailableTimeZones;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryAvailableTimeZones(soap, &soap_tmp___gnvim2__QueryAvailableTimeZones);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryAvailableTimeZones(soap, &soap_tmp___gnvim2__QueryAvailableTimeZones, "-gnvim2:QueryAvailableTimeZones", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryAvailableTimeZones(soap, &soap_tmp___gnvim2__QueryAvailableTimeZones, "-gnvim2:QueryAvailableTimeZones", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryAvailableTimeZonesResponse)
		return soap_closesock(soap);
	gnvim2__QueryAvailableTimeZonesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryAvailableTimeZonesResponse.soap_get(soap, "gnvim2:QueryAvailableTimeZonesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryDateTime(const char *endpoint, const char *soap_action, gnvim2__QueryDateTimeRequestType *gnvim2__QueryDateTime, _gnvim2__QueryDateTimeResponse &gnvim2__QueryDateTimeResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryDateTime soap_tmp___gnvim2__QueryDateTime;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryDateTime.gnvim2__QueryDateTime = gnvim2__QueryDateTime;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryDateTime(soap, &soap_tmp___gnvim2__QueryDateTime);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryDateTime(soap, &soap_tmp___gnvim2__QueryDateTime, "-gnvim2:QueryDateTime", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryDateTime(soap, &soap_tmp___gnvim2__QueryDateTime, "-gnvim2:QueryDateTime", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryDateTimeResponse)
		return soap_closesock(soap);
	gnvim2__QueryDateTimeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryDateTimeResponse.soap_get(soap, "gnvim2:QueryDateTimeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateDateTime(const char *endpoint, const char *soap_action, gnvim2__UpdateDateTimeRequestType *gnvim2__UpdateDateTime, _gnvim2__UpdateDateTimeResponse &gnvim2__UpdateDateTimeResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateDateTime soap_tmp___gnvim2__UpdateDateTime;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateDateTime.gnvim2__UpdateDateTime = gnvim2__UpdateDateTime;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateDateTime(soap, &soap_tmp___gnvim2__UpdateDateTime);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateDateTime(soap, &soap_tmp___gnvim2__UpdateDateTime, "-gnvim2:UpdateDateTime", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateDateTime(soap, &soap_tmp___gnvim2__UpdateDateTime, "-gnvim2:UpdateDateTime", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateDateTimeResponse)
		return soap_closesock(soap);
	gnvim2__UpdateDateTimeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateDateTimeResponse.soap_get(soap, "gnvim2:UpdateDateTimeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshDateTimeSystem(const char *endpoint, const char *soap_action, gnvim2__RefreshDateTimeSystemRequestType *gnvim2__RefreshDateTimeSystem, _gnvim2__RefreshDateTimeSystemResponse &gnvim2__RefreshDateTimeSystemResponse)
{	struct soap *soap = this;
	struct __gnvim2__RefreshDateTimeSystem soap_tmp___gnvim2__RefreshDateTimeSystem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RefreshDateTimeSystem.gnvim2__RefreshDateTimeSystem = gnvim2__RefreshDateTimeSystem;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RefreshDateTimeSystem(soap, &soap_tmp___gnvim2__RefreshDateTimeSystem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RefreshDateTimeSystem(soap, &soap_tmp___gnvim2__RefreshDateTimeSystem, "-gnvim2:RefreshDateTimeSystem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RefreshDateTimeSystem(soap, &soap_tmp___gnvim2__RefreshDateTimeSystem, "-gnvim2:RefreshDateTimeSystem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RefreshDateTimeSystemResponse)
		return soap_closesock(soap);
	gnvim2__RefreshDateTimeSystemResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RefreshDateTimeSystemResponse.soap_get(soap, "gnvim2:RefreshDateTimeSystemResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryAvailablePartition(const char *endpoint, const char *soap_action, gnvim2__QueryAvailablePartitionRequestType *gnvim2__QueryAvailablePartition, _gnvim2__QueryAvailablePartitionResponse &gnvim2__QueryAvailablePartitionResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryAvailablePartition soap_tmp___gnvim2__QueryAvailablePartition;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryAvailablePartition.gnvim2__QueryAvailablePartition = gnvim2__QueryAvailablePartition;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryAvailablePartition(soap, &soap_tmp___gnvim2__QueryAvailablePartition);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryAvailablePartition(soap, &soap_tmp___gnvim2__QueryAvailablePartition, "-gnvim2:QueryAvailablePartition", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryAvailablePartition(soap, &soap_tmp___gnvim2__QueryAvailablePartition, "-gnvim2:QueryAvailablePartition", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryAvailablePartitionResponse)
		return soap_closesock(soap);
	gnvim2__QueryAvailablePartitionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryAvailablePartitionResponse.soap_get(soap, "gnvim2:QueryAvailablePartitionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SelectActivePartition(const char *endpoint, const char *soap_action, gnvim2__SelectActivePartitionRequestType *gnvim2__SelectActivePartition, _gnvim2__SelectActivePartitionResponse &gnvim2__SelectActivePartitionResponse)
{	struct soap *soap = this;
	struct __gnvim2__SelectActivePartition soap_tmp___gnvim2__SelectActivePartition;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SelectActivePartition.gnvim2__SelectActivePartition = gnvim2__SelectActivePartition;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SelectActivePartition(soap, &soap_tmp___gnvim2__SelectActivePartition);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SelectActivePartition(soap, &soap_tmp___gnvim2__SelectActivePartition, "-gnvim2:SelectActivePartition", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SelectActivePartition(soap, &soap_tmp___gnvim2__SelectActivePartition, "-gnvim2:SelectActivePartition", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SelectActivePartitionResponse)
		return soap_closesock(soap);
	gnvim2__SelectActivePartitionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SelectActivePartitionResponse.soap_get(soap, "gnvim2:SelectActivePartitionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryPartitionCreateOptions(const char *endpoint, const char *soap_action, gnvim2__QueryPartitionCreateOptionsRequestType *gnvim2__QueryPartitionCreateOptions, _gnvim2__QueryPartitionCreateOptionsResponse &gnvim2__QueryPartitionCreateOptionsResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryPartitionCreateOptions soap_tmp___gnvim2__QueryPartitionCreateOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryPartitionCreateOptions.gnvim2__QueryPartitionCreateOptions = gnvim2__QueryPartitionCreateOptions;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryPartitionCreateOptions(soap, &soap_tmp___gnvim2__QueryPartitionCreateOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryPartitionCreateOptions(soap, &soap_tmp___gnvim2__QueryPartitionCreateOptions, "-gnvim2:QueryPartitionCreateOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryPartitionCreateOptions(soap, &soap_tmp___gnvim2__QueryPartitionCreateOptions, "-gnvim2:QueryPartitionCreateOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryPartitionCreateOptionsResponse)
		return soap_closesock(soap);
	gnvim2__QueryPartitionCreateOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryPartitionCreateOptionsResponse.soap_get(soap, "gnvim2:QueryPartitionCreateOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryPartitionCreateDesc(const char *endpoint, const char *soap_action, gnvim2__QueryPartitionCreateDescRequestType *gnvim2__QueryPartitionCreateDesc, _gnvim2__QueryPartitionCreateDescResponse &gnvim2__QueryPartitionCreateDescResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryPartitionCreateDesc soap_tmp___gnvim2__QueryPartitionCreateDesc;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryPartitionCreateDesc.gnvim2__QueryPartitionCreateDesc = gnvim2__QueryPartitionCreateDesc;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryPartitionCreateDesc(soap, &soap_tmp___gnvim2__QueryPartitionCreateDesc);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryPartitionCreateDesc(soap, &soap_tmp___gnvim2__QueryPartitionCreateDesc, "-gnvim2:QueryPartitionCreateDesc", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryPartitionCreateDesc(soap, &soap_tmp___gnvim2__QueryPartitionCreateDesc, "-gnvim2:QueryPartitionCreateDesc", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryPartitionCreateDescResponse)
		return soap_closesock(soap);
	gnvim2__QueryPartitionCreateDescResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryPartitionCreateDescResponse.soap_get(soap, "gnvim2:QueryPartitionCreateDescResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateDiagnosticPartition(const char *endpoint, const char *soap_action, gnvim2__CreateDiagnosticPartitionRequestType *gnvim2__CreateDiagnosticPartition, _gnvim2__CreateDiagnosticPartitionResponse &gnvim2__CreateDiagnosticPartitionResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateDiagnosticPartition soap_tmp___gnvim2__CreateDiagnosticPartition;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateDiagnosticPartition.gnvim2__CreateDiagnosticPartition = gnvim2__CreateDiagnosticPartition;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateDiagnosticPartition(soap, &soap_tmp___gnvim2__CreateDiagnosticPartition);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateDiagnosticPartition(soap, &soap_tmp___gnvim2__CreateDiagnosticPartition, "-gnvim2:CreateDiagnosticPartition", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateDiagnosticPartition(soap, &soap_tmp___gnvim2__CreateDiagnosticPartition, "-gnvim2:CreateDiagnosticPartition", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateDiagnosticPartitionResponse)
		return soap_closesock(soap);
	gnvim2__CreateDiagnosticPartitionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateDiagnosticPartitionResponse.soap_get(soap, "gnvim2:CreateDiagnosticPartitionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EsxAgentHostManagerUpdateConfig(const char *endpoint, const char *soap_action, gnvim2__EsxAgentHostManagerUpdateConfigRequestType *gnvim2__EsxAgentHostManagerUpdateConfig, _gnvim2__EsxAgentHostManagerUpdateConfigResponse &gnvim2__EsxAgentHostManagerUpdateConfigResponse)
{	struct soap *soap = this;
	struct __gnvim2__EsxAgentHostManagerUpdateConfig soap_tmp___gnvim2__EsxAgentHostManagerUpdateConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__EsxAgentHostManagerUpdateConfig.gnvim2__EsxAgentHostManagerUpdateConfig = gnvim2__EsxAgentHostManagerUpdateConfig;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__EsxAgentHostManagerUpdateConfig(soap, &soap_tmp___gnvim2__EsxAgentHostManagerUpdateConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__EsxAgentHostManagerUpdateConfig(soap, &soap_tmp___gnvim2__EsxAgentHostManagerUpdateConfig, "-gnvim2:EsxAgentHostManagerUpdateConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__EsxAgentHostManagerUpdateConfig(soap, &soap_tmp___gnvim2__EsxAgentHostManagerUpdateConfig, "-gnvim2:EsxAgentHostManagerUpdateConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__EsxAgentHostManagerUpdateConfigResponse)
		return soap_closesock(soap);
	gnvim2__EsxAgentHostManagerUpdateConfigResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__EsxAgentHostManagerUpdateConfigResponse.soap_get(soap, "gnvim2:EsxAgentHostManagerUpdateConfigResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateDefaultPolicy(const char *endpoint, const char *soap_action, gnvim2__UpdateDefaultPolicyRequestType *gnvim2__UpdateDefaultPolicy, _gnvim2__UpdateDefaultPolicyResponse &gnvim2__UpdateDefaultPolicyResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateDefaultPolicy soap_tmp___gnvim2__UpdateDefaultPolicy;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateDefaultPolicy.gnvim2__UpdateDefaultPolicy = gnvim2__UpdateDefaultPolicy;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateDefaultPolicy(soap, &soap_tmp___gnvim2__UpdateDefaultPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateDefaultPolicy(soap, &soap_tmp___gnvim2__UpdateDefaultPolicy, "-gnvim2:UpdateDefaultPolicy", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateDefaultPolicy(soap, &soap_tmp___gnvim2__UpdateDefaultPolicy, "-gnvim2:UpdateDefaultPolicy", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateDefaultPolicyResponse)
		return soap_closesock(soap);
	gnvim2__UpdateDefaultPolicyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateDefaultPolicyResponse.soap_get(soap, "gnvim2:UpdateDefaultPolicyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EnableRuleset(const char *endpoint, const char *soap_action, gnvim2__EnableRulesetRequestType *gnvim2__EnableRuleset, _gnvim2__EnableRulesetResponse &gnvim2__EnableRulesetResponse)
{	struct soap *soap = this;
	struct __gnvim2__EnableRuleset soap_tmp___gnvim2__EnableRuleset;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__EnableRuleset.gnvim2__EnableRuleset = gnvim2__EnableRuleset;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__EnableRuleset(soap, &soap_tmp___gnvim2__EnableRuleset);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__EnableRuleset(soap, &soap_tmp___gnvim2__EnableRuleset, "-gnvim2:EnableRuleset", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__EnableRuleset(soap, &soap_tmp___gnvim2__EnableRuleset, "-gnvim2:EnableRuleset", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__EnableRulesetResponse)
		return soap_closesock(soap);
	gnvim2__EnableRulesetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__EnableRulesetResponse.soap_get(soap, "gnvim2:EnableRulesetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DisableRuleset(const char *endpoint, const char *soap_action, gnvim2__DisableRulesetRequestType *gnvim2__DisableRuleset, _gnvim2__DisableRulesetResponse &gnvim2__DisableRulesetResponse)
{	struct soap *soap = this;
	struct __gnvim2__DisableRuleset soap_tmp___gnvim2__DisableRuleset;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DisableRuleset.gnvim2__DisableRuleset = gnvim2__DisableRuleset;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DisableRuleset(soap, &soap_tmp___gnvim2__DisableRuleset);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DisableRuleset(soap, &soap_tmp___gnvim2__DisableRuleset, "-gnvim2:DisableRuleset", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DisableRuleset(soap, &soap_tmp___gnvim2__DisableRuleset, "-gnvim2:DisableRuleset", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DisableRulesetResponse)
		return soap_closesock(soap);
	gnvim2__DisableRulesetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DisableRulesetResponse.soap_get(soap, "gnvim2:DisableRulesetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateRuleset(const char *endpoint, const char *soap_action, gnvim2__UpdateRulesetRequestType *gnvim2__UpdateRuleset, _gnvim2__UpdateRulesetResponse &gnvim2__UpdateRulesetResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateRuleset soap_tmp___gnvim2__UpdateRuleset;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateRuleset.gnvim2__UpdateRuleset = gnvim2__UpdateRuleset;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateRuleset(soap, &soap_tmp___gnvim2__UpdateRuleset);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateRuleset(soap, &soap_tmp___gnvim2__UpdateRuleset, "-gnvim2:UpdateRuleset", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateRuleset(soap, &soap_tmp___gnvim2__UpdateRuleset, "-gnvim2:UpdateRuleset", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateRulesetResponse)
		return soap_closesock(soap);
	gnvim2__UpdateRulesetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateRulesetResponse.soap_get(soap, "gnvim2:UpdateRulesetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshFirewall(const char *endpoint, const char *soap_action, gnvim2__RefreshFirewallRequestType *gnvim2__RefreshFirewall, _gnvim2__RefreshFirewallResponse &gnvim2__RefreshFirewallResponse)
{	struct soap *soap = this;
	struct __gnvim2__RefreshFirewall soap_tmp___gnvim2__RefreshFirewall;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RefreshFirewall.gnvim2__RefreshFirewall = gnvim2__RefreshFirewall;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RefreshFirewall(soap, &soap_tmp___gnvim2__RefreshFirewall);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RefreshFirewall(soap, &soap_tmp___gnvim2__RefreshFirewall, "-gnvim2:RefreshFirewall", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RefreshFirewall(soap, &soap_tmp___gnvim2__RefreshFirewall, "-gnvim2:RefreshFirewall", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RefreshFirewallResponse)
		return soap_closesock(soap);
	gnvim2__RefreshFirewallResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RefreshFirewallResponse.soap_get(soap, "gnvim2:RefreshFirewallResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResetFirmwareToFactoryDefaults(const char *endpoint, const char *soap_action, gnvim2__ResetFirmwareToFactoryDefaultsRequestType *gnvim2__ResetFirmwareToFactoryDefaults, _gnvim2__ResetFirmwareToFactoryDefaultsResponse &gnvim2__ResetFirmwareToFactoryDefaultsResponse)
{	struct soap *soap = this;
	struct __gnvim2__ResetFirmwareToFactoryDefaults soap_tmp___gnvim2__ResetFirmwareToFactoryDefaults;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ResetFirmwareToFactoryDefaults.gnvim2__ResetFirmwareToFactoryDefaults = gnvim2__ResetFirmwareToFactoryDefaults;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ResetFirmwareToFactoryDefaults(soap, &soap_tmp___gnvim2__ResetFirmwareToFactoryDefaults);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ResetFirmwareToFactoryDefaults(soap, &soap_tmp___gnvim2__ResetFirmwareToFactoryDefaults, "-gnvim2:ResetFirmwareToFactoryDefaults", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ResetFirmwareToFactoryDefaults(soap, &soap_tmp___gnvim2__ResetFirmwareToFactoryDefaults, "-gnvim2:ResetFirmwareToFactoryDefaults", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ResetFirmwareToFactoryDefaultsResponse)
		return soap_closesock(soap);
	gnvim2__ResetFirmwareToFactoryDefaultsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ResetFirmwareToFactoryDefaultsResponse.soap_get(soap, "gnvim2:ResetFirmwareToFactoryDefaultsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::BackupFirmwareConfiguration(const char *endpoint, const char *soap_action, gnvim2__BackupFirmwareConfigurationRequestType *gnvim2__BackupFirmwareConfiguration, _gnvim2__BackupFirmwareConfigurationResponse &gnvim2__BackupFirmwareConfigurationResponse)
{	struct soap *soap = this;
	struct __gnvim2__BackupFirmwareConfiguration soap_tmp___gnvim2__BackupFirmwareConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__BackupFirmwareConfiguration.gnvim2__BackupFirmwareConfiguration = gnvim2__BackupFirmwareConfiguration;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__BackupFirmwareConfiguration(soap, &soap_tmp___gnvim2__BackupFirmwareConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__BackupFirmwareConfiguration(soap, &soap_tmp___gnvim2__BackupFirmwareConfiguration, "-gnvim2:BackupFirmwareConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__BackupFirmwareConfiguration(soap, &soap_tmp___gnvim2__BackupFirmwareConfiguration, "-gnvim2:BackupFirmwareConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__BackupFirmwareConfigurationResponse)
		return soap_closesock(soap);
	gnvim2__BackupFirmwareConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__BackupFirmwareConfigurationResponse.soap_get(soap, "gnvim2:BackupFirmwareConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryFirmwareConfigUploadURL(const char *endpoint, const char *soap_action, gnvim2__QueryFirmwareConfigUploadURLRequestType *gnvim2__QueryFirmwareConfigUploadURL, _gnvim2__QueryFirmwareConfigUploadURLResponse &gnvim2__QueryFirmwareConfigUploadURLResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryFirmwareConfigUploadURL soap_tmp___gnvim2__QueryFirmwareConfigUploadURL;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryFirmwareConfigUploadURL.gnvim2__QueryFirmwareConfigUploadURL = gnvim2__QueryFirmwareConfigUploadURL;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryFirmwareConfigUploadURL(soap, &soap_tmp___gnvim2__QueryFirmwareConfigUploadURL);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryFirmwareConfigUploadURL(soap, &soap_tmp___gnvim2__QueryFirmwareConfigUploadURL, "-gnvim2:QueryFirmwareConfigUploadURL", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryFirmwareConfigUploadURL(soap, &soap_tmp___gnvim2__QueryFirmwareConfigUploadURL, "-gnvim2:QueryFirmwareConfigUploadURL", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryFirmwareConfigUploadURLResponse)
		return soap_closesock(soap);
	gnvim2__QueryFirmwareConfigUploadURLResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryFirmwareConfigUploadURLResponse.soap_get(soap, "gnvim2:QueryFirmwareConfigUploadURLResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RestoreFirmwareConfiguration(const char *endpoint, const char *soap_action, gnvim2__RestoreFirmwareConfigurationRequestType *gnvim2__RestoreFirmwareConfiguration, _gnvim2__RestoreFirmwareConfigurationResponse &gnvim2__RestoreFirmwareConfigurationResponse)
{	struct soap *soap = this;
	struct __gnvim2__RestoreFirmwareConfiguration soap_tmp___gnvim2__RestoreFirmwareConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RestoreFirmwareConfiguration.gnvim2__RestoreFirmwareConfiguration = gnvim2__RestoreFirmwareConfiguration;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RestoreFirmwareConfiguration(soap, &soap_tmp___gnvim2__RestoreFirmwareConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RestoreFirmwareConfiguration(soap, &soap_tmp___gnvim2__RestoreFirmwareConfiguration, "-gnvim2:RestoreFirmwareConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RestoreFirmwareConfiguration(soap, &soap_tmp___gnvim2__RestoreFirmwareConfiguration, "-gnvim2:RestoreFirmwareConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RestoreFirmwareConfigurationResponse)
		return soap_closesock(soap);
	gnvim2__RestoreFirmwareConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RestoreFirmwareConfigurationResponse.soap_get(soap, "gnvim2:RestoreFirmwareConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshGraphicsManager(const char *endpoint, const char *soap_action, gnvim2__RefreshGraphicsManagerRequestType *gnvim2__RefreshGraphicsManager, _gnvim2__RefreshGraphicsManagerResponse &gnvim2__RefreshGraphicsManagerResponse)
{	struct soap *soap = this;
	struct __gnvim2__RefreshGraphicsManager soap_tmp___gnvim2__RefreshGraphicsManager;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RefreshGraphicsManager.gnvim2__RefreshGraphicsManager = gnvim2__RefreshGraphicsManager;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RefreshGraphicsManager(soap, &soap_tmp___gnvim2__RefreshGraphicsManager);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RefreshGraphicsManager(soap, &soap_tmp___gnvim2__RefreshGraphicsManager, "-gnvim2:RefreshGraphicsManager", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RefreshGraphicsManager(soap, &soap_tmp___gnvim2__RefreshGraphicsManager, "-gnvim2:RefreshGraphicsManager", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RefreshGraphicsManagerResponse)
		return soap_closesock(soap);
	gnvim2__RefreshGraphicsManagerResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RefreshGraphicsManagerResponse.soap_get(soap, "gnvim2:RefreshGraphicsManagerResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::IsSharedGraphicsActive(const char *endpoint, const char *soap_action, gnvim2__IsSharedGraphicsActiveRequestType *gnvim2__IsSharedGraphicsActive, _gnvim2__IsSharedGraphicsActiveResponse &gnvim2__IsSharedGraphicsActiveResponse)
{	struct soap *soap = this;
	struct __gnvim2__IsSharedGraphicsActive soap_tmp___gnvim2__IsSharedGraphicsActive;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__IsSharedGraphicsActive.gnvim2__IsSharedGraphicsActive = gnvim2__IsSharedGraphicsActive;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__IsSharedGraphicsActive(soap, &soap_tmp___gnvim2__IsSharedGraphicsActive);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__IsSharedGraphicsActive(soap, &soap_tmp___gnvim2__IsSharedGraphicsActive, "-gnvim2:IsSharedGraphicsActive", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__IsSharedGraphicsActive(soap, &soap_tmp___gnvim2__IsSharedGraphicsActive, "-gnvim2:IsSharedGraphicsActive", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__IsSharedGraphicsActiveResponse)
		return soap_closesock(soap);
	gnvim2__IsSharedGraphicsActiveResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__IsSharedGraphicsActiveResponse.soap_get(soap, "gnvim2:IsSharedGraphicsActiveResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshHealthStatusSystem(const char *endpoint, const char *soap_action, gnvim2__RefreshHealthStatusSystemRequestType *gnvim2__RefreshHealthStatusSystem, _gnvim2__RefreshHealthStatusSystemResponse &gnvim2__RefreshHealthStatusSystemResponse)
{	struct soap *soap = this;
	struct __gnvim2__RefreshHealthStatusSystem soap_tmp___gnvim2__RefreshHealthStatusSystem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RefreshHealthStatusSystem.gnvim2__RefreshHealthStatusSystem = gnvim2__RefreshHealthStatusSystem;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RefreshHealthStatusSystem(soap, &soap_tmp___gnvim2__RefreshHealthStatusSystem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RefreshHealthStatusSystem(soap, &soap_tmp___gnvim2__RefreshHealthStatusSystem, "-gnvim2:RefreshHealthStatusSystem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RefreshHealthStatusSystem(soap, &soap_tmp___gnvim2__RefreshHealthStatusSystem, "-gnvim2:RefreshHealthStatusSystem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RefreshHealthStatusSystemResponse)
		return soap_closesock(soap);
	gnvim2__RefreshHealthStatusSystemResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RefreshHealthStatusSystemResponse.soap_get(soap, "gnvim2:RefreshHealthStatusSystemResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResetSystemHealthInfo(const char *endpoint, const char *soap_action, gnvim2__ResetSystemHealthInfoRequestType *gnvim2__ResetSystemHealthInfo, _gnvim2__ResetSystemHealthInfoResponse &gnvim2__ResetSystemHealthInfoResponse)
{	struct soap *soap = this;
	struct __gnvim2__ResetSystemHealthInfo soap_tmp___gnvim2__ResetSystemHealthInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ResetSystemHealthInfo.gnvim2__ResetSystemHealthInfo = gnvim2__ResetSystemHealthInfo;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ResetSystemHealthInfo(soap, &soap_tmp___gnvim2__ResetSystemHealthInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ResetSystemHealthInfo(soap, &soap_tmp___gnvim2__ResetSystemHealthInfo, "-gnvim2:ResetSystemHealthInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ResetSystemHealthInfo(soap, &soap_tmp___gnvim2__ResetSystemHealthInfo, "-gnvim2:ResetSystemHealthInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ResetSystemHealthInfoResponse)
		return soap_closesock(soap);
	gnvim2__ResetSystemHealthInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ResetSystemHealthInfoResponse.soap_get(soap, "gnvim2:ResetSystemHealthInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveHostAccessControlEntries(const char *endpoint, const char *soap_action, gnvim2__RetrieveHostAccessControlEntriesRequestType *gnvim2__RetrieveHostAccessControlEntries, _gnvim2__RetrieveHostAccessControlEntriesResponse &gnvim2__RetrieveHostAccessControlEntriesResponse)
{	struct soap *soap = this;
	struct __gnvim2__RetrieveHostAccessControlEntries soap_tmp___gnvim2__RetrieveHostAccessControlEntries;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RetrieveHostAccessControlEntries.gnvim2__RetrieveHostAccessControlEntries = gnvim2__RetrieveHostAccessControlEntries;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RetrieveHostAccessControlEntries(soap, &soap_tmp___gnvim2__RetrieveHostAccessControlEntries);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RetrieveHostAccessControlEntries(soap, &soap_tmp___gnvim2__RetrieveHostAccessControlEntries, "-gnvim2:RetrieveHostAccessControlEntries", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RetrieveHostAccessControlEntries(soap, &soap_tmp___gnvim2__RetrieveHostAccessControlEntries, "-gnvim2:RetrieveHostAccessControlEntries", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RetrieveHostAccessControlEntriesResponse)
		return soap_closesock(soap);
	gnvim2__RetrieveHostAccessControlEntriesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RetrieveHostAccessControlEntriesResponse.soap_get(soap, "gnvim2:RetrieveHostAccessControlEntriesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ChangeAccessMode(const char *endpoint, const char *soap_action, gnvim2__ChangeAccessModeRequestType *gnvim2__ChangeAccessMode, _gnvim2__ChangeAccessModeResponse &gnvim2__ChangeAccessModeResponse)
{	struct soap *soap = this;
	struct __gnvim2__ChangeAccessMode soap_tmp___gnvim2__ChangeAccessMode;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ChangeAccessMode.gnvim2__ChangeAccessMode = gnvim2__ChangeAccessMode;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ChangeAccessMode(soap, &soap_tmp___gnvim2__ChangeAccessMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ChangeAccessMode(soap, &soap_tmp___gnvim2__ChangeAccessMode, "-gnvim2:ChangeAccessMode", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ChangeAccessMode(soap, &soap_tmp___gnvim2__ChangeAccessMode, "-gnvim2:ChangeAccessMode", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ChangeAccessModeResponse)
		return soap_closesock(soap);
	gnvim2__ChangeAccessModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ChangeAccessModeResponse.soap_get(soap, "gnvim2:ChangeAccessModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QuerySystemUsers(const char *endpoint, const char *soap_action, gnvim2__QuerySystemUsersRequestType *gnvim2__QuerySystemUsers, _gnvim2__QuerySystemUsersResponse &gnvim2__QuerySystemUsersResponse)
{	struct soap *soap = this;
	struct __gnvim2__QuerySystemUsers soap_tmp___gnvim2__QuerySystemUsers;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QuerySystemUsers.gnvim2__QuerySystemUsers = gnvim2__QuerySystemUsers;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QuerySystemUsers(soap, &soap_tmp___gnvim2__QuerySystemUsers);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QuerySystemUsers(soap, &soap_tmp___gnvim2__QuerySystemUsers, "-gnvim2:QuerySystemUsers", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QuerySystemUsers(soap, &soap_tmp___gnvim2__QuerySystemUsers, "-gnvim2:QuerySystemUsers", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QuerySystemUsersResponse)
		return soap_closesock(soap);
	gnvim2__QuerySystemUsersResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QuerySystemUsersResponse.soap_get(soap, "gnvim2:QuerySystemUsersResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateSystemUsers(const char *endpoint, const char *soap_action, gnvim2__UpdateSystemUsersRequestType *gnvim2__UpdateSystemUsers, _gnvim2__UpdateSystemUsersResponse &gnvim2__UpdateSystemUsersResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateSystemUsers soap_tmp___gnvim2__UpdateSystemUsers;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateSystemUsers.gnvim2__UpdateSystemUsers = gnvim2__UpdateSystemUsers;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateSystemUsers(soap, &soap_tmp___gnvim2__UpdateSystemUsers);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateSystemUsers(soap, &soap_tmp___gnvim2__UpdateSystemUsers, "-gnvim2:UpdateSystemUsers", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateSystemUsers(soap, &soap_tmp___gnvim2__UpdateSystemUsers, "-gnvim2:UpdateSystemUsers", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateSystemUsersResponse)
		return soap_closesock(soap);
	gnvim2__UpdateSystemUsersResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateSystemUsersResponse.soap_get(soap, "gnvim2:UpdateSystemUsersResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryLockdownExceptions(const char *endpoint, const char *soap_action, gnvim2__QueryLockdownExceptionsRequestType *gnvim2__QueryLockdownExceptions, _gnvim2__QueryLockdownExceptionsResponse &gnvim2__QueryLockdownExceptionsResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryLockdownExceptions soap_tmp___gnvim2__QueryLockdownExceptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryLockdownExceptions.gnvim2__QueryLockdownExceptions = gnvim2__QueryLockdownExceptions;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryLockdownExceptions(soap, &soap_tmp___gnvim2__QueryLockdownExceptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryLockdownExceptions(soap, &soap_tmp___gnvim2__QueryLockdownExceptions, "-gnvim2:QueryLockdownExceptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryLockdownExceptions(soap, &soap_tmp___gnvim2__QueryLockdownExceptions, "-gnvim2:QueryLockdownExceptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryLockdownExceptionsResponse)
		return soap_closesock(soap);
	gnvim2__QueryLockdownExceptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryLockdownExceptionsResponse.soap_get(soap, "gnvim2:QueryLockdownExceptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateLockdownExceptions(const char *endpoint, const char *soap_action, gnvim2__UpdateLockdownExceptionsRequestType *gnvim2__UpdateLockdownExceptions, _gnvim2__UpdateLockdownExceptionsResponse &gnvim2__UpdateLockdownExceptionsResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateLockdownExceptions soap_tmp___gnvim2__UpdateLockdownExceptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateLockdownExceptions.gnvim2__UpdateLockdownExceptions = gnvim2__UpdateLockdownExceptions;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateLockdownExceptions(soap, &soap_tmp___gnvim2__UpdateLockdownExceptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateLockdownExceptions(soap, &soap_tmp___gnvim2__UpdateLockdownExceptions, "-gnvim2:UpdateLockdownExceptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateLockdownExceptions(soap, &soap_tmp___gnvim2__UpdateLockdownExceptions, "-gnvim2:UpdateLockdownExceptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateLockdownExceptionsResponse)
		return soap_closesock(soap);
	gnvim2__UpdateLockdownExceptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateLockdownExceptionsResponse.soap_get(soap, "gnvim2:UpdateLockdownExceptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ChangeLockdownMode(const char *endpoint, const char *soap_action, gnvim2__ChangeLockdownModeRequestType *gnvim2__ChangeLockdownMode, _gnvim2__ChangeLockdownModeResponse &gnvim2__ChangeLockdownModeResponse)
{	struct soap *soap = this;
	struct __gnvim2__ChangeLockdownMode soap_tmp___gnvim2__ChangeLockdownMode;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ChangeLockdownMode.gnvim2__ChangeLockdownMode = gnvim2__ChangeLockdownMode;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ChangeLockdownMode(soap, &soap_tmp___gnvim2__ChangeLockdownMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ChangeLockdownMode(soap, &soap_tmp___gnvim2__ChangeLockdownMode, "-gnvim2:ChangeLockdownMode", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ChangeLockdownMode(soap, &soap_tmp___gnvim2__ChangeLockdownMode, "-gnvim2:ChangeLockdownMode", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ChangeLockdownModeResponse)
		return soap_closesock(soap);
	gnvim2__ChangeLockdownModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ChangeLockdownModeResponse.soap_get(soap, "gnvim2:ChangeLockdownModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::HostImageConfigGetAcceptance(const char *endpoint, const char *soap_action, gnvim2__HostImageConfigGetAcceptanceRequestType *gnvim2__HostImageConfigGetAcceptance, _gnvim2__HostImageConfigGetAcceptanceResponse &gnvim2__HostImageConfigGetAcceptanceResponse)
{	struct soap *soap = this;
	struct __gnvim2__HostImageConfigGetAcceptance soap_tmp___gnvim2__HostImageConfigGetAcceptance;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__HostImageConfigGetAcceptance.gnvim2__HostImageConfigGetAcceptance = gnvim2__HostImageConfigGetAcceptance;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__HostImageConfigGetAcceptance(soap, &soap_tmp___gnvim2__HostImageConfigGetAcceptance);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__HostImageConfigGetAcceptance(soap, &soap_tmp___gnvim2__HostImageConfigGetAcceptance, "-gnvim2:HostImageConfigGetAcceptance", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__HostImageConfigGetAcceptance(soap, &soap_tmp___gnvim2__HostImageConfigGetAcceptance, "-gnvim2:HostImageConfigGetAcceptance", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__HostImageConfigGetAcceptanceResponse)
		return soap_closesock(soap);
	gnvim2__HostImageConfigGetAcceptanceResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__HostImageConfigGetAcceptanceResponse.soap_get(soap, "gnvim2:HostImageConfigGetAcceptanceResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::HostImageConfigGetProfile(const char *endpoint, const char *soap_action, gnvim2__HostImageConfigGetProfileRequestType *gnvim2__HostImageConfigGetProfile, _gnvim2__HostImageConfigGetProfileResponse &gnvim2__HostImageConfigGetProfileResponse)
{	struct soap *soap = this;
	struct __gnvim2__HostImageConfigGetProfile soap_tmp___gnvim2__HostImageConfigGetProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__HostImageConfigGetProfile.gnvim2__HostImageConfigGetProfile = gnvim2__HostImageConfigGetProfile;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__HostImageConfigGetProfile(soap, &soap_tmp___gnvim2__HostImageConfigGetProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__HostImageConfigGetProfile(soap, &soap_tmp___gnvim2__HostImageConfigGetProfile, "-gnvim2:HostImageConfigGetProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__HostImageConfigGetProfile(soap, &soap_tmp___gnvim2__HostImageConfigGetProfile, "-gnvim2:HostImageConfigGetProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__HostImageConfigGetProfileResponse)
		return soap_closesock(soap);
	gnvim2__HostImageConfigGetProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__HostImageConfigGetProfileResponse.soap_get(soap, "gnvim2:HostImageConfigGetProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateHostImageAcceptanceLevel(const char *endpoint, const char *soap_action, gnvim2__UpdateHostImageAcceptanceLevelRequestType *gnvim2__UpdateHostImageAcceptanceLevel, _gnvim2__UpdateHostImageAcceptanceLevelResponse &gnvim2__UpdateHostImageAcceptanceLevelResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateHostImageAcceptanceLevel soap_tmp___gnvim2__UpdateHostImageAcceptanceLevel;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateHostImageAcceptanceLevel.gnvim2__UpdateHostImageAcceptanceLevel = gnvim2__UpdateHostImageAcceptanceLevel;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateHostImageAcceptanceLevel(soap, &soap_tmp___gnvim2__UpdateHostImageAcceptanceLevel);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateHostImageAcceptanceLevel(soap, &soap_tmp___gnvim2__UpdateHostImageAcceptanceLevel, "-gnvim2:UpdateHostImageAcceptanceLevel", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateHostImageAcceptanceLevel(soap, &soap_tmp___gnvim2__UpdateHostImageAcceptanceLevel, "-gnvim2:UpdateHostImageAcceptanceLevel", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateHostImageAcceptanceLevelResponse)
		return soap_closesock(soap);
	gnvim2__UpdateHostImageAcceptanceLevelResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateHostImageAcceptanceLevelResponse.soap_get(soap, "gnvim2:UpdateHostImageAcceptanceLevelResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryVnicStatus(const char *endpoint, const char *soap_action, gnvim2__QueryVnicStatusRequestType *gnvim2__QueryVnicStatus, _gnvim2__QueryVnicStatusResponse &gnvim2__QueryVnicStatusResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryVnicStatus soap_tmp___gnvim2__QueryVnicStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryVnicStatus.gnvim2__QueryVnicStatus = gnvim2__QueryVnicStatus;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryVnicStatus(soap, &soap_tmp___gnvim2__QueryVnicStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryVnicStatus(soap, &soap_tmp___gnvim2__QueryVnicStatus, "-gnvim2:QueryVnicStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryVnicStatus(soap, &soap_tmp___gnvim2__QueryVnicStatus, "-gnvim2:QueryVnicStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryVnicStatusResponse)
		return soap_closesock(soap);
	gnvim2__QueryVnicStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryVnicStatusResponse.soap_get(soap, "gnvim2:QueryVnicStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryPnicStatus(const char *endpoint, const char *soap_action, gnvim2__QueryPnicStatusRequestType *gnvim2__QueryPnicStatus, _gnvim2__QueryPnicStatusResponse &gnvim2__QueryPnicStatusResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryPnicStatus soap_tmp___gnvim2__QueryPnicStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryPnicStatus.gnvim2__QueryPnicStatus = gnvim2__QueryPnicStatus;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryPnicStatus(soap, &soap_tmp___gnvim2__QueryPnicStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryPnicStatus(soap, &soap_tmp___gnvim2__QueryPnicStatus, "-gnvim2:QueryPnicStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryPnicStatus(soap, &soap_tmp___gnvim2__QueryPnicStatus, "-gnvim2:QueryPnicStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryPnicStatusResponse)
		return soap_closesock(soap);
	gnvim2__QueryPnicStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryPnicStatusResponse.soap_get(soap, "gnvim2:QueryPnicStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryBoundVnics(const char *endpoint, const char *soap_action, gnvim2__QueryBoundVnicsRequestType *gnvim2__QueryBoundVnics, _gnvim2__QueryBoundVnicsResponse &gnvim2__QueryBoundVnicsResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryBoundVnics soap_tmp___gnvim2__QueryBoundVnics;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryBoundVnics.gnvim2__QueryBoundVnics = gnvim2__QueryBoundVnics;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryBoundVnics(soap, &soap_tmp___gnvim2__QueryBoundVnics);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryBoundVnics(soap, &soap_tmp___gnvim2__QueryBoundVnics, "-gnvim2:QueryBoundVnics", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryBoundVnics(soap, &soap_tmp___gnvim2__QueryBoundVnics, "-gnvim2:QueryBoundVnics", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryBoundVnicsResponse)
		return soap_closesock(soap);
	gnvim2__QueryBoundVnicsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryBoundVnicsResponse.soap_get(soap, "gnvim2:QueryBoundVnicsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryCandidateNics(const char *endpoint, const char *soap_action, gnvim2__QueryCandidateNicsRequestType *gnvim2__QueryCandidateNics, _gnvim2__QueryCandidateNicsResponse &gnvim2__QueryCandidateNicsResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryCandidateNics soap_tmp___gnvim2__QueryCandidateNics;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryCandidateNics.gnvim2__QueryCandidateNics = gnvim2__QueryCandidateNics;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryCandidateNics(soap, &soap_tmp___gnvim2__QueryCandidateNics);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryCandidateNics(soap, &soap_tmp___gnvim2__QueryCandidateNics, "-gnvim2:QueryCandidateNics", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryCandidateNics(soap, &soap_tmp___gnvim2__QueryCandidateNics, "-gnvim2:QueryCandidateNics", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryCandidateNicsResponse)
		return soap_closesock(soap);
	gnvim2__QueryCandidateNicsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryCandidateNicsResponse.soap_get(soap, "gnvim2:QueryCandidateNicsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::BindVnic(const char *endpoint, const char *soap_action, gnvim2__BindVnicRequestType *gnvim2__BindVnic, _gnvim2__BindVnicResponse &gnvim2__BindVnicResponse)
{	struct soap *soap = this;
	struct __gnvim2__BindVnic soap_tmp___gnvim2__BindVnic;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__BindVnic.gnvim2__BindVnic = gnvim2__BindVnic;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__BindVnic(soap, &soap_tmp___gnvim2__BindVnic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__BindVnic(soap, &soap_tmp___gnvim2__BindVnic, "-gnvim2:BindVnic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__BindVnic(soap, &soap_tmp___gnvim2__BindVnic, "-gnvim2:BindVnic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__BindVnicResponse)
		return soap_closesock(soap);
	gnvim2__BindVnicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__BindVnicResponse.soap_get(soap, "gnvim2:BindVnicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UnbindVnic(const char *endpoint, const char *soap_action, gnvim2__UnbindVnicRequestType *gnvim2__UnbindVnic, _gnvim2__UnbindVnicResponse &gnvim2__UnbindVnicResponse)
{	struct soap *soap = this;
	struct __gnvim2__UnbindVnic soap_tmp___gnvim2__UnbindVnic;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UnbindVnic.gnvim2__UnbindVnic = gnvim2__UnbindVnic;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UnbindVnic(soap, &soap_tmp___gnvim2__UnbindVnic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UnbindVnic(soap, &soap_tmp___gnvim2__UnbindVnic, "-gnvim2:UnbindVnic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UnbindVnic(soap, &soap_tmp___gnvim2__UnbindVnic, "-gnvim2:UnbindVnic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UnbindVnicResponse)
		return soap_closesock(soap);
	gnvim2__UnbindVnicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UnbindVnicResponse.soap_get(soap, "gnvim2:UnbindVnicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryMigrationDependencies(const char *endpoint, const char *soap_action, gnvim2__QueryMigrationDependenciesRequestType *gnvim2__QueryMigrationDependencies, _gnvim2__QueryMigrationDependenciesResponse &gnvim2__QueryMigrationDependenciesResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryMigrationDependencies soap_tmp___gnvim2__QueryMigrationDependencies;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryMigrationDependencies.gnvim2__QueryMigrationDependencies = gnvim2__QueryMigrationDependencies;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryMigrationDependencies(soap, &soap_tmp___gnvim2__QueryMigrationDependencies);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryMigrationDependencies(soap, &soap_tmp___gnvim2__QueryMigrationDependencies, "-gnvim2:QueryMigrationDependencies", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryMigrationDependencies(soap, &soap_tmp___gnvim2__QueryMigrationDependencies, "-gnvim2:QueryMigrationDependencies", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryMigrationDependenciesResponse)
		return soap_closesock(soap);
	gnvim2__QueryMigrationDependenciesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryMigrationDependenciesResponse.soap_get(soap, "gnvim2:QueryMigrationDependenciesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryModules(const char *endpoint, const char *soap_action, gnvim2__QueryModulesRequestType *gnvim2__QueryModules, _gnvim2__QueryModulesResponse &gnvim2__QueryModulesResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryModules soap_tmp___gnvim2__QueryModules;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryModules.gnvim2__QueryModules = gnvim2__QueryModules;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryModules(soap, &soap_tmp___gnvim2__QueryModules);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryModules(soap, &soap_tmp___gnvim2__QueryModules, "-gnvim2:QueryModules", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryModules(soap, &soap_tmp___gnvim2__QueryModules, "-gnvim2:QueryModules", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryModulesResponse)
		return soap_closesock(soap);
	gnvim2__QueryModulesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryModulesResponse.soap_get(soap, "gnvim2:QueryModulesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateModuleOptionString(const char *endpoint, const char *soap_action, gnvim2__UpdateModuleOptionStringRequestType *gnvim2__UpdateModuleOptionString, _gnvim2__UpdateModuleOptionStringResponse &gnvim2__UpdateModuleOptionStringResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateModuleOptionString soap_tmp___gnvim2__UpdateModuleOptionString;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateModuleOptionString.gnvim2__UpdateModuleOptionString = gnvim2__UpdateModuleOptionString;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateModuleOptionString(soap, &soap_tmp___gnvim2__UpdateModuleOptionString);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateModuleOptionString(soap, &soap_tmp___gnvim2__UpdateModuleOptionString, "-gnvim2:UpdateModuleOptionString", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateModuleOptionString(soap, &soap_tmp___gnvim2__UpdateModuleOptionString, "-gnvim2:UpdateModuleOptionString", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateModuleOptionStringResponse)
		return soap_closesock(soap);
	gnvim2__UpdateModuleOptionStringResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateModuleOptionStringResponse.soap_get(soap, "gnvim2:UpdateModuleOptionStringResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryConfiguredModuleOptionString(const char *endpoint, const char *soap_action, gnvim2__QueryConfiguredModuleOptionStringRequestType *gnvim2__QueryConfiguredModuleOptionString, _gnvim2__QueryConfiguredModuleOptionStringResponse &gnvim2__QueryConfiguredModuleOptionStringResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryConfiguredModuleOptionString soap_tmp___gnvim2__QueryConfiguredModuleOptionString;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryConfiguredModuleOptionString.gnvim2__QueryConfiguredModuleOptionString = gnvim2__QueryConfiguredModuleOptionString;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryConfiguredModuleOptionString(soap, &soap_tmp___gnvim2__QueryConfiguredModuleOptionString);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryConfiguredModuleOptionString(soap, &soap_tmp___gnvim2__QueryConfiguredModuleOptionString, "-gnvim2:QueryConfiguredModuleOptionString", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryConfiguredModuleOptionString(soap, &soap_tmp___gnvim2__QueryConfiguredModuleOptionString, "-gnvim2:QueryConfiguredModuleOptionString", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryConfiguredModuleOptionStringResponse)
		return soap_closesock(soap);
	gnvim2__QueryConfiguredModuleOptionStringResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryConfiguredModuleOptionStringResponse.soap_get(soap, "gnvim2:QueryConfiguredModuleOptionStringResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateUser(const char *endpoint, const char *soap_action, gnvim2__CreateUserRequestType *gnvim2__CreateUser, _gnvim2__CreateUserResponse &gnvim2__CreateUserResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateUser soap_tmp___gnvim2__CreateUser;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateUser.gnvim2__CreateUser = gnvim2__CreateUser;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateUser(soap, &soap_tmp___gnvim2__CreateUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateUser(soap, &soap_tmp___gnvim2__CreateUser, "-gnvim2:CreateUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateUser(soap, &soap_tmp___gnvim2__CreateUser, "-gnvim2:CreateUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateUserResponse)
		return soap_closesock(soap);
	gnvim2__CreateUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateUserResponse.soap_get(soap, "gnvim2:CreateUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateUser(const char *endpoint, const char *soap_action, gnvim2__UpdateUserRequestType *gnvim2__UpdateUser, _gnvim2__UpdateUserResponse &gnvim2__UpdateUserResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateUser soap_tmp___gnvim2__UpdateUser;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateUser.gnvim2__UpdateUser = gnvim2__UpdateUser;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateUser(soap, &soap_tmp___gnvim2__UpdateUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateUser(soap, &soap_tmp___gnvim2__UpdateUser, "-gnvim2:UpdateUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateUser(soap, &soap_tmp___gnvim2__UpdateUser, "-gnvim2:UpdateUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateUserResponse)
		return soap_closesock(soap);
	gnvim2__UpdateUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateUserResponse.soap_get(soap, "gnvim2:UpdateUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateGroup(const char *endpoint, const char *soap_action, gnvim2__CreateGroupRequestType *gnvim2__CreateGroup, _gnvim2__CreateGroupResponse &gnvim2__CreateGroupResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateGroup soap_tmp___gnvim2__CreateGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateGroup.gnvim2__CreateGroup = gnvim2__CreateGroup;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateGroup(soap, &soap_tmp___gnvim2__CreateGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateGroup(soap, &soap_tmp___gnvim2__CreateGroup, "-gnvim2:CreateGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateGroup(soap, &soap_tmp___gnvim2__CreateGroup, "-gnvim2:CreateGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateGroupResponse)
		return soap_closesock(soap);
	gnvim2__CreateGroupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateGroupResponse.soap_get(soap, "gnvim2:CreateGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveUser(const char *endpoint, const char *soap_action, gnvim2__RemoveUserRequestType *gnvim2__RemoveUser, _gnvim2__RemoveUserResponse &gnvim2__RemoveUserResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveUser soap_tmp___gnvim2__RemoveUser;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveUser.gnvim2__RemoveUser = gnvim2__RemoveUser;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveUser(soap, &soap_tmp___gnvim2__RemoveUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveUser(soap, &soap_tmp___gnvim2__RemoveUser, "-gnvim2:RemoveUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveUser(soap, &soap_tmp___gnvim2__RemoveUser, "-gnvim2:RemoveUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveUserResponse)
		return soap_closesock(soap);
	gnvim2__RemoveUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveUserResponse.soap_get(soap, "gnvim2:RemoveUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveGroup(const char *endpoint, const char *soap_action, gnvim2__RemoveGroupRequestType *gnvim2__RemoveGroup, _gnvim2__RemoveGroupResponse &gnvim2__RemoveGroupResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveGroup soap_tmp___gnvim2__RemoveGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveGroup.gnvim2__RemoveGroup = gnvim2__RemoveGroup;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveGroup(soap, &soap_tmp___gnvim2__RemoveGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveGroup(soap, &soap_tmp___gnvim2__RemoveGroup, "-gnvim2:RemoveGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveGroup(soap, &soap_tmp___gnvim2__RemoveGroup, "-gnvim2:RemoveGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveGroupResponse)
		return soap_closesock(soap);
	gnvim2__RemoveGroupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveGroupResponse.soap_get(soap, "gnvim2:RemoveGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AssignUserToGroup(const char *endpoint, const char *soap_action, gnvim2__AssignUserToGroupRequestType *gnvim2__AssignUserToGroup, _gnvim2__AssignUserToGroupResponse &gnvim2__AssignUserToGroupResponse)
{	struct soap *soap = this;
	struct __gnvim2__AssignUserToGroup soap_tmp___gnvim2__AssignUserToGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AssignUserToGroup.gnvim2__AssignUserToGroup = gnvim2__AssignUserToGroup;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AssignUserToGroup(soap, &soap_tmp___gnvim2__AssignUserToGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AssignUserToGroup(soap, &soap_tmp___gnvim2__AssignUserToGroup, "-gnvim2:AssignUserToGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AssignUserToGroup(soap, &soap_tmp___gnvim2__AssignUserToGroup, "-gnvim2:AssignUserToGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AssignUserToGroupResponse)
		return soap_closesock(soap);
	gnvim2__AssignUserToGroupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AssignUserToGroupResponse.soap_get(soap, "gnvim2:AssignUserToGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UnassignUserFromGroup(const char *endpoint, const char *soap_action, gnvim2__UnassignUserFromGroupRequestType *gnvim2__UnassignUserFromGroup, _gnvim2__UnassignUserFromGroupResponse &gnvim2__UnassignUserFromGroupResponse)
{	struct soap *soap = this;
	struct __gnvim2__UnassignUserFromGroup soap_tmp___gnvim2__UnassignUserFromGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UnassignUserFromGroup.gnvim2__UnassignUserFromGroup = gnvim2__UnassignUserFromGroup;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UnassignUserFromGroup(soap, &soap_tmp___gnvim2__UnassignUserFromGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UnassignUserFromGroup(soap, &soap_tmp___gnvim2__UnassignUserFromGroup, "-gnvim2:UnassignUserFromGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UnassignUserFromGroup(soap, &soap_tmp___gnvim2__UnassignUserFromGroup, "-gnvim2:UnassignUserFromGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UnassignUserFromGroupResponse)
		return soap_closesock(soap);
	gnvim2__UnassignUserFromGroupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UnassignUserFromGroupResponse.soap_get(soap, "gnvim2:UnassignUserFromGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureServiceConsoleReservation(const char *endpoint, const char *soap_action, gnvim2__ReconfigureServiceConsoleReservationRequestType *gnvim2__ReconfigureServiceConsoleReservation, _gnvim2__ReconfigureServiceConsoleReservationResponse &gnvim2__ReconfigureServiceConsoleReservationResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReconfigureServiceConsoleReservation soap_tmp___gnvim2__ReconfigureServiceConsoleReservation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReconfigureServiceConsoleReservation.gnvim2__ReconfigureServiceConsoleReservation = gnvim2__ReconfigureServiceConsoleReservation;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReconfigureServiceConsoleReservation(soap, &soap_tmp___gnvim2__ReconfigureServiceConsoleReservation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReconfigureServiceConsoleReservation(soap, &soap_tmp___gnvim2__ReconfigureServiceConsoleReservation, "-gnvim2:ReconfigureServiceConsoleReservation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReconfigureServiceConsoleReservation(soap, &soap_tmp___gnvim2__ReconfigureServiceConsoleReservation, "-gnvim2:ReconfigureServiceConsoleReservation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReconfigureServiceConsoleReservationResponse)
		return soap_closesock(soap);
	gnvim2__ReconfigureServiceConsoleReservationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReconfigureServiceConsoleReservationResponse.soap_get(soap, "gnvim2:ReconfigureServiceConsoleReservationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureVirtualMachineReservation(const char *endpoint, const char *soap_action, gnvim2__ReconfigureVirtualMachineReservationRequestType *gnvim2__ReconfigureVirtualMachineReservation, _gnvim2__ReconfigureVirtualMachineReservationResponse &gnvim2__ReconfigureVirtualMachineReservationResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReconfigureVirtualMachineReservation soap_tmp___gnvim2__ReconfigureVirtualMachineReservation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReconfigureVirtualMachineReservation.gnvim2__ReconfigureVirtualMachineReservation = gnvim2__ReconfigureVirtualMachineReservation;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReconfigureVirtualMachineReservation(soap, &soap_tmp___gnvim2__ReconfigureVirtualMachineReservation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReconfigureVirtualMachineReservation(soap, &soap_tmp___gnvim2__ReconfigureVirtualMachineReservation, "-gnvim2:ReconfigureVirtualMachineReservation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReconfigureVirtualMachineReservation(soap, &soap_tmp___gnvim2__ReconfigureVirtualMachineReservation, "-gnvim2:ReconfigureVirtualMachineReservation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReconfigureVirtualMachineReservationResponse)
		return soap_closesock(soap);
	gnvim2__ReconfigureVirtualMachineReservationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReconfigureVirtualMachineReservationResponse.soap_get(soap, "gnvim2:ReconfigureVirtualMachineReservationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateNetworkConfig(const char *endpoint, const char *soap_action, gnvim2__UpdateNetworkConfigRequestType *gnvim2__UpdateNetworkConfig, _gnvim2__UpdateNetworkConfigResponse &gnvim2__UpdateNetworkConfigResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateNetworkConfig soap_tmp___gnvim2__UpdateNetworkConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateNetworkConfig.gnvim2__UpdateNetworkConfig = gnvim2__UpdateNetworkConfig;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateNetworkConfig(soap, &soap_tmp___gnvim2__UpdateNetworkConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateNetworkConfig(soap, &soap_tmp___gnvim2__UpdateNetworkConfig, "-gnvim2:UpdateNetworkConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateNetworkConfig(soap, &soap_tmp___gnvim2__UpdateNetworkConfig, "-gnvim2:UpdateNetworkConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateNetworkConfigResponse)
		return soap_closesock(soap);
	gnvim2__UpdateNetworkConfigResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateNetworkConfigResponse.soap_get(soap, "gnvim2:UpdateNetworkConfigResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateDnsConfig(const char *endpoint, const char *soap_action, gnvim2__UpdateDnsConfigRequestType *gnvim2__UpdateDnsConfig, _gnvim2__UpdateDnsConfigResponse &gnvim2__UpdateDnsConfigResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateDnsConfig soap_tmp___gnvim2__UpdateDnsConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateDnsConfig.gnvim2__UpdateDnsConfig = gnvim2__UpdateDnsConfig;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateDnsConfig(soap, &soap_tmp___gnvim2__UpdateDnsConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateDnsConfig(soap, &soap_tmp___gnvim2__UpdateDnsConfig, "-gnvim2:UpdateDnsConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateDnsConfig(soap, &soap_tmp___gnvim2__UpdateDnsConfig, "-gnvim2:UpdateDnsConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateDnsConfigResponse)
		return soap_closesock(soap);
	gnvim2__UpdateDnsConfigResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateDnsConfigResponse.soap_get(soap, "gnvim2:UpdateDnsConfigResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateIpRouteConfig(const char *endpoint, const char *soap_action, gnvim2__UpdateIpRouteConfigRequestType *gnvim2__UpdateIpRouteConfig, _gnvim2__UpdateIpRouteConfigResponse &gnvim2__UpdateIpRouteConfigResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateIpRouteConfig soap_tmp___gnvim2__UpdateIpRouteConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateIpRouteConfig.gnvim2__UpdateIpRouteConfig = gnvim2__UpdateIpRouteConfig;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateIpRouteConfig(soap, &soap_tmp___gnvim2__UpdateIpRouteConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateIpRouteConfig(soap, &soap_tmp___gnvim2__UpdateIpRouteConfig, "-gnvim2:UpdateIpRouteConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateIpRouteConfig(soap, &soap_tmp___gnvim2__UpdateIpRouteConfig, "-gnvim2:UpdateIpRouteConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateIpRouteConfigResponse)
		return soap_closesock(soap);
	gnvim2__UpdateIpRouteConfigResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateIpRouteConfigResponse.soap_get(soap, "gnvim2:UpdateIpRouteConfigResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateConsoleIpRouteConfig(const char *endpoint, const char *soap_action, gnvim2__UpdateConsoleIpRouteConfigRequestType *gnvim2__UpdateConsoleIpRouteConfig, _gnvim2__UpdateConsoleIpRouteConfigResponse &gnvim2__UpdateConsoleIpRouteConfigResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateConsoleIpRouteConfig soap_tmp___gnvim2__UpdateConsoleIpRouteConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateConsoleIpRouteConfig.gnvim2__UpdateConsoleIpRouteConfig = gnvim2__UpdateConsoleIpRouteConfig;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateConsoleIpRouteConfig(soap, &soap_tmp___gnvim2__UpdateConsoleIpRouteConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateConsoleIpRouteConfig(soap, &soap_tmp___gnvim2__UpdateConsoleIpRouteConfig, "-gnvim2:UpdateConsoleIpRouteConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateConsoleIpRouteConfig(soap, &soap_tmp___gnvim2__UpdateConsoleIpRouteConfig, "-gnvim2:UpdateConsoleIpRouteConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateConsoleIpRouteConfigResponse)
		return soap_closesock(soap);
	gnvim2__UpdateConsoleIpRouteConfigResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateConsoleIpRouteConfigResponse.soap_get(soap, "gnvim2:UpdateConsoleIpRouteConfigResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateIpRouteTableConfig(const char *endpoint, const char *soap_action, gnvim2__UpdateIpRouteTableConfigRequestType *gnvim2__UpdateIpRouteTableConfig, _gnvim2__UpdateIpRouteTableConfigResponse &gnvim2__UpdateIpRouteTableConfigResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateIpRouteTableConfig soap_tmp___gnvim2__UpdateIpRouteTableConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateIpRouteTableConfig.gnvim2__UpdateIpRouteTableConfig = gnvim2__UpdateIpRouteTableConfig;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateIpRouteTableConfig(soap, &soap_tmp___gnvim2__UpdateIpRouteTableConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateIpRouteTableConfig(soap, &soap_tmp___gnvim2__UpdateIpRouteTableConfig, "-gnvim2:UpdateIpRouteTableConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateIpRouteTableConfig(soap, &soap_tmp___gnvim2__UpdateIpRouteTableConfig, "-gnvim2:UpdateIpRouteTableConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateIpRouteTableConfigResponse)
		return soap_closesock(soap);
	gnvim2__UpdateIpRouteTableConfigResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateIpRouteTableConfigResponse.soap_get(soap, "gnvim2:UpdateIpRouteTableConfigResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddVirtualSwitch(const char *endpoint, const char *soap_action, gnvim2__AddVirtualSwitchRequestType *gnvim2__AddVirtualSwitch, _gnvim2__AddVirtualSwitchResponse &gnvim2__AddVirtualSwitchResponse)
{	struct soap *soap = this;
	struct __gnvim2__AddVirtualSwitch soap_tmp___gnvim2__AddVirtualSwitch;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AddVirtualSwitch.gnvim2__AddVirtualSwitch = gnvim2__AddVirtualSwitch;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AddVirtualSwitch(soap, &soap_tmp___gnvim2__AddVirtualSwitch);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AddVirtualSwitch(soap, &soap_tmp___gnvim2__AddVirtualSwitch, "-gnvim2:AddVirtualSwitch", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AddVirtualSwitch(soap, &soap_tmp___gnvim2__AddVirtualSwitch, "-gnvim2:AddVirtualSwitch", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AddVirtualSwitchResponse)
		return soap_closesock(soap);
	gnvim2__AddVirtualSwitchResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AddVirtualSwitchResponse.soap_get(soap, "gnvim2:AddVirtualSwitchResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveVirtualSwitch(const char *endpoint, const char *soap_action, gnvim2__RemoveVirtualSwitchRequestType *gnvim2__RemoveVirtualSwitch, _gnvim2__RemoveVirtualSwitchResponse &gnvim2__RemoveVirtualSwitchResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveVirtualSwitch soap_tmp___gnvim2__RemoveVirtualSwitch;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveVirtualSwitch.gnvim2__RemoveVirtualSwitch = gnvim2__RemoveVirtualSwitch;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveVirtualSwitch(soap, &soap_tmp___gnvim2__RemoveVirtualSwitch);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveVirtualSwitch(soap, &soap_tmp___gnvim2__RemoveVirtualSwitch, "-gnvim2:RemoveVirtualSwitch", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveVirtualSwitch(soap, &soap_tmp___gnvim2__RemoveVirtualSwitch, "-gnvim2:RemoveVirtualSwitch", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveVirtualSwitchResponse)
		return soap_closesock(soap);
	gnvim2__RemoveVirtualSwitchResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveVirtualSwitchResponse.soap_get(soap, "gnvim2:RemoveVirtualSwitchResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateVirtualSwitch(const char *endpoint, const char *soap_action, gnvim2__UpdateVirtualSwitchRequestType *gnvim2__UpdateVirtualSwitch, _gnvim2__UpdateVirtualSwitchResponse &gnvim2__UpdateVirtualSwitchResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateVirtualSwitch soap_tmp___gnvim2__UpdateVirtualSwitch;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateVirtualSwitch.gnvim2__UpdateVirtualSwitch = gnvim2__UpdateVirtualSwitch;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateVirtualSwitch(soap, &soap_tmp___gnvim2__UpdateVirtualSwitch);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateVirtualSwitch(soap, &soap_tmp___gnvim2__UpdateVirtualSwitch, "-gnvim2:UpdateVirtualSwitch", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateVirtualSwitch(soap, &soap_tmp___gnvim2__UpdateVirtualSwitch, "-gnvim2:UpdateVirtualSwitch", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateVirtualSwitchResponse)
		return soap_closesock(soap);
	gnvim2__UpdateVirtualSwitchResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateVirtualSwitchResponse.soap_get(soap, "gnvim2:UpdateVirtualSwitchResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddPortGroup(const char *endpoint, const char *soap_action, gnvim2__AddPortGroupRequestType *gnvim2__AddPortGroup, _gnvim2__AddPortGroupResponse &gnvim2__AddPortGroupResponse)
{	struct soap *soap = this;
	struct __gnvim2__AddPortGroup soap_tmp___gnvim2__AddPortGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AddPortGroup.gnvim2__AddPortGroup = gnvim2__AddPortGroup;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AddPortGroup(soap, &soap_tmp___gnvim2__AddPortGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AddPortGroup(soap, &soap_tmp___gnvim2__AddPortGroup, "-gnvim2:AddPortGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AddPortGroup(soap, &soap_tmp___gnvim2__AddPortGroup, "-gnvim2:AddPortGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AddPortGroupResponse)
		return soap_closesock(soap);
	gnvim2__AddPortGroupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AddPortGroupResponse.soap_get(soap, "gnvim2:AddPortGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemovePortGroup(const char *endpoint, const char *soap_action, gnvim2__RemovePortGroupRequestType *gnvim2__RemovePortGroup, _gnvim2__RemovePortGroupResponse &gnvim2__RemovePortGroupResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemovePortGroup soap_tmp___gnvim2__RemovePortGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemovePortGroup.gnvim2__RemovePortGroup = gnvim2__RemovePortGroup;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemovePortGroup(soap, &soap_tmp___gnvim2__RemovePortGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemovePortGroup(soap, &soap_tmp___gnvim2__RemovePortGroup, "-gnvim2:RemovePortGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemovePortGroup(soap, &soap_tmp___gnvim2__RemovePortGroup, "-gnvim2:RemovePortGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemovePortGroupResponse)
		return soap_closesock(soap);
	gnvim2__RemovePortGroupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemovePortGroupResponse.soap_get(soap, "gnvim2:RemovePortGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdatePortGroup(const char *endpoint, const char *soap_action, gnvim2__UpdatePortGroupRequestType *gnvim2__UpdatePortGroup, _gnvim2__UpdatePortGroupResponse &gnvim2__UpdatePortGroupResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdatePortGroup soap_tmp___gnvim2__UpdatePortGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdatePortGroup.gnvim2__UpdatePortGroup = gnvim2__UpdatePortGroup;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdatePortGroup(soap, &soap_tmp___gnvim2__UpdatePortGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdatePortGroup(soap, &soap_tmp___gnvim2__UpdatePortGroup, "-gnvim2:UpdatePortGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdatePortGroup(soap, &soap_tmp___gnvim2__UpdatePortGroup, "-gnvim2:UpdatePortGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdatePortGroupResponse)
		return soap_closesock(soap);
	gnvim2__UpdatePortGroupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdatePortGroupResponse.soap_get(soap, "gnvim2:UpdatePortGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdatePhysicalNicLinkSpeed(const char *endpoint, const char *soap_action, gnvim2__UpdatePhysicalNicLinkSpeedRequestType *gnvim2__UpdatePhysicalNicLinkSpeed, _gnvim2__UpdatePhysicalNicLinkSpeedResponse &gnvim2__UpdatePhysicalNicLinkSpeedResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdatePhysicalNicLinkSpeed soap_tmp___gnvim2__UpdatePhysicalNicLinkSpeed;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdatePhysicalNicLinkSpeed.gnvim2__UpdatePhysicalNicLinkSpeed = gnvim2__UpdatePhysicalNicLinkSpeed;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdatePhysicalNicLinkSpeed(soap, &soap_tmp___gnvim2__UpdatePhysicalNicLinkSpeed);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdatePhysicalNicLinkSpeed(soap, &soap_tmp___gnvim2__UpdatePhysicalNicLinkSpeed, "-gnvim2:UpdatePhysicalNicLinkSpeed", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdatePhysicalNicLinkSpeed(soap, &soap_tmp___gnvim2__UpdatePhysicalNicLinkSpeed, "-gnvim2:UpdatePhysicalNicLinkSpeed", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdatePhysicalNicLinkSpeedResponse)
		return soap_closesock(soap);
	gnvim2__UpdatePhysicalNicLinkSpeedResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdatePhysicalNicLinkSpeedResponse.soap_get(soap, "gnvim2:UpdatePhysicalNicLinkSpeedResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryNetworkHint(const char *endpoint, const char *soap_action, gnvim2__QueryNetworkHintRequestType *gnvim2__QueryNetworkHint, _gnvim2__QueryNetworkHintResponse &gnvim2__QueryNetworkHintResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryNetworkHint soap_tmp___gnvim2__QueryNetworkHint;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryNetworkHint.gnvim2__QueryNetworkHint = gnvim2__QueryNetworkHint;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryNetworkHint(soap, &soap_tmp___gnvim2__QueryNetworkHint);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryNetworkHint(soap, &soap_tmp___gnvim2__QueryNetworkHint, "-gnvim2:QueryNetworkHint", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryNetworkHint(soap, &soap_tmp___gnvim2__QueryNetworkHint, "-gnvim2:QueryNetworkHint", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryNetworkHintResponse)
		return soap_closesock(soap);
	gnvim2__QueryNetworkHintResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryNetworkHintResponse.soap_get(soap, "gnvim2:QueryNetworkHintResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddVirtualNic(const char *endpoint, const char *soap_action, gnvim2__AddVirtualNicRequestType *gnvim2__AddVirtualNic, _gnvim2__AddVirtualNicResponse &gnvim2__AddVirtualNicResponse)
{	struct soap *soap = this;
	struct __gnvim2__AddVirtualNic soap_tmp___gnvim2__AddVirtualNic;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AddVirtualNic.gnvim2__AddVirtualNic = gnvim2__AddVirtualNic;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AddVirtualNic(soap, &soap_tmp___gnvim2__AddVirtualNic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AddVirtualNic(soap, &soap_tmp___gnvim2__AddVirtualNic, "-gnvim2:AddVirtualNic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AddVirtualNic(soap, &soap_tmp___gnvim2__AddVirtualNic, "-gnvim2:AddVirtualNic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AddVirtualNicResponse)
		return soap_closesock(soap);
	gnvim2__AddVirtualNicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AddVirtualNicResponse.soap_get(soap, "gnvim2:AddVirtualNicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveVirtualNic(const char *endpoint, const char *soap_action, gnvim2__RemoveVirtualNicRequestType *gnvim2__RemoveVirtualNic, _gnvim2__RemoveVirtualNicResponse &gnvim2__RemoveVirtualNicResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveVirtualNic soap_tmp___gnvim2__RemoveVirtualNic;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveVirtualNic.gnvim2__RemoveVirtualNic = gnvim2__RemoveVirtualNic;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveVirtualNic(soap, &soap_tmp___gnvim2__RemoveVirtualNic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveVirtualNic(soap, &soap_tmp___gnvim2__RemoveVirtualNic, "-gnvim2:RemoveVirtualNic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveVirtualNic(soap, &soap_tmp___gnvim2__RemoveVirtualNic, "-gnvim2:RemoveVirtualNic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveVirtualNicResponse)
		return soap_closesock(soap);
	gnvim2__RemoveVirtualNicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveVirtualNicResponse.soap_get(soap, "gnvim2:RemoveVirtualNicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateVirtualNic(const char *endpoint, const char *soap_action, gnvim2__UpdateVirtualNicRequestType *gnvim2__UpdateVirtualNic, _gnvim2__UpdateVirtualNicResponse &gnvim2__UpdateVirtualNicResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateVirtualNic soap_tmp___gnvim2__UpdateVirtualNic;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateVirtualNic.gnvim2__UpdateVirtualNic = gnvim2__UpdateVirtualNic;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateVirtualNic(soap, &soap_tmp___gnvim2__UpdateVirtualNic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateVirtualNic(soap, &soap_tmp___gnvim2__UpdateVirtualNic, "-gnvim2:UpdateVirtualNic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateVirtualNic(soap, &soap_tmp___gnvim2__UpdateVirtualNic, "-gnvim2:UpdateVirtualNic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateVirtualNicResponse)
		return soap_closesock(soap);
	gnvim2__UpdateVirtualNicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateVirtualNicResponse.soap_get(soap, "gnvim2:UpdateVirtualNicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddServiceConsoleVirtualNic(const char *endpoint, const char *soap_action, gnvim2__AddServiceConsoleVirtualNicRequestType *gnvim2__AddServiceConsoleVirtualNic, _gnvim2__AddServiceConsoleVirtualNicResponse &gnvim2__AddServiceConsoleVirtualNicResponse)
{	struct soap *soap = this;
	struct __gnvim2__AddServiceConsoleVirtualNic soap_tmp___gnvim2__AddServiceConsoleVirtualNic;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AddServiceConsoleVirtualNic.gnvim2__AddServiceConsoleVirtualNic = gnvim2__AddServiceConsoleVirtualNic;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AddServiceConsoleVirtualNic(soap, &soap_tmp___gnvim2__AddServiceConsoleVirtualNic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AddServiceConsoleVirtualNic(soap, &soap_tmp___gnvim2__AddServiceConsoleVirtualNic, "-gnvim2:AddServiceConsoleVirtualNic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AddServiceConsoleVirtualNic(soap, &soap_tmp___gnvim2__AddServiceConsoleVirtualNic, "-gnvim2:AddServiceConsoleVirtualNic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AddServiceConsoleVirtualNicResponse)
		return soap_closesock(soap);
	gnvim2__AddServiceConsoleVirtualNicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AddServiceConsoleVirtualNicResponse.soap_get(soap, "gnvim2:AddServiceConsoleVirtualNicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveServiceConsoleVirtualNic(const char *endpoint, const char *soap_action, gnvim2__RemoveServiceConsoleVirtualNicRequestType *gnvim2__RemoveServiceConsoleVirtualNic, _gnvim2__RemoveServiceConsoleVirtualNicResponse &gnvim2__RemoveServiceConsoleVirtualNicResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveServiceConsoleVirtualNic soap_tmp___gnvim2__RemoveServiceConsoleVirtualNic;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveServiceConsoleVirtualNic.gnvim2__RemoveServiceConsoleVirtualNic = gnvim2__RemoveServiceConsoleVirtualNic;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveServiceConsoleVirtualNic(soap, &soap_tmp___gnvim2__RemoveServiceConsoleVirtualNic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveServiceConsoleVirtualNic(soap, &soap_tmp___gnvim2__RemoveServiceConsoleVirtualNic, "-gnvim2:RemoveServiceConsoleVirtualNic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveServiceConsoleVirtualNic(soap, &soap_tmp___gnvim2__RemoveServiceConsoleVirtualNic, "-gnvim2:RemoveServiceConsoleVirtualNic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveServiceConsoleVirtualNicResponse)
		return soap_closesock(soap);
	gnvim2__RemoveServiceConsoleVirtualNicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveServiceConsoleVirtualNicResponse.soap_get(soap, "gnvim2:RemoveServiceConsoleVirtualNicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateServiceConsoleVirtualNic(const char *endpoint, const char *soap_action, gnvim2__UpdateServiceConsoleVirtualNicRequestType *gnvim2__UpdateServiceConsoleVirtualNic, _gnvim2__UpdateServiceConsoleVirtualNicResponse &gnvim2__UpdateServiceConsoleVirtualNicResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateServiceConsoleVirtualNic soap_tmp___gnvim2__UpdateServiceConsoleVirtualNic;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateServiceConsoleVirtualNic.gnvim2__UpdateServiceConsoleVirtualNic = gnvim2__UpdateServiceConsoleVirtualNic;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateServiceConsoleVirtualNic(soap, &soap_tmp___gnvim2__UpdateServiceConsoleVirtualNic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateServiceConsoleVirtualNic(soap, &soap_tmp___gnvim2__UpdateServiceConsoleVirtualNic, "-gnvim2:UpdateServiceConsoleVirtualNic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateServiceConsoleVirtualNic(soap, &soap_tmp___gnvim2__UpdateServiceConsoleVirtualNic, "-gnvim2:UpdateServiceConsoleVirtualNic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateServiceConsoleVirtualNicResponse)
		return soap_closesock(soap);
	gnvim2__UpdateServiceConsoleVirtualNicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateServiceConsoleVirtualNicResponse.soap_get(soap, "gnvim2:UpdateServiceConsoleVirtualNicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RestartServiceConsoleVirtualNic(const char *endpoint, const char *soap_action, gnvim2__RestartServiceConsoleVirtualNicRequestType *gnvim2__RestartServiceConsoleVirtualNic, _gnvim2__RestartServiceConsoleVirtualNicResponse &gnvim2__RestartServiceConsoleVirtualNicResponse)
{	struct soap *soap = this;
	struct __gnvim2__RestartServiceConsoleVirtualNic soap_tmp___gnvim2__RestartServiceConsoleVirtualNic;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RestartServiceConsoleVirtualNic.gnvim2__RestartServiceConsoleVirtualNic = gnvim2__RestartServiceConsoleVirtualNic;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RestartServiceConsoleVirtualNic(soap, &soap_tmp___gnvim2__RestartServiceConsoleVirtualNic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RestartServiceConsoleVirtualNic(soap, &soap_tmp___gnvim2__RestartServiceConsoleVirtualNic, "-gnvim2:RestartServiceConsoleVirtualNic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RestartServiceConsoleVirtualNic(soap, &soap_tmp___gnvim2__RestartServiceConsoleVirtualNic, "-gnvim2:RestartServiceConsoleVirtualNic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RestartServiceConsoleVirtualNicResponse)
		return soap_closesock(soap);
	gnvim2__RestartServiceConsoleVirtualNicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RestartServiceConsoleVirtualNicResponse.soap_get(soap, "gnvim2:RestartServiceConsoleVirtualNicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshNetworkSystem(const char *endpoint, const char *soap_action, gnvim2__RefreshNetworkSystemRequestType *gnvim2__RefreshNetworkSystem, _gnvim2__RefreshNetworkSystemResponse &gnvim2__RefreshNetworkSystemResponse)
{	struct soap *soap = this;
	struct __gnvim2__RefreshNetworkSystem soap_tmp___gnvim2__RefreshNetworkSystem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RefreshNetworkSystem.gnvim2__RefreshNetworkSystem = gnvim2__RefreshNetworkSystem;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RefreshNetworkSystem(soap, &soap_tmp___gnvim2__RefreshNetworkSystem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RefreshNetworkSystem(soap, &soap_tmp___gnvim2__RefreshNetworkSystem, "-gnvim2:RefreshNetworkSystem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RefreshNetworkSystem(soap, &soap_tmp___gnvim2__RefreshNetworkSystem, "-gnvim2:RefreshNetworkSystem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RefreshNetworkSystemResponse)
		return soap_closesock(soap);
	gnvim2__RefreshNetworkSystemResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RefreshNetworkSystemResponse.soap_get(soap, "gnvim2:RefreshNetworkSystemResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CheckHostPatch_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CheckHostPatchRequestType *gnvim2__CheckHostPatch_USCORETask, _gnvim2__CheckHostPatch_USCORETaskResponse &gnvim2__CheckHostPatch_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CheckHostPatch_USCORETask soap_tmp___gnvim2__CheckHostPatch_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CheckHostPatch_USCORETask.gnvim2__CheckHostPatch_USCORETask = gnvim2__CheckHostPatch_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CheckHostPatch_USCORETask(soap, &soap_tmp___gnvim2__CheckHostPatch_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CheckHostPatch_USCORETask(soap, &soap_tmp___gnvim2__CheckHostPatch_USCORETask, "-gnvim2:CheckHostPatch_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CheckHostPatch_USCORETask(soap, &soap_tmp___gnvim2__CheckHostPatch_USCORETask, "-gnvim2:CheckHostPatch_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CheckHostPatch_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CheckHostPatch_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CheckHostPatch_USCORETaskResponse.soap_get(soap, "gnvim2:CheckHostPatch_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ScanHostPatch_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ScanHostPatchRequestType *gnvim2__ScanHostPatch_USCORETask, _gnvim2__ScanHostPatch_USCORETaskResponse &gnvim2__ScanHostPatch_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ScanHostPatch_USCORETask soap_tmp___gnvim2__ScanHostPatch_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ScanHostPatch_USCORETask.gnvim2__ScanHostPatch_USCORETask = gnvim2__ScanHostPatch_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ScanHostPatch_USCORETask(soap, &soap_tmp___gnvim2__ScanHostPatch_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ScanHostPatch_USCORETask(soap, &soap_tmp___gnvim2__ScanHostPatch_USCORETask, "-gnvim2:ScanHostPatch_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ScanHostPatch_USCORETask(soap, &soap_tmp___gnvim2__ScanHostPatch_USCORETask, "-gnvim2:ScanHostPatch_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ScanHostPatch_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ScanHostPatch_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ScanHostPatch_USCORETaskResponse.soap_get(soap, "gnvim2:ScanHostPatch_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ScanHostPatchV2_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ScanHostPatchV2RequestType *gnvim2__ScanHostPatchV2_USCORETask, _gnvim2__ScanHostPatchV2_USCORETaskResponse &gnvim2__ScanHostPatchV2_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ScanHostPatchV2_USCORETask soap_tmp___gnvim2__ScanHostPatchV2_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ScanHostPatchV2_USCORETask.gnvim2__ScanHostPatchV2_USCORETask = gnvim2__ScanHostPatchV2_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ScanHostPatchV2_USCORETask(soap, &soap_tmp___gnvim2__ScanHostPatchV2_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ScanHostPatchV2_USCORETask(soap, &soap_tmp___gnvim2__ScanHostPatchV2_USCORETask, "-gnvim2:ScanHostPatchV2_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ScanHostPatchV2_USCORETask(soap, &soap_tmp___gnvim2__ScanHostPatchV2_USCORETask, "-gnvim2:ScanHostPatchV2_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ScanHostPatchV2_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ScanHostPatchV2_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ScanHostPatchV2_USCORETaskResponse.soap_get(soap, "gnvim2:ScanHostPatchV2_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::StageHostPatch_USCORETask(const char *endpoint, const char *soap_action, gnvim2__StageHostPatchRequestType *gnvim2__StageHostPatch_USCORETask, _gnvim2__StageHostPatch_USCORETaskResponse &gnvim2__StageHostPatch_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__StageHostPatch_USCORETask soap_tmp___gnvim2__StageHostPatch_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__StageHostPatch_USCORETask.gnvim2__StageHostPatch_USCORETask = gnvim2__StageHostPatch_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__StageHostPatch_USCORETask(soap, &soap_tmp___gnvim2__StageHostPatch_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__StageHostPatch_USCORETask(soap, &soap_tmp___gnvim2__StageHostPatch_USCORETask, "-gnvim2:StageHostPatch_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__StageHostPatch_USCORETask(soap, &soap_tmp___gnvim2__StageHostPatch_USCORETask, "-gnvim2:StageHostPatch_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__StageHostPatch_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__StageHostPatch_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__StageHostPatch_USCORETaskResponse.soap_get(soap, "gnvim2:StageHostPatch_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::InstallHostPatch_USCORETask(const char *endpoint, const char *soap_action, gnvim2__InstallHostPatchRequestType *gnvim2__InstallHostPatch_USCORETask, _gnvim2__InstallHostPatch_USCORETaskResponse &gnvim2__InstallHostPatch_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__InstallHostPatch_USCORETask soap_tmp___gnvim2__InstallHostPatch_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__InstallHostPatch_USCORETask.gnvim2__InstallHostPatch_USCORETask = gnvim2__InstallHostPatch_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__InstallHostPatch_USCORETask(soap, &soap_tmp___gnvim2__InstallHostPatch_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__InstallHostPatch_USCORETask(soap, &soap_tmp___gnvim2__InstallHostPatch_USCORETask, "-gnvim2:InstallHostPatch_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__InstallHostPatch_USCORETask(soap, &soap_tmp___gnvim2__InstallHostPatch_USCORETask, "-gnvim2:InstallHostPatch_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__InstallHostPatch_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__InstallHostPatch_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__InstallHostPatch_USCORETaskResponse.soap_get(soap, "gnvim2:InstallHostPatch_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::InstallHostPatchV2_USCORETask(const char *endpoint, const char *soap_action, gnvim2__InstallHostPatchV2RequestType *gnvim2__InstallHostPatchV2_USCORETask, _gnvim2__InstallHostPatchV2_USCORETaskResponse &gnvim2__InstallHostPatchV2_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__InstallHostPatchV2_USCORETask soap_tmp___gnvim2__InstallHostPatchV2_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__InstallHostPatchV2_USCORETask.gnvim2__InstallHostPatchV2_USCORETask = gnvim2__InstallHostPatchV2_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__InstallHostPatchV2_USCORETask(soap, &soap_tmp___gnvim2__InstallHostPatchV2_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__InstallHostPatchV2_USCORETask(soap, &soap_tmp___gnvim2__InstallHostPatchV2_USCORETask, "-gnvim2:InstallHostPatchV2_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__InstallHostPatchV2_USCORETask(soap, &soap_tmp___gnvim2__InstallHostPatchV2_USCORETask, "-gnvim2:InstallHostPatchV2_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__InstallHostPatchV2_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__InstallHostPatchV2_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__InstallHostPatchV2_USCORETaskResponse.soap_get(soap, "gnvim2:InstallHostPatchV2_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UninstallHostPatch_USCORETask(const char *endpoint, const char *soap_action, gnvim2__UninstallHostPatchRequestType *gnvim2__UninstallHostPatch_USCORETask, _gnvim2__UninstallHostPatch_USCORETaskResponse &gnvim2__UninstallHostPatch_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__UninstallHostPatch_USCORETask soap_tmp___gnvim2__UninstallHostPatch_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UninstallHostPatch_USCORETask.gnvim2__UninstallHostPatch_USCORETask = gnvim2__UninstallHostPatch_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UninstallHostPatch_USCORETask(soap, &soap_tmp___gnvim2__UninstallHostPatch_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UninstallHostPatch_USCORETask(soap, &soap_tmp___gnvim2__UninstallHostPatch_USCORETask, "-gnvim2:UninstallHostPatch_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UninstallHostPatch_USCORETask(soap, &soap_tmp___gnvim2__UninstallHostPatch_USCORETask, "-gnvim2:UninstallHostPatch_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UninstallHostPatch_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__UninstallHostPatch_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UninstallHostPatch_USCORETaskResponse.soap_get(soap, "gnvim2:UninstallHostPatch_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryHostPatch_USCORETask(const char *endpoint, const char *soap_action, gnvim2__QueryHostPatchRequestType *gnvim2__QueryHostPatch_USCORETask, _gnvim2__QueryHostPatch_USCORETaskResponse &gnvim2__QueryHostPatch_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryHostPatch_USCORETask soap_tmp___gnvim2__QueryHostPatch_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryHostPatch_USCORETask.gnvim2__QueryHostPatch_USCORETask = gnvim2__QueryHostPatch_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryHostPatch_USCORETask(soap, &soap_tmp___gnvim2__QueryHostPatch_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryHostPatch_USCORETask(soap, &soap_tmp___gnvim2__QueryHostPatch_USCORETask, "-gnvim2:QueryHostPatch_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryHostPatch_USCORETask(soap, &soap_tmp___gnvim2__QueryHostPatch_USCORETask, "-gnvim2:QueryHostPatch_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryHostPatch_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__QueryHostPatch_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryHostPatch_USCORETaskResponse.soap_get(soap, "gnvim2:QueryHostPatch_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::Refresh(const char *endpoint, const char *soap_action, gnvim2__RefreshRequestType *gnvim2__Refresh, _gnvim2__RefreshResponse &gnvim2__RefreshResponse)
{	struct soap *soap = this;
	struct __gnvim2__Refresh soap_tmp___gnvim2__Refresh;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__Refresh.gnvim2__Refresh = gnvim2__Refresh;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__Refresh(soap, &soap_tmp___gnvim2__Refresh);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__Refresh(soap, &soap_tmp___gnvim2__Refresh, "-gnvim2:Refresh", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__Refresh(soap, &soap_tmp___gnvim2__Refresh, "-gnvim2:Refresh", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RefreshResponse)
		return soap_closesock(soap);
	gnvim2__RefreshResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RefreshResponse.soap_get(soap, "gnvim2:RefreshResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdatePassthruConfig(const char *endpoint, const char *soap_action, gnvim2__UpdatePassthruConfigRequestType *gnvim2__UpdatePassthruConfig, _gnvim2__UpdatePassthruConfigResponse &gnvim2__UpdatePassthruConfigResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdatePassthruConfig soap_tmp___gnvim2__UpdatePassthruConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdatePassthruConfig.gnvim2__UpdatePassthruConfig = gnvim2__UpdatePassthruConfig;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdatePassthruConfig(soap, &soap_tmp___gnvim2__UpdatePassthruConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdatePassthruConfig(soap, &soap_tmp___gnvim2__UpdatePassthruConfig, "-gnvim2:UpdatePassthruConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdatePassthruConfig(soap, &soap_tmp___gnvim2__UpdatePassthruConfig, "-gnvim2:UpdatePassthruConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdatePassthruConfigResponse)
		return soap_closesock(soap);
	gnvim2__UpdatePassthruConfigResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdatePassthruConfigResponse.soap_get(soap, "gnvim2:UpdatePassthruConfigResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ConfigurePowerPolicy(const char *endpoint, const char *soap_action, gnvim2__ConfigurePowerPolicyRequestType *gnvim2__ConfigurePowerPolicy, _gnvim2__ConfigurePowerPolicyResponse &gnvim2__ConfigurePowerPolicyResponse)
{	struct soap *soap = this;
	struct __gnvim2__ConfigurePowerPolicy soap_tmp___gnvim2__ConfigurePowerPolicy;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ConfigurePowerPolicy.gnvim2__ConfigurePowerPolicy = gnvim2__ConfigurePowerPolicy;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ConfigurePowerPolicy(soap, &soap_tmp___gnvim2__ConfigurePowerPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ConfigurePowerPolicy(soap, &soap_tmp___gnvim2__ConfigurePowerPolicy, "-gnvim2:ConfigurePowerPolicy", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ConfigurePowerPolicy(soap, &soap_tmp___gnvim2__ConfigurePowerPolicy, "-gnvim2:ConfigurePowerPolicy", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ConfigurePowerPolicyResponse)
		return soap_closesock(soap);
	gnvim2__ConfigurePowerPolicyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ConfigurePowerPolicyResponse.soap_get(soap, "gnvim2:ConfigurePowerPolicyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateServicePolicy(const char *endpoint, const char *soap_action, gnvim2__UpdateServicePolicyRequestType *gnvim2__UpdateServicePolicy, _gnvim2__UpdateServicePolicyResponse &gnvim2__UpdateServicePolicyResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateServicePolicy soap_tmp___gnvim2__UpdateServicePolicy;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateServicePolicy.gnvim2__UpdateServicePolicy = gnvim2__UpdateServicePolicy;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateServicePolicy(soap, &soap_tmp___gnvim2__UpdateServicePolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateServicePolicy(soap, &soap_tmp___gnvim2__UpdateServicePolicy, "-gnvim2:UpdateServicePolicy", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateServicePolicy(soap, &soap_tmp___gnvim2__UpdateServicePolicy, "-gnvim2:UpdateServicePolicy", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateServicePolicyResponse)
		return soap_closesock(soap);
	gnvim2__UpdateServicePolicyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateServicePolicyResponse.soap_get(soap, "gnvim2:UpdateServicePolicyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::StartService(const char *endpoint, const char *soap_action, gnvim2__StartServiceRequestType *gnvim2__StartService, _gnvim2__StartServiceResponse &gnvim2__StartServiceResponse)
{	struct soap *soap = this;
	struct __gnvim2__StartService soap_tmp___gnvim2__StartService;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__StartService.gnvim2__StartService = gnvim2__StartService;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__StartService(soap, &soap_tmp___gnvim2__StartService);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__StartService(soap, &soap_tmp___gnvim2__StartService, "-gnvim2:StartService", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__StartService(soap, &soap_tmp___gnvim2__StartService, "-gnvim2:StartService", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__StartServiceResponse)
		return soap_closesock(soap);
	gnvim2__StartServiceResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__StartServiceResponse.soap_get(soap, "gnvim2:StartServiceResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::StopService(const char *endpoint, const char *soap_action, gnvim2__StopServiceRequestType *gnvim2__StopService, _gnvim2__StopServiceResponse &gnvim2__StopServiceResponse)
{	struct soap *soap = this;
	struct __gnvim2__StopService soap_tmp___gnvim2__StopService;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__StopService.gnvim2__StopService = gnvim2__StopService;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__StopService(soap, &soap_tmp___gnvim2__StopService);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__StopService(soap, &soap_tmp___gnvim2__StopService, "-gnvim2:StopService", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__StopService(soap, &soap_tmp___gnvim2__StopService, "-gnvim2:StopService", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__StopServiceResponse)
		return soap_closesock(soap);
	gnvim2__StopServiceResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__StopServiceResponse.soap_get(soap, "gnvim2:StopServiceResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RestartService(const char *endpoint, const char *soap_action, gnvim2__RestartServiceRequestType *gnvim2__RestartService, _gnvim2__RestartServiceResponse &gnvim2__RestartServiceResponse)
{	struct soap *soap = this;
	struct __gnvim2__RestartService soap_tmp___gnvim2__RestartService;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RestartService.gnvim2__RestartService = gnvim2__RestartService;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RestartService(soap, &soap_tmp___gnvim2__RestartService);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RestartService(soap, &soap_tmp___gnvim2__RestartService, "-gnvim2:RestartService", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RestartService(soap, &soap_tmp___gnvim2__RestartService, "-gnvim2:RestartService", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RestartServiceResponse)
		return soap_closesock(soap);
	gnvim2__RestartServiceResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RestartServiceResponse.soap_get(soap, "gnvim2:RestartServiceResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UninstallService(const char *endpoint, const char *soap_action, gnvim2__UninstallServiceRequestType *gnvim2__UninstallService, _gnvim2__UninstallServiceResponse &gnvim2__UninstallServiceResponse)
{	struct soap *soap = this;
	struct __gnvim2__UninstallService soap_tmp___gnvim2__UninstallService;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UninstallService.gnvim2__UninstallService = gnvim2__UninstallService;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UninstallService(soap, &soap_tmp___gnvim2__UninstallService);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UninstallService(soap, &soap_tmp___gnvim2__UninstallService, "-gnvim2:UninstallService", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UninstallService(soap, &soap_tmp___gnvim2__UninstallService, "-gnvim2:UninstallService", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UninstallServiceResponse)
		return soap_closesock(soap);
	gnvim2__UninstallServiceResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UninstallServiceResponse.soap_get(soap, "gnvim2:UninstallServiceResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshServices(const char *endpoint, const char *soap_action, gnvim2__RefreshServicesRequestType *gnvim2__RefreshServices, _gnvim2__RefreshServicesResponse &gnvim2__RefreshServicesResponse)
{	struct soap *soap = this;
	struct __gnvim2__RefreshServices soap_tmp___gnvim2__RefreshServices;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RefreshServices.gnvim2__RefreshServices = gnvim2__RefreshServices;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RefreshServices(soap, &soap_tmp___gnvim2__RefreshServices);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RefreshServices(soap, &soap_tmp___gnvim2__RefreshServices, "-gnvim2:RefreshServices", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RefreshServices(soap, &soap_tmp___gnvim2__RefreshServices, "-gnvim2:RefreshServices", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RefreshServicesResponse)
		return soap_closesock(soap);
	gnvim2__RefreshServicesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RefreshServicesResponse.soap_get(soap, "gnvim2:RefreshServicesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureSnmpAgent(const char *endpoint, const char *soap_action, gnvim2__ReconfigureSnmpAgentRequestType *gnvim2__ReconfigureSnmpAgent, _gnvim2__ReconfigureSnmpAgentResponse &gnvim2__ReconfigureSnmpAgentResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReconfigureSnmpAgent soap_tmp___gnvim2__ReconfigureSnmpAgent;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReconfigureSnmpAgent.gnvim2__ReconfigureSnmpAgent = gnvim2__ReconfigureSnmpAgent;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReconfigureSnmpAgent(soap, &soap_tmp___gnvim2__ReconfigureSnmpAgent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReconfigureSnmpAgent(soap, &soap_tmp___gnvim2__ReconfigureSnmpAgent, "-gnvim2:ReconfigureSnmpAgent", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReconfigureSnmpAgent(soap, &soap_tmp___gnvim2__ReconfigureSnmpAgent, "-gnvim2:ReconfigureSnmpAgent", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReconfigureSnmpAgentResponse)
		return soap_closesock(soap);
	gnvim2__ReconfigureSnmpAgentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReconfigureSnmpAgentResponse.soap_get(soap, "gnvim2:ReconfigureSnmpAgentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SendTestNotification(const char *endpoint, const char *soap_action, gnvim2__SendTestNotificationRequestType *gnvim2__SendTestNotification, _gnvim2__SendTestNotificationResponse &gnvim2__SendTestNotificationResponse)
{	struct soap *soap = this;
	struct __gnvim2__SendTestNotification soap_tmp___gnvim2__SendTestNotification;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SendTestNotification.gnvim2__SendTestNotification = gnvim2__SendTestNotification;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SendTestNotification(soap, &soap_tmp___gnvim2__SendTestNotification);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SendTestNotification(soap, &soap_tmp___gnvim2__SendTestNotification, "-gnvim2:SendTestNotification", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SendTestNotification(soap, &soap_tmp___gnvim2__SendTestNotification, "-gnvim2:SendTestNotification", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SendTestNotificationResponse)
		return soap_closesock(soap);
	gnvim2__SendTestNotificationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SendTestNotificationResponse.soap_get(soap, "gnvim2:SendTestNotificationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveDiskPartitionInfo(const char *endpoint, const char *soap_action, gnvim2__RetrieveDiskPartitionInfoRequestType *gnvim2__RetrieveDiskPartitionInfo, _gnvim2__RetrieveDiskPartitionInfoResponse &gnvim2__RetrieveDiskPartitionInfoResponse)
{	struct soap *soap = this;
	struct __gnvim2__RetrieveDiskPartitionInfo soap_tmp___gnvim2__RetrieveDiskPartitionInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RetrieveDiskPartitionInfo.gnvim2__RetrieveDiskPartitionInfo = gnvim2__RetrieveDiskPartitionInfo;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RetrieveDiskPartitionInfo(soap, &soap_tmp___gnvim2__RetrieveDiskPartitionInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RetrieveDiskPartitionInfo(soap, &soap_tmp___gnvim2__RetrieveDiskPartitionInfo, "-gnvim2:RetrieveDiskPartitionInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RetrieveDiskPartitionInfo(soap, &soap_tmp___gnvim2__RetrieveDiskPartitionInfo, "-gnvim2:RetrieveDiskPartitionInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RetrieveDiskPartitionInfoResponse)
		return soap_closesock(soap);
	gnvim2__RetrieveDiskPartitionInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RetrieveDiskPartitionInfoResponse.soap_get(soap, "gnvim2:RetrieveDiskPartitionInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ComputeDiskPartitionInfo(const char *endpoint, const char *soap_action, gnvim2__ComputeDiskPartitionInfoRequestType *gnvim2__ComputeDiskPartitionInfo, _gnvim2__ComputeDiskPartitionInfoResponse &gnvim2__ComputeDiskPartitionInfoResponse)
{	struct soap *soap = this;
	struct __gnvim2__ComputeDiskPartitionInfo soap_tmp___gnvim2__ComputeDiskPartitionInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ComputeDiskPartitionInfo.gnvim2__ComputeDiskPartitionInfo = gnvim2__ComputeDiskPartitionInfo;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ComputeDiskPartitionInfo(soap, &soap_tmp___gnvim2__ComputeDiskPartitionInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ComputeDiskPartitionInfo(soap, &soap_tmp___gnvim2__ComputeDiskPartitionInfo, "-gnvim2:ComputeDiskPartitionInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ComputeDiskPartitionInfo(soap, &soap_tmp___gnvim2__ComputeDiskPartitionInfo, "-gnvim2:ComputeDiskPartitionInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ComputeDiskPartitionInfoResponse)
		return soap_closesock(soap);
	gnvim2__ComputeDiskPartitionInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ComputeDiskPartitionInfoResponse.soap_get(soap, "gnvim2:ComputeDiskPartitionInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ComputeDiskPartitionInfoForResize(const char *endpoint, const char *soap_action, gnvim2__ComputeDiskPartitionInfoForResizeRequestType *gnvim2__ComputeDiskPartitionInfoForResize, _gnvim2__ComputeDiskPartitionInfoForResizeResponse &gnvim2__ComputeDiskPartitionInfoForResizeResponse)
{	struct soap *soap = this;
	struct __gnvim2__ComputeDiskPartitionInfoForResize soap_tmp___gnvim2__ComputeDiskPartitionInfoForResize;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ComputeDiskPartitionInfoForResize.gnvim2__ComputeDiskPartitionInfoForResize = gnvim2__ComputeDiskPartitionInfoForResize;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ComputeDiskPartitionInfoForResize(soap, &soap_tmp___gnvim2__ComputeDiskPartitionInfoForResize);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ComputeDiskPartitionInfoForResize(soap, &soap_tmp___gnvim2__ComputeDiskPartitionInfoForResize, "-gnvim2:ComputeDiskPartitionInfoForResize", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ComputeDiskPartitionInfoForResize(soap, &soap_tmp___gnvim2__ComputeDiskPartitionInfoForResize, "-gnvim2:ComputeDiskPartitionInfoForResize", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ComputeDiskPartitionInfoForResizeResponse)
		return soap_closesock(soap);
	gnvim2__ComputeDiskPartitionInfoForResizeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ComputeDiskPartitionInfoForResizeResponse.soap_get(soap, "gnvim2:ComputeDiskPartitionInfoForResizeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateDiskPartitions(const char *endpoint, const char *soap_action, gnvim2__UpdateDiskPartitionsRequestType *gnvim2__UpdateDiskPartitions, _gnvim2__UpdateDiskPartitionsResponse &gnvim2__UpdateDiskPartitionsResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateDiskPartitions soap_tmp___gnvim2__UpdateDiskPartitions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateDiskPartitions.gnvim2__UpdateDiskPartitions = gnvim2__UpdateDiskPartitions;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateDiskPartitions(soap, &soap_tmp___gnvim2__UpdateDiskPartitions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateDiskPartitions(soap, &soap_tmp___gnvim2__UpdateDiskPartitions, "-gnvim2:UpdateDiskPartitions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateDiskPartitions(soap, &soap_tmp___gnvim2__UpdateDiskPartitions, "-gnvim2:UpdateDiskPartitions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateDiskPartitionsResponse)
		return soap_closesock(soap);
	gnvim2__UpdateDiskPartitionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateDiskPartitionsResponse.soap_get(soap, "gnvim2:UpdateDiskPartitionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FormatVmfs(const char *endpoint, const char *soap_action, gnvim2__FormatVmfsRequestType *gnvim2__FormatVmfs, _gnvim2__FormatVmfsResponse &gnvim2__FormatVmfsResponse)
{	struct soap *soap = this;
	struct __gnvim2__FormatVmfs soap_tmp___gnvim2__FormatVmfs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__FormatVmfs.gnvim2__FormatVmfs = gnvim2__FormatVmfs;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__FormatVmfs(soap, &soap_tmp___gnvim2__FormatVmfs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__FormatVmfs(soap, &soap_tmp___gnvim2__FormatVmfs, "-gnvim2:FormatVmfs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__FormatVmfs(soap, &soap_tmp___gnvim2__FormatVmfs, "-gnvim2:FormatVmfs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__FormatVmfsResponse)
		return soap_closesock(soap);
	gnvim2__FormatVmfsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__FormatVmfsResponse.soap_get(soap, "gnvim2:FormatVmfsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MountVmfsVolume(const char *endpoint, const char *soap_action, gnvim2__MountVmfsVolumeRequestType *gnvim2__MountVmfsVolume, _gnvim2__MountVmfsVolumeResponse &gnvim2__MountVmfsVolumeResponse)
{	struct soap *soap = this;
	struct __gnvim2__MountVmfsVolume soap_tmp___gnvim2__MountVmfsVolume;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MountVmfsVolume.gnvim2__MountVmfsVolume = gnvim2__MountVmfsVolume;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MountVmfsVolume(soap, &soap_tmp___gnvim2__MountVmfsVolume);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MountVmfsVolume(soap, &soap_tmp___gnvim2__MountVmfsVolume, "-gnvim2:MountVmfsVolume", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MountVmfsVolume(soap, &soap_tmp___gnvim2__MountVmfsVolume, "-gnvim2:MountVmfsVolume", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MountVmfsVolumeResponse)
		return soap_closesock(soap);
	gnvim2__MountVmfsVolumeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MountVmfsVolumeResponse.soap_get(soap, "gnvim2:MountVmfsVolumeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UnmountVmfsVolume(const char *endpoint, const char *soap_action, gnvim2__UnmountVmfsVolumeRequestType *gnvim2__UnmountVmfsVolume, _gnvim2__UnmountVmfsVolumeResponse &gnvim2__UnmountVmfsVolumeResponse)
{	struct soap *soap = this;
	struct __gnvim2__UnmountVmfsVolume soap_tmp___gnvim2__UnmountVmfsVolume;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UnmountVmfsVolume.gnvim2__UnmountVmfsVolume = gnvim2__UnmountVmfsVolume;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UnmountVmfsVolume(soap, &soap_tmp___gnvim2__UnmountVmfsVolume);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UnmountVmfsVolume(soap, &soap_tmp___gnvim2__UnmountVmfsVolume, "-gnvim2:UnmountVmfsVolume", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UnmountVmfsVolume(soap, &soap_tmp___gnvim2__UnmountVmfsVolume, "-gnvim2:UnmountVmfsVolume", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UnmountVmfsVolumeResponse)
		return soap_closesock(soap);
	gnvim2__UnmountVmfsVolumeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UnmountVmfsVolumeResponse.soap_get(soap, "gnvim2:UnmountVmfsVolumeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UnmountVmfsVolumeEx_USCORETask(const char *endpoint, const char *soap_action, gnvim2__UnmountVmfsVolumeExRequestType *gnvim2__UnmountVmfsVolumeEx_USCORETask, _gnvim2__UnmountVmfsVolumeEx_USCORETaskResponse &gnvim2__UnmountVmfsVolumeEx_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__UnmountVmfsVolumeEx_USCORETask soap_tmp___gnvim2__UnmountVmfsVolumeEx_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UnmountVmfsVolumeEx_USCORETask.gnvim2__UnmountVmfsVolumeEx_USCORETask = gnvim2__UnmountVmfsVolumeEx_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UnmountVmfsVolumeEx_USCORETask(soap, &soap_tmp___gnvim2__UnmountVmfsVolumeEx_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UnmountVmfsVolumeEx_USCORETask(soap, &soap_tmp___gnvim2__UnmountVmfsVolumeEx_USCORETask, "-gnvim2:UnmountVmfsVolumeEx_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UnmountVmfsVolumeEx_USCORETask(soap, &soap_tmp___gnvim2__UnmountVmfsVolumeEx_USCORETask, "-gnvim2:UnmountVmfsVolumeEx_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UnmountVmfsVolumeEx_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__UnmountVmfsVolumeEx_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UnmountVmfsVolumeEx_USCORETaskResponse.soap_get(soap, "gnvim2:UnmountVmfsVolumeEx_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MountVmfsVolumeEx_USCORETask(const char *endpoint, const char *soap_action, gnvim2__MountVmfsVolumeExRequestType *gnvim2__MountVmfsVolumeEx_USCORETask, _gnvim2__MountVmfsVolumeEx_USCORETaskResponse &gnvim2__MountVmfsVolumeEx_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__MountVmfsVolumeEx_USCORETask soap_tmp___gnvim2__MountVmfsVolumeEx_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MountVmfsVolumeEx_USCORETask.gnvim2__MountVmfsVolumeEx_USCORETask = gnvim2__MountVmfsVolumeEx_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MountVmfsVolumeEx_USCORETask(soap, &soap_tmp___gnvim2__MountVmfsVolumeEx_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MountVmfsVolumeEx_USCORETask(soap, &soap_tmp___gnvim2__MountVmfsVolumeEx_USCORETask, "-gnvim2:MountVmfsVolumeEx_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MountVmfsVolumeEx_USCORETask(soap, &soap_tmp___gnvim2__MountVmfsVolumeEx_USCORETask, "-gnvim2:MountVmfsVolumeEx_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MountVmfsVolumeEx_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__MountVmfsVolumeEx_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MountVmfsVolumeEx_USCORETaskResponse.soap_get(soap, "gnvim2:MountVmfsVolumeEx_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UnmapVmfsVolumeEx_USCORETask(const char *endpoint, const char *soap_action, gnvim2__UnmapVmfsVolumeExRequestType *gnvim2__UnmapVmfsVolumeEx_USCORETask, _gnvim2__UnmapVmfsVolumeEx_USCORETaskResponse &gnvim2__UnmapVmfsVolumeEx_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__UnmapVmfsVolumeEx_USCORETask soap_tmp___gnvim2__UnmapVmfsVolumeEx_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UnmapVmfsVolumeEx_USCORETask.gnvim2__UnmapVmfsVolumeEx_USCORETask = gnvim2__UnmapVmfsVolumeEx_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UnmapVmfsVolumeEx_USCORETask(soap, &soap_tmp___gnvim2__UnmapVmfsVolumeEx_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UnmapVmfsVolumeEx_USCORETask(soap, &soap_tmp___gnvim2__UnmapVmfsVolumeEx_USCORETask, "-gnvim2:UnmapVmfsVolumeEx_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UnmapVmfsVolumeEx_USCORETask(soap, &soap_tmp___gnvim2__UnmapVmfsVolumeEx_USCORETask, "-gnvim2:UnmapVmfsVolumeEx_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UnmapVmfsVolumeEx_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__UnmapVmfsVolumeEx_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UnmapVmfsVolumeEx_USCORETaskResponse.soap_get(soap, "gnvim2:UnmapVmfsVolumeEx_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeleteVmfsVolumeState(const char *endpoint, const char *soap_action, gnvim2__DeleteVmfsVolumeStateRequestType *gnvim2__DeleteVmfsVolumeState, _gnvim2__DeleteVmfsVolumeStateResponse &gnvim2__DeleteVmfsVolumeStateResponse)
{	struct soap *soap = this;
	struct __gnvim2__DeleteVmfsVolumeState soap_tmp___gnvim2__DeleteVmfsVolumeState;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DeleteVmfsVolumeState.gnvim2__DeleteVmfsVolumeState = gnvim2__DeleteVmfsVolumeState;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DeleteVmfsVolumeState(soap, &soap_tmp___gnvim2__DeleteVmfsVolumeState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DeleteVmfsVolumeState(soap, &soap_tmp___gnvim2__DeleteVmfsVolumeState, "-gnvim2:DeleteVmfsVolumeState", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DeleteVmfsVolumeState(soap, &soap_tmp___gnvim2__DeleteVmfsVolumeState, "-gnvim2:DeleteVmfsVolumeState", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DeleteVmfsVolumeStateResponse)
		return soap_closesock(soap);
	gnvim2__DeleteVmfsVolumeStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DeleteVmfsVolumeStateResponse.soap_get(soap, "gnvim2:DeleteVmfsVolumeStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RescanVmfs(const char *endpoint, const char *soap_action, gnvim2__RescanVmfsRequestType *gnvim2__RescanVmfs, _gnvim2__RescanVmfsResponse &gnvim2__RescanVmfsResponse)
{	struct soap *soap = this;
	struct __gnvim2__RescanVmfs soap_tmp___gnvim2__RescanVmfs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RescanVmfs.gnvim2__RescanVmfs = gnvim2__RescanVmfs;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RescanVmfs(soap, &soap_tmp___gnvim2__RescanVmfs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RescanVmfs(soap, &soap_tmp___gnvim2__RescanVmfs, "-gnvim2:RescanVmfs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RescanVmfs(soap, &soap_tmp___gnvim2__RescanVmfs, "-gnvim2:RescanVmfs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RescanVmfsResponse)
		return soap_closesock(soap);
	gnvim2__RescanVmfsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RescanVmfsResponse.soap_get(soap, "gnvim2:RescanVmfsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AttachVmfsExtent(const char *endpoint, const char *soap_action, gnvim2__AttachVmfsExtentRequestType *gnvim2__AttachVmfsExtent, _gnvim2__AttachVmfsExtentResponse &gnvim2__AttachVmfsExtentResponse)
{	struct soap *soap = this;
	struct __gnvim2__AttachVmfsExtent soap_tmp___gnvim2__AttachVmfsExtent;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AttachVmfsExtent.gnvim2__AttachVmfsExtent = gnvim2__AttachVmfsExtent;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AttachVmfsExtent(soap, &soap_tmp___gnvim2__AttachVmfsExtent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AttachVmfsExtent(soap, &soap_tmp___gnvim2__AttachVmfsExtent, "-gnvim2:AttachVmfsExtent", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AttachVmfsExtent(soap, &soap_tmp___gnvim2__AttachVmfsExtent, "-gnvim2:AttachVmfsExtent", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AttachVmfsExtentResponse)
		return soap_closesock(soap);
	gnvim2__AttachVmfsExtentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AttachVmfsExtentResponse.soap_get(soap, "gnvim2:AttachVmfsExtentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExpandVmfsExtent(const char *endpoint, const char *soap_action, gnvim2__ExpandVmfsExtentRequestType *gnvim2__ExpandVmfsExtent, _gnvim2__ExpandVmfsExtentResponse &gnvim2__ExpandVmfsExtentResponse)
{	struct soap *soap = this;
	struct __gnvim2__ExpandVmfsExtent soap_tmp___gnvim2__ExpandVmfsExtent;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ExpandVmfsExtent.gnvim2__ExpandVmfsExtent = gnvim2__ExpandVmfsExtent;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ExpandVmfsExtent(soap, &soap_tmp___gnvim2__ExpandVmfsExtent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ExpandVmfsExtent(soap, &soap_tmp___gnvim2__ExpandVmfsExtent, "-gnvim2:ExpandVmfsExtent", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ExpandVmfsExtent(soap, &soap_tmp___gnvim2__ExpandVmfsExtent, "-gnvim2:ExpandVmfsExtent", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ExpandVmfsExtentResponse)
		return soap_closesock(soap);
	gnvim2__ExpandVmfsExtentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ExpandVmfsExtentResponse.soap_get(soap, "gnvim2:ExpandVmfsExtentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpgradeVmfs(const char *endpoint, const char *soap_action, gnvim2__UpgradeVmfsRequestType *gnvim2__UpgradeVmfs, _gnvim2__UpgradeVmfsResponse &gnvim2__UpgradeVmfsResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpgradeVmfs soap_tmp___gnvim2__UpgradeVmfs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpgradeVmfs.gnvim2__UpgradeVmfs = gnvim2__UpgradeVmfs;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpgradeVmfs(soap, &soap_tmp___gnvim2__UpgradeVmfs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpgradeVmfs(soap, &soap_tmp___gnvim2__UpgradeVmfs, "-gnvim2:UpgradeVmfs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpgradeVmfs(soap, &soap_tmp___gnvim2__UpgradeVmfs, "-gnvim2:UpgradeVmfs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpgradeVmfsResponse)
		return soap_closesock(soap);
	gnvim2__UpgradeVmfsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpgradeVmfsResponse.soap_get(soap, "gnvim2:UpgradeVmfsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpgradeVmLayout(const char *endpoint, const char *soap_action, gnvim2__UpgradeVmLayoutRequestType *gnvim2__UpgradeVmLayout, _gnvim2__UpgradeVmLayoutResponse &gnvim2__UpgradeVmLayoutResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpgradeVmLayout soap_tmp___gnvim2__UpgradeVmLayout;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpgradeVmLayout.gnvim2__UpgradeVmLayout = gnvim2__UpgradeVmLayout;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpgradeVmLayout(soap, &soap_tmp___gnvim2__UpgradeVmLayout);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpgradeVmLayout(soap, &soap_tmp___gnvim2__UpgradeVmLayout, "-gnvim2:UpgradeVmLayout", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpgradeVmLayout(soap, &soap_tmp___gnvim2__UpgradeVmLayout, "-gnvim2:UpgradeVmLayout", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpgradeVmLayoutResponse)
		return soap_closesock(soap);
	gnvim2__UpgradeVmLayoutResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpgradeVmLayoutResponse.soap_get(soap, "gnvim2:UpgradeVmLayoutResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryUnresolvedVmfsVolume(const char *endpoint, const char *soap_action, gnvim2__QueryUnresolvedVmfsVolumeRequestType *gnvim2__QueryUnresolvedVmfsVolume, _gnvim2__QueryUnresolvedVmfsVolumeResponse &gnvim2__QueryUnresolvedVmfsVolumeResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryUnresolvedVmfsVolume soap_tmp___gnvim2__QueryUnresolvedVmfsVolume;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryUnresolvedVmfsVolume.gnvim2__QueryUnresolvedVmfsVolume = gnvim2__QueryUnresolvedVmfsVolume;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryUnresolvedVmfsVolume(soap, &soap_tmp___gnvim2__QueryUnresolvedVmfsVolume);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryUnresolvedVmfsVolume(soap, &soap_tmp___gnvim2__QueryUnresolvedVmfsVolume, "-gnvim2:QueryUnresolvedVmfsVolume", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryUnresolvedVmfsVolume(soap, &soap_tmp___gnvim2__QueryUnresolvedVmfsVolume, "-gnvim2:QueryUnresolvedVmfsVolume", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryUnresolvedVmfsVolumeResponse)
		return soap_closesock(soap);
	gnvim2__QueryUnresolvedVmfsVolumeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryUnresolvedVmfsVolumeResponse.soap_get(soap, "gnvim2:QueryUnresolvedVmfsVolumeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResolveMultipleUnresolvedVmfsVolumes(const char *endpoint, const char *soap_action, gnvim2__ResolveMultipleUnresolvedVmfsVolumesRequestType *gnvim2__ResolveMultipleUnresolvedVmfsVolumes, _gnvim2__ResolveMultipleUnresolvedVmfsVolumesResponse &gnvim2__ResolveMultipleUnresolvedVmfsVolumesResponse)
{	struct soap *soap = this;
	struct __gnvim2__ResolveMultipleUnresolvedVmfsVolumes soap_tmp___gnvim2__ResolveMultipleUnresolvedVmfsVolumes;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ResolveMultipleUnresolvedVmfsVolumes.gnvim2__ResolveMultipleUnresolvedVmfsVolumes = gnvim2__ResolveMultipleUnresolvedVmfsVolumes;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ResolveMultipleUnresolvedVmfsVolumes(soap, &soap_tmp___gnvim2__ResolveMultipleUnresolvedVmfsVolumes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ResolveMultipleUnresolvedVmfsVolumes(soap, &soap_tmp___gnvim2__ResolveMultipleUnresolvedVmfsVolumes, "-gnvim2:ResolveMultipleUnresolvedVmfsVolumes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ResolveMultipleUnresolvedVmfsVolumes(soap, &soap_tmp___gnvim2__ResolveMultipleUnresolvedVmfsVolumes, "-gnvim2:ResolveMultipleUnresolvedVmfsVolumes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ResolveMultipleUnresolvedVmfsVolumesResponse)
		return soap_closesock(soap);
	gnvim2__ResolveMultipleUnresolvedVmfsVolumesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ResolveMultipleUnresolvedVmfsVolumesResponse.soap_get(soap, "gnvim2:ResolveMultipleUnresolvedVmfsVolumesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ResolveMultipleUnresolvedVmfsVolumesExRequestType *gnvim2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask, _gnvim2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETaskResponse &gnvim2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask soap_tmp___gnvim2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask.gnvim2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask = gnvim2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask(soap, &soap_tmp___gnvim2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask(soap, &soap_tmp___gnvim2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask, "-gnvim2:ResolveMultipleUnresolvedVmfsVolumesEx_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask(soap, &soap_tmp___gnvim2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask, "-gnvim2:ResolveMultipleUnresolvedVmfsVolumesEx_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETaskResponse.soap_get(soap, "gnvim2:ResolveMultipleUnresolvedVmfsVolumesEx_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UnmountForceMountedVmfsVolume(const char *endpoint, const char *soap_action, gnvim2__UnmountForceMountedVmfsVolumeRequestType *gnvim2__UnmountForceMountedVmfsVolume, _gnvim2__UnmountForceMountedVmfsVolumeResponse &gnvim2__UnmountForceMountedVmfsVolumeResponse)
{	struct soap *soap = this;
	struct __gnvim2__UnmountForceMountedVmfsVolume soap_tmp___gnvim2__UnmountForceMountedVmfsVolume;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UnmountForceMountedVmfsVolume.gnvim2__UnmountForceMountedVmfsVolume = gnvim2__UnmountForceMountedVmfsVolume;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UnmountForceMountedVmfsVolume(soap, &soap_tmp___gnvim2__UnmountForceMountedVmfsVolume);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UnmountForceMountedVmfsVolume(soap, &soap_tmp___gnvim2__UnmountForceMountedVmfsVolume, "-gnvim2:UnmountForceMountedVmfsVolume", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UnmountForceMountedVmfsVolume(soap, &soap_tmp___gnvim2__UnmountForceMountedVmfsVolume, "-gnvim2:UnmountForceMountedVmfsVolume", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UnmountForceMountedVmfsVolumeResponse)
		return soap_closesock(soap);
	gnvim2__UnmountForceMountedVmfsVolumeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UnmountForceMountedVmfsVolumeResponse.soap_get(soap, "gnvim2:UnmountForceMountedVmfsVolumeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RescanHba(const char *endpoint, const char *soap_action, gnvim2__RescanHbaRequestType *gnvim2__RescanHba, _gnvim2__RescanHbaResponse &gnvim2__RescanHbaResponse)
{	struct soap *soap = this;
	struct __gnvim2__RescanHba soap_tmp___gnvim2__RescanHba;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RescanHba.gnvim2__RescanHba = gnvim2__RescanHba;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RescanHba(soap, &soap_tmp___gnvim2__RescanHba);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RescanHba(soap, &soap_tmp___gnvim2__RescanHba, "-gnvim2:RescanHba", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RescanHba(soap, &soap_tmp___gnvim2__RescanHba, "-gnvim2:RescanHba", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RescanHbaResponse)
		return soap_closesock(soap);
	gnvim2__RescanHbaResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RescanHbaResponse.soap_get(soap, "gnvim2:RescanHbaResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RescanAllHba(const char *endpoint, const char *soap_action, gnvim2__RescanAllHbaRequestType *gnvim2__RescanAllHba, _gnvim2__RescanAllHbaResponse &gnvim2__RescanAllHbaResponse)
{	struct soap *soap = this;
	struct __gnvim2__RescanAllHba soap_tmp___gnvim2__RescanAllHba;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RescanAllHba.gnvim2__RescanAllHba = gnvim2__RescanAllHba;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RescanAllHba(soap, &soap_tmp___gnvim2__RescanAllHba);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RescanAllHba(soap, &soap_tmp___gnvim2__RescanAllHba, "-gnvim2:RescanAllHba", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RescanAllHba(soap, &soap_tmp___gnvim2__RescanAllHba, "-gnvim2:RescanAllHba", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RescanAllHbaResponse)
		return soap_closesock(soap);
	gnvim2__RescanAllHbaResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RescanAllHbaResponse.soap_get(soap, "gnvim2:RescanAllHbaResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateSoftwareInternetScsiEnabled(const char *endpoint, const char *soap_action, gnvim2__UpdateSoftwareInternetScsiEnabledRequestType *gnvim2__UpdateSoftwareInternetScsiEnabled, _gnvim2__UpdateSoftwareInternetScsiEnabledResponse &gnvim2__UpdateSoftwareInternetScsiEnabledResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateSoftwareInternetScsiEnabled soap_tmp___gnvim2__UpdateSoftwareInternetScsiEnabled;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateSoftwareInternetScsiEnabled.gnvim2__UpdateSoftwareInternetScsiEnabled = gnvim2__UpdateSoftwareInternetScsiEnabled;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateSoftwareInternetScsiEnabled(soap, &soap_tmp___gnvim2__UpdateSoftwareInternetScsiEnabled);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateSoftwareInternetScsiEnabled(soap, &soap_tmp___gnvim2__UpdateSoftwareInternetScsiEnabled, "-gnvim2:UpdateSoftwareInternetScsiEnabled", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateSoftwareInternetScsiEnabled(soap, &soap_tmp___gnvim2__UpdateSoftwareInternetScsiEnabled, "-gnvim2:UpdateSoftwareInternetScsiEnabled", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateSoftwareInternetScsiEnabledResponse)
		return soap_closesock(soap);
	gnvim2__UpdateSoftwareInternetScsiEnabledResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateSoftwareInternetScsiEnabledResponse.soap_get(soap, "gnvim2:UpdateSoftwareInternetScsiEnabledResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateInternetScsiDiscoveryProperties(const char *endpoint, const char *soap_action, gnvim2__UpdateInternetScsiDiscoveryPropertiesRequestType *gnvim2__UpdateInternetScsiDiscoveryProperties, _gnvim2__UpdateInternetScsiDiscoveryPropertiesResponse &gnvim2__UpdateInternetScsiDiscoveryPropertiesResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateInternetScsiDiscoveryProperties soap_tmp___gnvim2__UpdateInternetScsiDiscoveryProperties;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateInternetScsiDiscoveryProperties.gnvim2__UpdateInternetScsiDiscoveryProperties = gnvim2__UpdateInternetScsiDiscoveryProperties;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateInternetScsiDiscoveryProperties(soap, &soap_tmp___gnvim2__UpdateInternetScsiDiscoveryProperties);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateInternetScsiDiscoveryProperties(soap, &soap_tmp___gnvim2__UpdateInternetScsiDiscoveryProperties, "-gnvim2:UpdateInternetScsiDiscoveryProperties", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateInternetScsiDiscoveryProperties(soap, &soap_tmp___gnvim2__UpdateInternetScsiDiscoveryProperties, "-gnvim2:UpdateInternetScsiDiscoveryProperties", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateInternetScsiDiscoveryPropertiesResponse)
		return soap_closesock(soap);
	gnvim2__UpdateInternetScsiDiscoveryPropertiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateInternetScsiDiscoveryPropertiesResponse.soap_get(soap, "gnvim2:UpdateInternetScsiDiscoveryPropertiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateInternetScsiAuthenticationProperties(const char *endpoint, const char *soap_action, gnvim2__UpdateInternetScsiAuthenticationPropertiesRequestType *gnvim2__UpdateInternetScsiAuthenticationProperties, _gnvim2__UpdateInternetScsiAuthenticationPropertiesResponse &gnvim2__UpdateInternetScsiAuthenticationPropertiesResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateInternetScsiAuthenticationProperties soap_tmp___gnvim2__UpdateInternetScsiAuthenticationProperties;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateInternetScsiAuthenticationProperties.gnvim2__UpdateInternetScsiAuthenticationProperties = gnvim2__UpdateInternetScsiAuthenticationProperties;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateInternetScsiAuthenticationProperties(soap, &soap_tmp___gnvim2__UpdateInternetScsiAuthenticationProperties);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateInternetScsiAuthenticationProperties(soap, &soap_tmp___gnvim2__UpdateInternetScsiAuthenticationProperties, "-gnvim2:UpdateInternetScsiAuthenticationProperties", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateInternetScsiAuthenticationProperties(soap, &soap_tmp___gnvim2__UpdateInternetScsiAuthenticationProperties, "-gnvim2:UpdateInternetScsiAuthenticationProperties", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateInternetScsiAuthenticationPropertiesResponse)
		return soap_closesock(soap);
	gnvim2__UpdateInternetScsiAuthenticationPropertiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateInternetScsiAuthenticationPropertiesResponse.soap_get(soap, "gnvim2:UpdateInternetScsiAuthenticationPropertiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateInternetScsiDigestProperties(const char *endpoint, const char *soap_action, gnvim2__UpdateInternetScsiDigestPropertiesRequestType *gnvim2__UpdateInternetScsiDigestProperties, _gnvim2__UpdateInternetScsiDigestPropertiesResponse &gnvim2__UpdateInternetScsiDigestPropertiesResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateInternetScsiDigestProperties soap_tmp___gnvim2__UpdateInternetScsiDigestProperties;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateInternetScsiDigestProperties.gnvim2__UpdateInternetScsiDigestProperties = gnvim2__UpdateInternetScsiDigestProperties;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateInternetScsiDigestProperties(soap, &soap_tmp___gnvim2__UpdateInternetScsiDigestProperties);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateInternetScsiDigestProperties(soap, &soap_tmp___gnvim2__UpdateInternetScsiDigestProperties, "-gnvim2:UpdateInternetScsiDigestProperties", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateInternetScsiDigestProperties(soap, &soap_tmp___gnvim2__UpdateInternetScsiDigestProperties, "-gnvim2:UpdateInternetScsiDigestProperties", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateInternetScsiDigestPropertiesResponse)
		return soap_closesock(soap);
	gnvim2__UpdateInternetScsiDigestPropertiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateInternetScsiDigestPropertiesResponse.soap_get(soap, "gnvim2:UpdateInternetScsiDigestPropertiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateInternetScsiAdvancedOptions(const char *endpoint, const char *soap_action, gnvim2__UpdateInternetScsiAdvancedOptionsRequestType *gnvim2__UpdateInternetScsiAdvancedOptions, _gnvim2__UpdateInternetScsiAdvancedOptionsResponse &gnvim2__UpdateInternetScsiAdvancedOptionsResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateInternetScsiAdvancedOptions soap_tmp___gnvim2__UpdateInternetScsiAdvancedOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateInternetScsiAdvancedOptions.gnvim2__UpdateInternetScsiAdvancedOptions = gnvim2__UpdateInternetScsiAdvancedOptions;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateInternetScsiAdvancedOptions(soap, &soap_tmp___gnvim2__UpdateInternetScsiAdvancedOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateInternetScsiAdvancedOptions(soap, &soap_tmp___gnvim2__UpdateInternetScsiAdvancedOptions, "-gnvim2:UpdateInternetScsiAdvancedOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateInternetScsiAdvancedOptions(soap, &soap_tmp___gnvim2__UpdateInternetScsiAdvancedOptions, "-gnvim2:UpdateInternetScsiAdvancedOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateInternetScsiAdvancedOptionsResponse)
		return soap_closesock(soap);
	gnvim2__UpdateInternetScsiAdvancedOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateInternetScsiAdvancedOptionsResponse.soap_get(soap, "gnvim2:UpdateInternetScsiAdvancedOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateInternetScsiIPProperties(const char *endpoint, const char *soap_action, gnvim2__UpdateInternetScsiIPPropertiesRequestType *gnvim2__UpdateInternetScsiIPProperties, _gnvim2__UpdateInternetScsiIPPropertiesResponse &gnvim2__UpdateInternetScsiIPPropertiesResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateInternetScsiIPProperties soap_tmp___gnvim2__UpdateInternetScsiIPProperties;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateInternetScsiIPProperties.gnvim2__UpdateInternetScsiIPProperties = gnvim2__UpdateInternetScsiIPProperties;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateInternetScsiIPProperties(soap, &soap_tmp___gnvim2__UpdateInternetScsiIPProperties);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateInternetScsiIPProperties(soap, &soap_tmp___gnvim2__UpdateInternetScsiIPProperties, "-gnvim2:UpdateInternetScsiIPProperties", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateInternetScsiIPProperties(soap, &soap_tmp___gnvim2__UpdateInternetScsiIPProperties, "-gnvim2:UpdateInternetScsiIPProperties", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateInternetScsiIPPropertiesResponse)
		return soap_closesock(soap);
	gnvim2__UpdateInternetScsiIPPropertiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateInternetScsiIPPropertiesResponse.soap_get(soap, "gnvim2:UpdateInternetScsiIPPropertiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateInternetScsiName(const char *endpoint, const char *soap_action, gnvim2__UpdateInternetScsiNameRequestType *gnvim2__UpdateInternetScsiName, _gnvim2__UpdateInternetScsiNameResponse &gnvim2__UpdateInternetScsiNameResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateInternetScsiName soap_tmp___gnvim2__UpdateInternetScsiName;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateInternetScsiName.gnvim2__UpdateInternetScsiName = gnvim2__UpdateInternetScsiName;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateInternetScsiName(soap, &soap_tmp___gnvim2__UpdateInternetScsiName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateInternetScsiName(soap, &soap_tmp___gnvim2__UpdateInternetScsiName, "-gnvim2:UpdateInternetScsiName", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateInternetScsiName(soap, &soap_tmp___gnvim2__UpdateInternetScsiName, "-gnvim2:UpdateInternetScsiName", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateInternetScsiNameResponse)
		return soap_closesock(soap);
	gnvim2__UpdateInternetScsiNameResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateInternetScsiNameResponse.soap_get(soap, "gnvim2:UpdateInternetScsiNameResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateInternetScsiAlias(const char *endpoint, const char *soap_action, gnvim2__UpdateInternetScsiAliasRequestType *gnvim2__UpdateInternetScsiAlias, _gnvim2__UpdateInternetScsiAliasResponse &gnvim2__UpdateInternetScsiAliasResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateInternetScsiAlias soap_tmp___gnvim2__UpdateInternetScsiAlias;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateInternetScsiAlias.gnvim2__UpdateInternetScsiAlias = gnvim2__UpdateInternetScsiAlias;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateInternetScsiAlias(soap, &soap_tmp___gnvim2__UpdateInternetScsiAlias);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateInternetScsiAlias(soap, &soap_tmp___gnvim2__UpdateInternetScsiAlias, "-gnvim2:UpdateInternetScsiAlias", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateInternetScsiAlias(soap, &soap_tmp___gnvim2__UpdateInternetScsiAlias, "-gnvim2:UpdateInternetScsiAlias", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateInternetScsiAliasResponse)
		return soap_closesock(soap);
	gnvim2__UpdateInternetScsiAliasResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateInternetScsiAliasResponse.soap_get(soap, "gnvim2:UpdateInternetScsiAliasResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddInternetScsiSendTargets(const char *endpoint, const char *soap_action, gnvim2__AddInternetScsiSendTargetsRequestType *gnvim2__AddInternetScsiSendTargets, _gnvim2__AddInternetScsiSendTargetsResponse &gnvim2__AddInternetScsiSendTargetsResponse)
{	struct soap *soap = this;
	struct __gnvim2__AddInternetScsiSendTargets soap_tmp___gnvim2__AddInternetScsiSendTargets;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AddInternetScsiSendTargets.gnvim2__AddInternetScsiSendTargets = gnvim2__AddInternetScsiSendTargets;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AddInternetScsiSendTargets(soap, &soap_tmp___gnvim2__AddInternetScsiSendTargets);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AddInternetScsiSendTargets(soap, &soap_tmp___gnvim2__AddInternetScsiSendTargets, "-gnvim2:AddInternetScsiSendTargets", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AddInternetScsiSendTargets(soap, &soap_tmp___gnvim2__AddInternetScsiSendTargets, "-gnvim2:AddInternetScsiSendTargets", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AddInternetScsiSendTargetsResponse)
		return soap_closesock(soap);
	gnvim2__AddInternetScsiSendTargetsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AddInternetScsiSendTargetsResponse.soap_get(soap, "gnvim2:AddInternetScsiSendTargetsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveInternetScsiSendTargets(const char *endpoint, const char *soap_action, gnvim2__RemoveInternetScsiSendTargetsRequestType *gnvim2__RemoveInternetScsiSendTargets, _gnvim2__RemoveInternetScsiSendTargetsResponse &gnvim2__RemoveInternetScsiSendTargetsResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveInternetScsiSendTargets soap_tmp___gnvim2__RemoveInternetScsiSendTargets;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveInternetScsiSendTargets.gnvim2__RemoveInternetScsiSendTargets = gnvim2__RemoveInternetScsiSendTargets;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveInternetScsiSendTargets(soap, &soap_tmp___gnvim2__RemoveInternetScsiSendTargets);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveInternetScsiSendTargets(soap, &soap_tmp___gnvim2__RemoveInternetScsiSendTargets, "-gnvim2:RemoveInternetScsiSendTargets", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveInternetScsiSendTargets(soap, &soap_tmp___gnvim2__RemoveInternetScsiSendTargets, "-gnvim2:RemoveInternetScsiSendTargets", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveInternetScsiSendTargetsResponse)
		return soap_closesock(soap);
	gnvim2__RemoveInternetScsiSendTargetsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveInternetScsiSendTargetsResponse.soap_get(soap, "gnvim2:RemoveInternetScsiSendTargetsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddInternetScsiStaticTargets(const char *endpoint, const char *soap_action, gnvim2__AddInternetScsiStaticTargetsRequestType *gnvim2__AddInternetScsiStaticTargets, _gnvim2__AddInternetScsiStaticTargetsResponse &gnvim2__AddInternetScsiStaticTargetsResponse)
{	struct soap *soap = this;
	struct __gnvim2__AddInternetScsiStaticTargets soap_tmp___gnvim2__AddInternetScsiStaticTargets;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AddInternetScsiStaticTargets.gnvim2__AddInternetScsiStaticTargets = gnvim2__AddInternetScsiStaticTargets;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AddInternetScsiStaticTargets(soap, &soap_tmp___gnvim2__AddInternetScsiStaticTargets);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AddInternetScsiStaticTargets(soap, &soap_tmp___gnvim2__AddInternetScsiStaticTargets, "-gnvim2:AddInternetScsiStaticTargets", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AddInternetScsiStaticTargets(soap, &soap_tmp___gnvim2__AddInternetScsiStaticTargets, "-gnvim2:AddInternetScsiStaticTargets", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AddInternetScsiStaticTargetsResponse)
		return soap_closesock(soap);
	gnvim2__AddInternetScsiStaticTargetsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AddInternetScsiStaticTargetsResponse.soap_get(soap, "gnvim2:AddInternetScsiStaticTargetsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveInternetScsiStaticTargets(const char *endpoint, const char *soap_action, gnvim2__RemoveInternetScsiStaticTargetsRequestType *gnvim2__RemoveInternetScsiStaticTargets, _gnvim2__RemoveInternetScsiStaticTargetsResponse &gnvim2__RemoveInternetScsiStaticTargetsResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveInternetScsiStaticTargets soap_tmp___gnvim2__RemoveInternetScsiStaticTargets;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveInternetScsiStaticTargets.gnvim2__RemoveInternetScsiStaticTargets = gnvim2__RemoveInternetScsiStaticTargets;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveInternetScsiStaticTargets(soap, &soap_tmp___gnvim2__RemoveInternetScsiStaticTargets);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveInternetScsiStaticTargets(soap, &soap_tmp___gnvim2__RemoveInternetScsiStaticTargets, "-gnvim2:RemoveInternetScsiStaticTargets", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveInternetScsiStaticTargets(soap, &soap_tmp___gnvim2__RemoveInternetScsiStaticTargets, "-gnvim2:RemoveInternetScsiStaticTargets", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveInternetScsiStaticTargetsResponse)
		return soap_closesock(soap);
	gnvim2__RemoveInternetScsiStaticTargetsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveInternetScsiStaticTargetsResponse.soap_get(soap, "gnvim2:RemoveInternetScsiStaticTargetsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EnableMultipathPath(const char *endpoint, const char *soap_action, gnvim2__EnableMultipathPathRequestType *gnvim2__EnableMultipathPath, _gnvim2__EnableMultipathPathResponse &gnvim2__EnableMultipathPathResponse)
{	struct soap *soap = this;
	struct __gnvim2__EnableMultipathPath soap_tmp___gnvim2__EnableMultipathPath;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__EnableMultipathPath.gnvim2__EnableMultipathPath = gnvim2__EnableMultipathPath;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__EnableMultipathPath(soap, &soap_tmp___gnvim2__EnableMultipathPath);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__EnableMultipathPath(soap, &soap_tmp___gnvim2__EnableMultipathPath, "-gnvim2:EnableMultipathPath", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__EnableMultipathPath(soap, &soap_tmp___gnvim2__EnableMultipathPath, "-gnvim2:EnableMultipathPath", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__EnableMultipathPathResponse)
		return soap_closesock(soap);
	gnvim2__EnableMultipathPathResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__EnableMultipathPathResponse.soap_get(soap, "gnvim2:EnableMultipathPathResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DisableMultipathPath(const char *endpoint, const char *soap_action, gnvim2__DisableMultipathPathRequestType *gnvim2__DisableMultipathPath, _gnvim2__DisableMultipathPathResponse &gnvim2__DisableMultipathPathResponse)
{	struct soap *soap = this;
	struct __gnvim2__DisableMultipathPath soap_tmp___gnvim2__DisableMultipathPath;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DisableMultipathPath.gnvim2__DisableMultipathPath = gnvim2__DisableMultipathPath;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DisableMultipathPath(soap, &soap_tmp___gnvim2__DisableMultipathPath);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DisableMultipathPath(soap, &soap_tmp___gnvim2__DisableMultipathPath, "-gnvim2:DisableMultipathPath", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DisableMultipathPath(soap, &soap_tmp___gnvim2__DisableMultipathPath, "-gnvim2:DisableMultipathPath", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DisableMultipathPathResponse)
		return soap_closesock(soap);
	gnvim2__DisableMultipathPathResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DisableMultipathPathResponse.soap_get(soap, "gnvim2:DisableMultipathPathResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetMultipathLunPolicy(const char *endpoint, const char *soap_action, gnvim2__SetMultipathLunPolicyRequestType *gnvim2__SetMultipathLunPolicy, _gnvim2__SetMultipathLunPolicyResponse &gnvim2__SetMultipathLunPolicyResponse)
{	struct soap *soap = this;
	struct __gnvim2__SetMultipathLunPolicy soap_tmp___gnvim2__SetMultipathLunPolicy;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SetMultipathLunPolicy.gnvim2__SetMultipathLunPolicy = gnvim2__SetMultipathLunPolicy;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SetMultipathLunPolicy(soap, &soap_tmp___gnvim2__SetMultipathLunPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SetMultipathLunPolicy(soap, &soap_tmp___gnvim2__SetMultipathLunPolicy, "-gnvim2:SetMultipathLunPolicy", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SetMultipathLunPolicy(soap, &soap_tmp___gnvim2__SetMultipathLunPolicy, "-gnvim2:SetMultipathLunPolicy", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SetMultipathLunPolicyResponse)
		return soap_closesock(soap);
	gnvim2__SetMultipathLunPolicyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SetMultipathLunPolicyResponse.soap_get(soap, "gnvim2:SetMultipathLunPolicyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryPathSelectionPolicyOptions(const char *endpoint, const char *soap_action, gnvim2__QueryPathSelectionPolicyOptionsRequestType *gnvim2__QueryPathSelectionPolicyOptions, _gnvim2__QueryPathSelectionPolicyOptionsResponse &gnvim2__QueryPathSelectionPolicyOptionsResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryPathSelectionPolicyOptions soap_tmp___gnvim2__QueryPathSelectionPolicyOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryPathSelectionPolicyOptions.gnvim2__QueryPathSelectionPolicyOptions = gnvim2__QueryPathSelectionPolicyOptions;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryPathSelectionPolicyOptions(soap, &soap_tmp___gnvim2__QueryPathSelectionPolicyOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryPathSelectionPolicyOptions(soap, &soap_tmp___gnvim2__QueryPathSelectionPolicyOptions, "-gnvim2:QueryPathSelectionPolicyOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryPathSelectionPolicyOptions(soap, &soap_tmp___gnvim2__QueryPathSelectionPolicyOptions, "-gnvim2:QueryPathSelectionPolicyOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryPathSelectionPolicyOptionsResponse)
		return soap_closesock(soap);
	gnvim2__QueryPathSelectionPolicyOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryPathSelectionPolicyOptionsResponse.soap_get(soap, "gnvim2:QueryPathSelectionPolicyOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryStorageArrayTypePolicyOptions(const char *endpoint, const char *soap_action, gnvim2__QueryStorageArrayTypePolicyOptionsRequestType *gnvim2__QueryStorageArrayTypePolicyOptions, _gnvim2__QueryStorageArrayTypePolicyOptionsResponse &gnvim2__QueryStorageArrayTypePolicyOptionsResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryStorageArrayTypePolicyOptions soap_tmp___gnvim2__QueryStorageArrayTypePolicyOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryStorageArrayTypePolicyOptions.gnvim2__QueryStorageArrayTypePolicyOptions = gnvim2__QueryStorageArrayTypePolicyOptions;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryStorageArrayTypePolicyOptions(soap, &soap_tmp___gnvim2__QueryStorageArrayTypePolicyOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryStorageArrayTypePolicyOptions(soap, &soap_tmp___gnvim2__QueryStorageArrayTypePolicyOptions, "-gnvim2:QueryStorageArrayTypePolicyOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryStorageArrayTypePolicyOptions(soap, &soap_tmp___gnvim2__QueryStorageArrayTypePolicyOptions, "-gnvim2:QueryStorageArrayTypePolicyOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryStorageArrayTypePolicyOptionsResponse)
		return soap_closesock(soap);
	gnvim2__QueryStorageArrayTypePolicyOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryStorageArrayTypePolicyOptionsResponse.soap_get(soap, "gnvim2:QueryStorageArrayTypePolicyOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateScsiLunDisplayName(const char *endpoint, const char *soap_action, gnvim2__UpdateScsiLunDisplayNameRequestType *gnvim2__UpdateScsiLunDisplayName, _gnvim2__UpdateScsiLunDisplayNameResponse &gnvim2__UpdateScsiLunDisplayNameResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateScsiLunDisplayName soap_tmp___gnvim2__UpdateScsiLunDisplayName;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateScsiLunDisplayName.gnvim2__UpdateScsiLunDisplayName = gnvim2__UpdateScsiLunDisplayName;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateScsiLunDisplayName(soap, &soap_tmp___gnvim2__UpdateScsiLunDisplayName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateScsiLunDisplayName(soap, &soap_tmp___gnvim2__UpdateScsiLunDisplayName, "-gnvim2:UpdateScsiLunDisplayName", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateScsiLunDisplayName(soap, &soap_tmp___gnvim2__UpdateScsiLunDisplayName, "-gnvim2:UpdateScsiLunDisplayName", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateScsiLunDisplayNameResponse)
		return soap_closesock(soap);
	gnvim2__UpdateScsiLunDisplayNameResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateScsiLunDisplayNameResponse.soap_get(soap, "gnvim2:UpdateScsiLunDisplayNameResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DetachScsiLun(const char *endpoint, const char *soap_action, gnvim2__DetachScsiLunRequestType *gnvim2__DetachScsiLun, _gnvim2__DetachScsiLunResponse &gnvim2__DetachScsiLunResponse)
{	struct soap *soap = this;
	struct __gnvim2__DetachScsiLun soap_tmp___gnvim2__DetachScsiLun;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DetachScsiLun.gnvim2__DetachScsiLun = gnvim2__DetachScsiLun;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DetachScsiLun(soap, &soap_tmp___gnvim2__DetachScsiLun);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DetachScsiLun(soap, &soap_tmp___gnvim2__DetachScsiLun, "-gnvim2:DetachScsiLun", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DetachScsiLun(soap, &soap_tmp___gnvim2__DetachScsiLun, "-gnvim2:DetachScsiLun", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DetachScsiLunResponse)
		return soap_closesock(soap);
	gnvim2__DetachScsiLunResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DetachScsiLunResponse.soap_get(soap, "gnvim2:DetachScsiLunResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DetachScsiLunEx_USCORETask(const char *endpoint, const char *soap_action, gnvim2__DetachScsiLunExRequestType *gnvim2__DetachScsiLunEx_USCORETask, _gnvim2__DetachScsiLunEx_USCORETaskResponse &gnvim2__DetachScsiLunEx_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__DetachScsiLunEx_USCORETask soap_tmp___gnvim2__DetachScsiLunEx_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DetachScsiLunEx_USCORETask.gnvim2__DetachScsiLunEx_USCORETask = gnvim2__DetachScsiLunEx_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DetachScsiLunEx_USCORETask(soap, &soap_tmp___gnvim2__DetachScsiLunEx_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DetachScsiLunEx_USCORETask(soap, &soap_tmp___gnvim2__DetachScsiLunEx_USCORETask, "-gnvim2:DetachScsiLunEx_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DetachScsiLunEx_USCORETask(soap, &soap_tmp___gnvim2__DetachScsiLunEx_USCORETask, "-gnvim2:DetachScsiLunEx_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DetachScsiLunEx_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__DetachScsiLunEx_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DetachScsiLunEx_USCORETaskResponse.soap_get(soap, "gnvim2:DetachScsiLunEx_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeleteScsiLunState(const char *endpoint, const char *soap_action, gnvim2__DeleteScsiLunStateRequestType *gnvim2__DeleteScsiLunState, _gnvim2__DeleteScsiLunStateResponse &gnvim2__DeleteScsiLunStateResponse)
{	struct soap *soap = this;
	struct __gnvim2__DeleteScsiLunState soap_tmp___gnvim2__DeleteScsiLunState;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DeleteScsiLunState.gnvim2__DeleteScsiLunState = gnvim2__DeleteScsiLunState;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DeleteScsiLunState(soap, &soap_tmp___gnvim2__DeleteScsiLunState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DeleteScsiLunState(soap, &soap_tmp___gnvim2__DeleteScsiLunState, "-gnvim2:DeleteScsiLunState", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DeleteScsiLunState(soap, &soap_tmp___gnvim2__DeleteScsiLunState, "-gnvim2:DeleteScsiLunState", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DeleteScsiLunStateResponse)
		return soap_closesock(soap);
	gnvim2__DeleteScsiLunStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DeleteScsiLunStateResponse.soap_get(soap, "gnvim2:DeleteScsiLunStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AttachScsiLun(const char *endpoint, const char *soap_action, gnvim2__AttachScsiLunRequestType *gnvim2__AttachScsiLun, _gnvim2__AttachScsiLunResponse &gnvim2__AttachScsiLunResponse)
{	struct soap *soap = this;
	struct __gnvim2__AttachScsiLun soap_tmp___gnvim2__AttachScsiLun;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AttachScsiLun.gnvim2__AttachScsiLun = gnvim2__AttachScsiLun;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AttachScsiLun(soap, &soap_tmp___gnvim2__AttachScsiLun);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AttachScsiLun(soap, &soap_tmp___gnvim2__AttachScsiLun, "-gnvim2:AttachScsiLun", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AttachScsiLun(soap, &soap_tmp___gnvim2__AttachScsiLun, "-gnvim2:AttachScsiLun", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AttachScsiLunResponse)
		return soap_closesock(soap);
	gnvim2__AttachScsiLunResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AttachScsiLunResponse.soap_get(soap, "gnvim2:AttachScsiLunResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AttachScsiLunEx_USCORETask(const char *endpoint, const char *soap_action, gnvim2__AttachScsiLunExRequestType *gnvim2__AttachScsiLunEx_USCORETask, _gnvim2__AttachScsiLunEx_USCORETaskResponse &gnvim2__AttachScsiLunEx_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__AttachScsiLunEx_USCORETask soap_tmp___gnvim2__AttachScsiLunEx_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AttachScsiLunEx_USCORETask.gnvim2__AttachScsiLunEx_USCORETask = gnvim2__AttachScsiLunEx_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AttachScsiLunEx_USCORETask(soap, &soap_tmp___gnvim2__AttachScsiLunEx_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AttachScsiLunEx_USCORETask(soap, &soap_tmp___gnvim2__AttachScsiLunEx_USCORETask, "-gnvim2:AttachScsiLunEx_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AttachScsiLunEx_USCORETask(soap, &soap_tmp___gnvim2__AttachScsiLunEx_USCORETask, "-gnvim2:AttachScsiLunEx_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AttachScsiLunEx_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__AttachScsiLunEx_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AttachScsiLunEx_USCORETaskResponse.soap_get(soap, "gnvim2:AttachScsiLunEx_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshStorageSystem(const char *endpoint, const char *soap_action, gnvim2__RefreshStorageSystemRequestType *gnvim2__RefreshStorageSystem, _gnvim2__RefreshStorageSystemResponse &gnvim2__RefreshStorageSystemResponse)
{	struct soap *soap = this;
	struct __gnvim2__RefreshStorageSystem soap_tmp___gnvim2__RefreshStorageSystem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RefreshStorageSystem.gnvim2__RefreshStorageSystem = gnvim2__RefreshStorageSystem;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RefreshStorageSystem(soap, &soap_tmp___gnvim2__RefreshStorageSystem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RefreshStorageSystem(soap, &soap_tmp___gnvim2__RefreshStorageSystem, "-gnvim2:RefreshStorageSystem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RefreshStorageSystem(soap, &soap_tmp___gnvim2__RefreshStorageSystem, "-gnvim2:RefreshStorageSystem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RefreshStorageSystemResponse)
		return soap_closesock(soap);
	gnvim2__RefreshStorageSystemResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RefreshStorageSystemResponse.soap_get(soap, "gnvim2:RefreshStorageSystemResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DiscoverFcoeHbas(const char *endpoint, const char *soap_action, gnvim2__DiscoverFcoeHbasRequestType *gnvim2__DiscoverFcoeHbas, _gnvim2__DiscoverFcoeHbasResponse &gnvim2__DiscoverFcoeHbasResponse)
{	struct soap *soap = this;
	struct __gnvim2__DiscoverFcoeHbas soap_tmp___gnvim2__DiscoverFcoeHbas;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DiscoverFcoeHbas.gnvim2__DiscoverFcoeHbas = gnvim2__DiscoverFcoeHbas;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DiscoverFcoeHbas(soap, &soap_tmp___gnvim2__DiscoverFcoeHbas);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DiscoverFcoeHbas(soap, &soap_tmp___gnvim2__DiscoverFcoeHbas, "-gnvim2:DiscoverFcoeHbas", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DiscoverFcoeHbas(soap, &soap_tmp___gnvim2__DiscoverFcoeHbas, "-gnvim2:DiscoverFcoeHbas", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DiscoverFcoeHbasResponse)
		return soap_closesock(soap);
	gnvim2__DiscoverFcoeHbasResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DiscoverFcoeHbasResponse.soap_get(soap, "gnvim2:DiscoverFcoeHbasResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MarkForRemoval(const char *endpoint, const char *soap_action, gnvim2__MarkForRemovalRequestType *gnvim2__MarkForRemoval, _gnvim2__MarkForRemovalResponse &gnvim2__MarkForRemovalResponse)
{	struct soap *soap = this;
	struct __gnvim2__MarkForRemoval soap_tmp___gnvim2__MarkForRemoval;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MarkForRemoval.gnvim2__MarkForRemoval = gnvim2__MarkForRemoval;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MarkForRemoval(soap, &soap_tmp___gnvim2__MarkForRemoval);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MarkForRemoval(soap, &soap_tmp___gnvim2__MarkForRemoval, "-gnvim2:MarkForRemoval", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MarkForRemoval(soap, &soap_tmp___gnvim2__MarkForRemoval, "-gnvim2:MarkForRemoval", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MarkForRemovalResponse)
		return soap_closesock(soap);
	gnvim2__MarkForRemovalResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MarkForRemovalResponse.soap_get(soap, "gnvim2:MarkForRemovalResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FormatVffs(const char *endpoint, const char *soap_action, gnvim2__FormatVffsRequestType *gnvim2__FormatVffs, _gnvim2__FormatVffsResponse &gnvim2__FormatVffsResponse)
{	struct soap *soap = this;
	struct __gnvim2__FormatVffs soap_tmp___gnvim2__FormatVffs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__FormatVffs.gnvim2__FormatVffs = gnvim2__FormatVffs;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__FormatVffs(soap, &soap_tmp___gnvim2__FormatVffs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__FormatVffs(soap, &soap_tmp___gnvim2__FormatVffs, "-gnvim2:FormatVffs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__FormatVffs(soap, &soap_tmp___gnvim2__FormatVffs, "-gnvim2:FormatVffs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__FormatVffsResponse)
		return soap_closesock(soap);
	gnvim2__FormatVffsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__FormatVffsResponse.soap_get(soap, "gnvim2:FormatVffsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExtendVffs(const char *endpoint, const char *soap_action, gnvim2__ExtendVffsRequestType *gnvim2__ExtendVffs, _gnvim2__ExtendVffsResponse &gnvim2__ExtendVffsResponse)
{	struct soap *soap = this;
	struct __gnvim2__ExtendVffs soap_tmp___gnvim2__ExtendVffs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ExtendVffs.gnvim2__ExtendVffs = gnvim2__ExtendVffs;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ExtendVffs(soap, &soap_tmp___gnvim2__ExtendVffs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ExtendVffs(soap, &soap_tmp___gnvim2__ExtendVffs, "-gnvim2:ExtendVffs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ExtendVffs(soap, &soap_tmp___gnvim2__ExtendVffs, "-gnvim2:ExtendVffs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ExtendVffsResponse)
		return soap_closesock(soap);
	gnvim2__ExtendVffsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ExtendVffsResponse.soap_get(soap, "gnvim2:ExtendVffsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DestroyVffs(const char *endpoint, const char *soap_action, gnvim2__DestroyVffsRequestType *gnvim2__DestroyVffs, _gnvim2__DestroyVffsResponse &gnvim2__DestroyVffsResponse)
{	struct soap *soap = this;
	struct __gnvim2__DestroyVffs soap_tmp___gnvim2__DestroyVffs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DestroyVffs.gnvim2__DestroyVffs = gnvim2__DestroyVffs;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DestroyVffs(soap, &soap_tmp___gnvim2__DestroyVffs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DestroyVffs(soap, &soap_tmp___gnvim2__DestroyVffs, "-gnvim2:DestroyVffs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DestroyVffs(soap, &soap_tmp___gnvim2__DestroyVffs, "-gnvim2:DestroyVffs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DestroyVffsResponse)
		return soap_closesock(soap);
	gnvim2__DestroyVffsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DestroyVffsResponse.soap_get(soap, "gnvim2:DestroyVffsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MountVffsVolume(const char *endpoint, const char *soap_action, gnvim2__MountVffsVolumeRequestType *gnvim2__MountVffsVolume, _gnvim2__MountVffsVolumeResponse &gnvim2__MountVffsVolumeResponse)
{	struct soap *soap = this;
	struct __gnvim2__MountVffsVolume soap_tmp___gnvim2__MountVffsVolume;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MountVffsVolume.gnvim2__MountVffsVolume = gnvim2__MountVffsVolume;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MountVffsVolume(soap, &soap_tmp___gnvim2__MountVffsVolume);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MountVffsVolume(soap, &soap_tmp___gnvim2__MountVffsVolume, "-gnvim2:MountVffsVolume", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MountVffsVolume(soap, &soap_tmp___gnvim2__MountVffsVolume, "-gnvim2:MountVffsVolume", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MountVffsVolumeResponse)
		return soap_closesock(soap);
	gnvim2__MountVffsVolumeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MountVffsVolumeResponse.soap_get(soap, "gnvim2:MountVffsVolumeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UnmountVffsVolume(const char *endpoint, const char *soap_action, gnvim2__UnmountVffsVolumeRequestType *gnvim2__UnmountVffsVolume, _gnvim2__UnmountVffsVolumeResponse &gnvim2__UnmountVffsVolumeResponse)
{	struct soap *soap = this;
	struct __gnvim2__UnmountVffsVolume soap_tmp___gnvim2__UnmountVffsVolume;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UnmountVffsVolume.gnvim2__UnmountVffsVolume = gnvim2__UnmountVffsVolume;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UnmountVffsVolume(soap, &soap_tmp___gnvim2__UnmountVffsVolume);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UnmountVffsVolume(soap, &soap_tmp___gnvim2__UnmountVffsVolume, "-gnvim2:UnmountVffsVolume", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UnmountVffsVolume(soap, &soap_tmp___gnvim2__UnmountVffsVolume, "-gnvim2:UnmountVffsVolume", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UnmountVffsVolumeResponse)
		return soap_closesock(soap);
	gnvim2__UnmountVffsVolumeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UnmountVffsVolumeResponse.soap_get(soap, "gnvim2:UnmountVffsVolumeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeleteVffsVolumeState(const char *endpoint, const char *soap_action, gnvim2__DeleteVffsVolumeStateRequestType *gnvim2__DeleteVffsVolumeState, _gnvim2__DeleteVffsVolumeStateResponse &gnvim2__DeleteVffsVolumeStateResponse)
{	struct soap *soap = this;
	struct __gnvim2__DeleteVffsVolumeState soap_tmp___gnvim2__DeleteVffsVolumeState;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DeleteVffsVolumeState.gnvim2__DeleteVffsVolumeState = gnvim2__DeleteVffsVolumeState;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DeleteVffsVolumeState(soap, &soap_tmp___gnvim2__DeleteVffsVolumeState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DeleteVffsVolumeState(soap, &soap_tmp___gnvim2__DeleteVffsVolumeState, "-gnvim2:DeleteVffsVolumeState", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DeleteVffsVolumeState(soap, &soap_tmp___gnvim2__DeleteVffsVolumeState, "-gnvim2:DeleteVffsVolumeState", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DeleteVffsVolumeStateResponse)
		return soap_closesock(soap);
	gnvim2__DeleteVffsVolumeStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DeleteVffsVolumeStateResponse.soap_get(soap, "gnvim2:DeleteVffsVolumeStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RescanVffs(const char *endpoint, const char *soap_action, gnvim2__RescanVffsRequestType *gnvim2__RescanVffs, _gnvim2__RescanVffsResponse &gnvim2__RescanVffsResponse)
{	struct soap *soap = this;
	struct __gnvim2__RescanVffs soap_tmp___gnvim2__RescanVffs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RescanVffs.gnvim2__RescanVffs = gnvim2__RescanVffs;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RescanVffs(soap, &soap_tmp___gnvim2__RescanVffs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RescanVffs(soap, &soap_tmp___gnvim2__RescanVffs, "-gnvim2:RescanVffs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RescanVffs(soap, &soap_tmp___gnvim2__RescanVffs, "-gnvim2:RescanVffs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RescanVffsResponse)
		return soap_closesock(soap);
	gnvim2__RescanVffsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RescanVffsResponse.soap_get(soap, "gnvim2:RescanVffsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryAvailableSsds(const char *endpoint, const char *soap_action, gnvim2__QueryAvailableSsdsRequestType *gnvim2__QueryAvailableSsds, _gnvim2__QueryAvailableSsdsResponse &gnvim2__QueryAvailableSsdsResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryAvailableSsds soap_tmp___gnvim2__QueryAvailableSsds;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryAvailableSsds.gnvim2__QueryAvailableSsds = gnvim2__QueryAvailableSsds;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryAvailableSsds(soap, &soap_tmp___gnvim2__QueryAvailableSsds);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryAvailableSsds(soap, &soap_tmp___gnvim2__QueryAvailableSsds, "-gnvim2:QueryAvailableSsds", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryAvailableSsds(soap, &soap_tmp___gnvim2__QueryAvailableSsds, "-gnvim2:QueryAvailableSsds", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryAvailableSsdsResponse)
		return soap_closesock(soap);
	gnvim2__QueryAvailableSsdsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryAvailableSsdsResponse.soap_get(soap, "gnvim2:QueryAvailableSsdsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetNFSUser(const char *endpoint, const char *soap_action, gnvim2__SetNFSUserRequestType *gnvim2__SetNFSUser, _gnvim2__SetNFSUserResponse &gnvim2__SetNFSUserResponse)
{	struct soap *soap = this;
	struct __gnvim2__SetNFSUser soap_tmp___gnvim2__SetNFSUser;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SetNFSUser.gnvim2__SetNFSUser = gnvim2__SetNFSUser;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SetNFSUser(soap, &soap_tmp___gnvim2__SetNFSUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SetNFSUser(soap, &soap_tmp___gnvim2__SetNFSUser, "-gnvim2:SetNFSUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SetNFSUser(soap, &soap_tmp___gnvim2__SetNFSUser, "-gnvim2:SetNFSUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SetNFSUserResponse)
		return soap_closesock(soap);
	gnvim2__SetNFSUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SetNFSUserResponse.soap_get(soap, "gnvim2:SetNFSUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ChangeNFSUserPassword(const char *endpoint, const char *soap_action, gnvim2__ChangeNFSUserPasswordRequestType *gnvim2__ChangeNFSUserPassword, _gnvim2__ChangeNFSUserPasswordResponse &gnvim2__ChangeNFSUserPasswordResponse)
{	struct soap *soap = this;
	struct __gnvim2__ChangeNFSUserPassword soap_tmp___gnvim2__ChangeNFSUserPassword;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ChangeNFSUserPassword.gnvim2__ChangeNFSUserPassword = gnvim2__ChangeNFSUserPassword;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ChangeNFSUserPassword(soap, &soap_tmp___gnvim2__ChangeNFSUserPassword);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ChangeNFSUserPassword(soap, &soap_tmp___gnvim2__ChangeNFSUserPassword, "-gnvim2:ChangeNFSUserPassword", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ChangeNFSUserPassword(soap, &soap_tmp___gnvim2__ChangeNFSUserPassword, "-gnvim2:ChangeNFSUserPassword", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ChangeNFSUserPasswordResponse)
		return soap_closesock(soap);
	gnvim2__ChangeNFSUserPasswordResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ChangeNFSUserPasswordResponse.soap_get(soap, "gnvim2:ChangeNFSUserPasswordResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryNFSUser(const char *endpoint, const char *soap_action, gnvim2__QueryNFSUserRequestType *gnvim2__QueryNFSUser, _gnvim2__QueryNFSUserResponse &gnvim2__QueryNFSUserResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryNFSUser soap_tmp___gnvim2__QueryNFSUser;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryNFSUser.gnvim2__QueryNFSUser = gnvim2__QueryNFSUser;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryNFSUser(soap, &soap_tmp___gnvim2__QueryNFSUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryNFSUser(soap, &soap_tmp___gnvim2__QueryNFSUser, "-gnvim2:QueryNFSUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryNFSUser(soap, &soap_tmp___gnvim2__QueryNFSUser, "-gnvim2:QueryNFSUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryNFSUserResponse)
		return soap_closesock(soap);
	gnvim2__QueryNFSUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryNFSUserResponse.soap_get(soap, "gnvim2:QueryNFSUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ClearNFSUser(const char *endpoint, const char *soap_action, gnvim2__ClearNFSUserRequestType *gnvim2__ClearNFSUser, _gnvim2__ClearNFSUserResponse &gnvim2__ClearNFSUserResponse)
{	struct soap *soap = this;
	struct __gnvim2__ClearNFSUser soap_tmp___gnvim2__ClearNFSUser;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ClearNFSUser.gnvim2__ClearNFSUser = gnvim2__ClearNFSUser;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ClearNFSUser(soap, &soap_tmp___gnvim2__ClearNFSUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ClearNFSUser(soap, &soap_tmp___gnvim2__ClearNFSUser, "-gnvim2:ClearNFSUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ClearNFSUser(soap, &soap_tmp___gnvim2__ClearNFSUser, "-gnvim2:ClearNFSUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ClearNFSUserResponse)
		return soap_closesock(soap);
	gnvim2__ClearNFSUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ClearNFSUserResponse.soap_get(soap, "gnvim2:ClearNFSUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::TurnDiskLocatorLedOn_USCORETask(const char *endpoint, const char *soap_action, gnvim2__TurnDiskLocatorLedOnRequestType *gnvim2__TurnDiskLocatorLedOn_USCORETask, _gnvim2__TurnDiskLocatorLedOn_USCORETaskResponse &gnvim2__TurnDiskLocatorLedOn_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__TurnDiskLocatorLedOn_USCORETask soap_tmp___gnvim2__TurnDiskLocatorLedOn_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__TurnDiskLocatorLedOn_USCORETask.gnvim2__TurnDiskLocatorLedOn_USCORETask = gnvim2__TurnDiskLocatorLedOn_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__TurnDiskLocatorLedOn_USCORETask(soap, &soap_tmp___gnvim2__TurnDiskLocatorLedOn_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__TurnDiskLocatorLedOn_USCORETask(soap, &soap_tmp___gnvim2__TurnDiskLocatorLedOn_USCORETask, "-gnvim2:TurnDiskLocatorLedOn_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__TurnDiskLocatorLedOn_USCORETask(soap, &soap_tmp___gnvim2__TurnDiskLocatorLedOn_USCORETask, "-gnvim2:TurnDiskLocatorLedOn_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__TurnDiskLocatorLedOn_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__TurnDiskLocatorLedOn_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__TurnDiskLocatorLedOn_USCORETaskResponse.soap_get(soap, "gnvim2:TurnDiskLocatorLedOn_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::TurnDiskLocatorLedOff_USCORETask(const char *endpoint, const char *soap_action, gnvim2__TurnDiskLocatorLedOffRequestType *gnvim2__TurnDiskLocatorLedOff_USCORETask, _gnvim2__TurnDiskLocatorLedOff_USCORETaskResponse &gnvim2__TurnDiskLocatorLedOff_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__TurnDiskLocatorLedOff_USCORETask soap_tmp___gnvim2__TurnDiskLocatorLedOff_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__TurnDiskLocatorLedOff_USCORETask.gnvim2__TurnDiskLocatorLedOff_USCORETask = gnvim2__TurnDiskLocatorLedOff_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__TurnDiskLocatorLedOff_USCORETask(soap, &soap_tmp___gnvim2__TurnDiskLocatorLedOff_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__TurnDiskLocatorLedOff_USCORETask(soap, &soap_tmp___gnvim2__TurnDiskLocatorLedOff_USCORETask, "-gnvim2:TurnDiskLocatorLedOff_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__TurnDiskLocatorLedOff_USCORETask(soap, &soap_tmp___gnvim2__TurnDiskLocatorLedOff_USCORETask, "-gnvim2:TurnDiskLocatorLedOff_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__TurnDiskLocatorLedOff_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__TurnDiskLocatorLedOff_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__TurnDiskLocatorLedOff_USCORETaskResponse.soap_get(soap, "gnvim2:TurnDiskLocatorLedOff_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MarkAsSsd_USCORETask(const char *endpoint, const char *soap_action, gnvim2__MarkAsSsdRequestType *gnvim2__MarkAsSsd_USCORETask, _gnvim2__MarkAsSsd_USCORETaskResponse &gnvim2__MarkAsSsd_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__MarkAsSsd_USCORETask soap_tmp___gnvim2__MarkAsSsd_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MarkAsSsd_USCORETask.gnvim2__MarkAsSsd_USCORETask = gnvim2__MarkAsSsd_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MarkAsSsd_USCORETask(soap, &soap_tmp___gnvim2__MarkAsSsd_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MarkAsSsd_USCORETask(soap, &soap_tmp___gnvim2__MarkAsSsd_USCORETask, "-gnvim2:MarkAsSsd_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MarkAsSsd_USCORETask(soap, &soap_tmp___gnvim2__MarkAsSsd_USCORETask, "-gnvim2:MarkAsSsd_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MarkAsSsd_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__MarkAsSsd_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MarkAsSsd_USCORETaskResponse.soap_get(soap, "gnvim2:MarkAsSsd_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MarkAsNonSsd_USCORETask(const char *endpoint, const char *soap_action, gnvim2__MarkAsNonSsdRequestType *gnvim2__MarkAsNonSsd_USCORETask, _gnvim2__MarkAsNonSsd_USCORETaskResponse &gnvim2__MarkAsNonSsd_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__MarkAsNonSsd_USCORETask soap_tmp___gnvim2__MarkAsNonSsd_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MarkAsNonSsd_USCORETask.gnvim2__MarkAsNonSsd_USCORETask = gnvim2__MarkAsNonSsd_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MarkAsNonSsd_USCORETask(soap, &soap_tmp___gnvim2__MarkAsNonSsd_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MarkAsNonSsd_USCORETask(soap, &soap_tmp___gnvim2__MarkAsNonSsd_USCORETask, "-gnvim2:MarkAsNonSsd_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MarkAsNonSsd_USCORETask(soap, &soap_tmp___gnvim2__MarkAsNonSsd_USCORETask, "-gnvim2:MarkAsNonSsd_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MarkAsNonSsd_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__MarkAsNonSsd_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MarkAsNonSsd_USCORETaskResponse.soap_get(soap, "gnvim2:MarkAsNonSsd_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MarkAsLocal_USCORETask(const char *endpoint, const char *soap_action, gnvim2__MarkAsLocalRequestType *gnvim2__MarkAsLocal_USCORETask, _gnvim2__MarkAsLocal_USCORETaskResponse &gnvim2__MarkAsLocal_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__MarkAsLocal_USCORETask soap_tmp___gnvim2__MarkAsLocal_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MarkAsLocal_USCORETask.gnvim2__MarkAsLocal_USCORETask = gnvim2__MarkAsLocal_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MarkAsLocal_USCORETask(soap, &soap_tmp___gnvim2__MarkAsLocal_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MarkAsLocal_USCORETask(soap, &soap_tmp___gnvim2__MarkAsLocal_USCORETask, "-gnvim2:MarkAsLocal_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MarkAsLocal_USCORETask(soap, &soap_tmp___gnvim2__MarkAsLocal_USCORETask, "-gnvim2:MarkAsLocal_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MarkAsLocal_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__MarkAsLocal_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MarkAsLocal_USCORETaskResponse.soap_get(soap, "gnvim2:MarkAsLocal_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MarkAsNonLocal_USCORETask(const char *endpoint, const char *soap_action, gnvim2__MarkAsNonLocalRequestType *gnvim2__MarkAsNonLocal_USCORETask, _gnvim2__MarkAsNonLocal_USCORETaskResponse &gnvim2__MarkAsNonLocal_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__MarkAsNonLocal_USCORETask soap_tmp___gnvim2__MarkAsNonLocal_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MarkAsNonLocal_USCORETask.gnvim2__MarkAsNonLocal_USCORETask = gnvim2__MarkAsNonLocal_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MarkAsNonLocal_USCORETask(soap, &soap_tmp___gnvim2__MarkAsNonLocal_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MarkAsNonLocal_USCORETask(soap, &soap_tmp___gnvim2__MarkAsNonLocal_USCORETask, "-gnvim2:MarkAsNonLocal_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MarkAsNonLocal_USCORETask(soap, &soap_tmp___gnvim2__MarkAsNonLocal_USCORETask, "-gnvim2:MarkAsNonLocal_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MarkAsNonLocal_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__MarkAsNonLocal_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MarkAsNonLocal_USCORETaskResponse.soap_get(soap, "gnvim2:MarkAsNonLocal_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ConfigureVFlashResourceEx_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ConfigureVFlashResourceExRequestType *gnvim2__ConfigureVFlashResourceEx_USCORETask, _gnvim2__ConfigureVFlashResourceEx_USCORETaskResponse &gnvim2__ConfigureVFlashResourceEx_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ConfigureVFlashResourceEx_USCORETask soap_tmp___gnvim2__ConfigureVFlashResourceEx_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ConfigureVFlashResourceEx_USCORETask.gnvim2__ConfigureVFlashResourceEx_USCORETask = gnvim2__ConfigureVFlashResourceEx_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ConfigureVFlashResourceEx_USCORETask(soap, &soap_tmp___gnvim2__ConfigureVFlashResourceEx_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ConfigureVFlashResourceEx_USCORETask(soap, &soap_tmp___gnvim2__ConfigureVFlashResourceEx_USCORETask, "-gnvim2:ConfigureVFlashResourceEx_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ConfigureVFlashResourceEx_USCORETask(soap, &soap_tmp___gnvim2__ConfigureVFlashResourceEx_USCORETask, "-gnvim2:ConfigureVFlashResourceEx_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ConfigureVFlashResourceEx_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ConfigureVFlashResourceEx_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ConfigureVFlashResourceEx_USCORETaskResponse.soap_get(soap, "gnvim2:ConfigureVFlashResourceEx_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::HostConfigureVFlashResource(const char *endpoint, const char *soap_action, gnvim2__HostConfigureVFlashResourceRequestType *gnvim2__HostConfigureVFlashResource, _gnvim2__HostConfigureVFlashResourceResponse &gnvim2__HostConfigureVFlashResourceResponse)
{	struct soap *soap = this;
	struct __gnvim2__HostConfigureVFlashResource soap_tmp___gnvim2__HostConfigureVFlashResource;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__HostConfigureVFlashResource.gnvim2__HostConfigureVFlashResource = gnvim2__HostConfigureVFlashResource;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__HostConfigureVFlashResource(soap, &soap_tmp___gnvim2__HostConfigureVFlashResource);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__HostConfigureVFlashResource(soap, &soap_tmp___gnvim2__HostConfigureVFlashResource, "-gnvim2:HostConfigureVFlashResource", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__HostConfigureVFlashResource(soap, &soap_tmp___gnvim2__HostConfigureVFlashResource, "-gnvim2:HostConfigureVFlashResource", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__HostConfigureVFlashResourceResponse)
		return soap_closesock(soap);
	gnvim2__HostConfigureVFlashResourceResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__HostConfigureVFlashResourceResponse.soap_get(soap, "gnvim2:HostConfigureVFlashResourceResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::HostRemoveVFlashResource(const char *endpoint, const char *soap_action, gnvim2__HostRemoveVFlashResourceRequestType *gnvim2__HostRemoveVFlashResource, _gnvim2__HostRemoveVFlashResourceResponse &gnvim2__HostRemoveVFlashResourceResponse)
{	struct soap *soap = this;
	struct __gnvim2__HostRemoveVFlashResource soap_tmp___gnvim2__HostRemoveVFlashResource;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__HostRemoveVFlashResource.gnvim2__HostRemoveVFlashResource = gnvim2__HostRemoveVFlashResource;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__HostRemoveVFlashResource(soap, &soap_tmp___gnvim2__HostRemoveVFlashResource);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__HostRemoveVFlashResource(soap, &soap_tmp___gnvim2__HostRemoveVFlashResource, "-gnvim2:HostRemoveVFlashResource", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__HostRemoveVFlashResource(soap, &soap_tmp___gnvim2__HostRemoveVFlashResource, "-gnvim2:HostRemoveVFlashResource", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__HostRemoveVFlashResourceResponse)
		return soap_closesock(soap);
	gnvim2__HostRemoveVFlashResourceResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__HostRemoveVFlashResourceResponse.soap_get(soap, "gnvim2:HostRemoveVFlashResourceResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::HostConfigVFlashCache(const char *endpoint, const char *soap_action, gnvim2__HostConfigVFlashCacheRequestType *gnvim2__HostConfigVFlashCache, _gnvim2__HostConfigVFlashCacheResponse &gnvim2__HostConfigVFlashCacheResponse)
{	struct soap *soap = this;
	struct __gnvim2__HostConfigVFlashCache soap_tmp___gnvim2__HostConfigVFlashCache;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__HostConfigVFlashCache.gnvim2__HostConfigVFlashCache = gnvim2__HostConfigVFlashCache;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__HostConfigVFlashCache(soap, &soap_tmp___gnvim2__HostConfigVFlashCache);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__HostConfigVFlashCache(soap, &soap_tmp___gnvim2__HostConfigVFlashCache, "-gnvim2:HostConfigVFlashCache", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__HostConfigVFlashCache(soap, &soap_tmp___gnvim2__HostConfigVFlashCache, "-gnvim2:HostConfigVFlashCache", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__HostConfigVFlashCacheResponse)
		return soap_closesock(soap);
	gnvim2__HostConfigVFlashCacheResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__HostConfigVFlashCacheResponse.soap_get(soap, "gnvim2:HostConfigVFlashCacheResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::HostGetVFlashModuleDefaultConfig(const char *endpoint, const char *soap_action, gnvim2__HostGetVFlashModuleDefaultConfigRequestType *gnvim2__HostGetVFlashModuleDefaultConfig, _gnvim2__HostGetVFlashModuleDefaultConfigResponse &gnvim2__HostGetVFlashModuleDefaultConfigResponse)
{	struct soap *soap = this;
	struct __gnvim2__HostGetVFlashModuleDefaultConfig soap_tmp___gnvim2__HostGetVFlashModuleDefaultConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__HostGetVFlashModuleDefaultConfig.gnvim2__HostGetVFlashModuleDefaultConfig = gnvim2__HostGetVFlashModuleDefaultConfig;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__HostGetVFlashModuleDefaultConfig(soap, &soap_tmp___gnvim2__HostGetVFlashModuleDefaultConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__HostGetVFlashModuleDefaultConfig(soap, &soap_tmp___gnvim2__HostGetVFlashModuleDefaultConfig, "-gnvim2:HostGetVFlashModuleDefaultConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__HostGetVFlashModuleDefaultConfig(soap, &soap_tmp___gnvim2__HostGetVFlashModuleDefaultConfig, "-gnvim2:HostGetVFlashModuleDefaultConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__HostGetVFlashModuleDefaultConfigResponse)
		return soap_closesock(soap);
	gnvim2__HostGetVFlashModuleDefaultConfigResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__HostGetVFlashModuleDefaultConfigResponse.soap_get(soap, "gnvim2:HostGetVFlashModuleDefaultConfigResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateIpConfig(const char *endpoint, const char *soap_action, gnvim2__UpdateIpConfigRequestType *gnvim2__UpdateIpConfig, _gnvim2__UpdateIpConfigResponse &gnvim2__UpdateIpConfigResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateIpConfig soap_tmp___gnvim2__UpdateIpConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateIpConfig.gnvim2__UpdateIpConfig = gnvim2__UpdateIpConfig;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateIpConfig(soap, &soap_tmp___gnvim2__UpdateIpConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateIpConfig(soap, &soap_tmp___gnvim2__UpdateIpConfig, "-gnvim2:UpdateIpConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateIpConfig(soap, &soap_tmp___gnvim2__UpdateIpConfig, "-gnvim2:UpdateIpConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateIpConfigResponse)
		return soap_closesock(soap);
	gnvim2__UpdateIpConfigResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateIpConfigResponse.soap_get(soap, "gnvim2:UpdateIpConfigResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SelectVnic(const char *endpoint, const char *soap_action, gnvim2__SelectVnicRequestType *gnvim2__SelectVnic, _gnvim2__SelectVnicResponse &gnvim2__SelectVnicResponse)
{	struct soap *soap = this;
	struct __gnvim2__SelectVnic soap_tmp___gnvim2__SelectVnic;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SelectVnic.gnvim2__SelectVnic = gnvim2__SelectVnic;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SelectVnic(soap, &soap_tmp___gnvim2__SelectVnic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SelectVnic(soap, &soap_tmp___gnvim2__SelectVnic, "-gnvim2:SelectVnic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SelectVnic(soap, &soap_tmp___gnvim2__SelectVnic, "-gnvim2:SelectVnic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SelectVnicResponse)
		return soap_closesock(soap);
	gnvim2__SelectVnicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SelectVnicResponse.soap_get(soap, "gnvim2:SelectVnicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeselectVnic(const char *endpoint, const char *soap_action, gnvim2__DeselectVnicRequestType *gnvim2__DeselectVnic, _gnvim2__DeselectVnicResponse &gnvim2__DeselectVnicResponse)
{	struct soap *soap = this;
	struct __gnvim2__DeselectVnic soap_tmp___gnvim2__DeselectVnic;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DeselectVnic.gnvim2__DeselectVnic = gnvim2__DeselectVnic;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DeselectVnic(soap, &soap_tmp___gnvim2__DeselectVnic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DeselectVnic(soap, &soap_tmp___gnvim2__DeselectVnic, "-gnvim2:DeselectVnic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DeselectVnic(soap, &soap_tmp___gnvim2__DeselectVnic, "-gnvim2:DeselectVnic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DeselectVnicResponse)
		return soap_closesock(soap);
	gnvim2__DeselectVnicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DeselectVnicResponse.soap_get(soap, "gnvim2:DeselectVnicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryNetConfig(const char *endpoint, const char *soap_action, gnvim2__QueryNetConfigRequestType *gnvim2__QueryNetConfig, _gnvim2__QueryNetConfigResponse &gnvim2__QueryNetConfigResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryNetConfig soap_tmp___gnvim2__QueryNetConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryNetConfig.gnvim2__QueryNetConfig = gnvim2__QueryNetConfig;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryNetConfig(soap, &soap_tmp___gnvim2__QueryNetConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryNetConfig(soap, &soap_tmp___gnvim2__QueryNetConfig, "-gnvim2:QueryNetConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryNetConfig(soap, &soap_tmp___gnvim2__QueryNetConfig, "-gnvim2:QueryNetConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryNetConfigResponse)
		return soap_closesock(soap);
	gnvim2__QueryNetConfigResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryNetConfigResponse.soap_get(soap, "gnvim2:QueryNetConfigResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SelectVnicForNicType(const char *endpoint, const char *soap_action, gnvim2__SelectVnicForNicTypeRequestType *gnvim2__SelectVnicForNicType, _gnvim2__SelectVnicForNicTypeResponse &gnvim2__SelectVnicForNicTypeResponse)
{	struct soap *soap = this;
	struct __gnvim2__SelectVnicForNicType soap_tmp___gnvim2__SelectVnicForNicType;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SelectVnicForNicType.gnvim2__SelectVnicForNicType = gnvim2__SelectVnicForNicType;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SelectVnicForNicType(soap, &soap_tmp___gnvim2__SelectVnicForNicType);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SelectVnicForNicType(soap, &soap_tmp___gnvim2__SelectVnicForNicType, "-gnvim2:SelectVnicForNicType", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SelectVnicForNicType(soap, &soap_tmp___gnvim2__SelectVnicForNicType, "-gnvim2:SelectVnicForNicType", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SelectVnicForNicTypeResponse)
		return soap_closesock(soap);
	gnvim2__SelectVnicForNicTypeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SelectVnicForNicTypeResponse.soap_get(soap, "gnvim2:SelectVnicForNicTypeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeselectVnicForNicType(const char *endpoint, const char *soap_action, gnvim2__DeselectVnicForNicTypeRequestType *gnvim2__DeselectVnicForNicType, _gnvim2__DeselectVnicForNicTypeResponse &gnvim2__DeselectVnicForNicTypeResponse)
{	struct soap *soap = this;
	struct __gnvim2__DeselectVnicForNicType soap_tmp___gnvim2__DeselectVnicForNicType;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DeselectVnicForNicType.gnvim2__DeselectVnicForNicType = gnvim2__DeselectVnicForNicType;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DeselectVnicForNicType(soap, &soap_tmp___gnvim2__DeselectVnicForNicType);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DeselectVnicForNicType(soap, &soap_tmp___gnvim2__DeselectVnicForNicType, "-gnvim2:DeselectVnicForNicType", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DeselectVnicForNicType(soap, &soap_tmp___gnvim2__DeselectVnicForNicType, "-gnvim2:DeselectVnicForNicType", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DeselectVnicForNicTypeResponse)
		return soap_closesock(soap);
	gnvim2__DeselectVnicForNicTypeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DeselectVnicForNicTypeResponse.soap_get(soap, "gnvim2:DeselectVnicForNicTypeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryCmmds(const char *endpoint, const char *soap_action, gnvim2__QueryCmmdsRequestType *gnvim2__QueryCmmds, _gnvim2__QueryCmmdsResponse &gnvim2__QueryCmmdsResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryCmmds soap_tmp___gnvim2__QueryCmmds;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryCmmds.gnvim2__QueryCmmds = gnvim2__QueryCmmds;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryCmmds(soap, &soap_tmp___gnvim2__QueryCmmds);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryCmmds(soap, &soap_tmp___gnvim2__QueryCmmds, "-gnvim2:QueryCmmds", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryCmmds(soap, &soap_tmp___gnvim2__QueryCmmds, "-gnvim2:QueryCmmds", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryCmmdsResponse)
		return soap_closesock(soap);
	gnvim2__QueryCmmdsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryCmmdsResponse.soap_get(soap, "gnvim2:QueryCmmdsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryPhysicalVsanDisks(const char *endpoint, const char *soap_action, gnvim2__QueryPhysicalVsanDisksRequestType *gnvim2__QueryPhysicalVsanDisks, _gnvim2__QueryPhysicalVsanDisksResponse &gnvim2__QueryPhysicalVsanDisksResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryPhysicalVsanDisks soap_tmp___gnvim2__QueryPhysicalVsanDisks;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryPhysicalVsanDisks.gnvim2__QueryPhysicalVsanDisks = gnvim2__QueryPhysicalVsanDisks;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryPhysicalVsanDisks(soap, &soap_tmp___gnvim2__QueryPhysicalVsanDisks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryPhysicalVsanDisks(soap, &soap_tmp___gnvim2__QueryPhysicalVsanDisks, "-gnvim2:QueryPhysicalVsanDisks", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryPhysicalVsanDisks(soap, &soap_tmp___gnvim2__QueryPhysicalVsanDisks, "-gnvim2:QueryPhysicalVsanDisks", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryPhysicalVsanDisksResponse)
		return soap_closesock(soap);
	gnvim2__QueryPhysicalVsanDisksResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryPhysicalVsanDisksResponse.soap_get(soap, "gnvim2:QueryPhysicalVsanDisksResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryVsanObjects(const char *endpoint, const char *soap_action, gnvim2__QueryVsanObjectsRequestType *gnvim2__QueryVsanObjects, _gnvim2__QueryVsanObjectsResponse &gnvim2__QueryVsanObjectsResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryVsanObjects soap_tmp___gnvim2__QueryVsanObjects;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryVsanObjects.gnvim2__QueryVsanObjects = gnvim2__QueryVsanObjects;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryVsanObjects(soap, &soap_tmp___gnvim2__QueryVsanObjects);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryVsanObjects(soap, &soap_tmp___gnvim2__QueryVsanObjects, "-gnvim2:QueryVsanObjects", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryVsanObjects(soap, &soap_tmp___gnvim2__QueryVsanObjects, "-gnvim2:QueryVsanObjects", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryVsanObjectsResponse)
		return soap_closesock(soap);
	gnvim2__QueryVsanObjectsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryVsanObjectsResponse.soap_get(soap, "gnvim2:QueryVsanObjectsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryObjectsOnPhysicalVsanDisk(const char *endpoint, const char *soap_action, gnvim2__QueryObjectsOnPhysicalVsanDiskRequestType *gnvim2__QueryObjectsOnPhysicalVsanDisk, _gnvim2__QueryObjectsOnPhysicalVsanDiskResponse &gnvim2__QueryObjectsOnPhysicalVsanDiskResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryObjectsOnPhysicalVsanDisk soap_tmp___gnvim2__QueryObjectsOnPhysicalVsanDisk;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryObjectsOnPhysicalVsanDisk.gnvim2__QueryObjectsOnPhysicalVsanDisk = gnvim2__QueryObjectsOnPhysicalVsanDisk;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryObjectsOnPhysicalVsanDisk(soap, &soap_tmp___gnvim2__QueryObjectsOnPhysicalVsanDisk);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryObjectsOnPhysicalVsanDisk(soap, &soap_tmp___gnvim2__QueryObjectsOnPhysicalVsanDisk, "-gnvim2:QueryObjectsOnPhysicalVsanDisk", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryObjectsOnPhysicalVsanDisk(soap, &soap_tmp___gnvim2__QueryObjectsOnPhysicalVsanDisk, "-gnvim2:QueryObjectsOnPhysicalVsanDisk", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryObjectsOnPhysicalVsanDiskResponse)
		return soap_closesock(soap);
	gnvim2__QueryObjectsOnPhysicalVsanDiskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryObjectsOnPhysicalVsanDiskResponse.soap_get(soap, "gnvim2:QueryObjectsOnPhysicalVsanDiskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AbdicateDomOwnership(const char *endpoint, const char *soap_action, gnvim2__AbdicateDomOwnershipRequestType *gnvim2__AbdicateDomOwnership, _gnvim2__AbdicateDomOwnershipResponse &gnvim2__AbdicateDomOwnershipResponse)
{	struct soap *soap = this;
	struct __gnvim2__AbdicateDomOwnership soap_tmp___gnvim2__AbdicateDomOwnership;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AbdicateDomOwnership.gnvim2__AbdicateDomOwnership = gnvim2__AbdicateDomOwnership;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AbdicateDomOwnership(soap, &soap_tmp___gnvim2__AbdicateDomOwnership);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AbdicateDomOwnership(soap, &soap_tmp___gnvim2__AbdicateDomOwnership, "-gnvim2:AbdicateDomOwnership", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AbdicateDomOwnership(soap, &soap_tmp___gnvim2__AbdicateDomOwnership, "-gnvim2:AbdicateDomOwnership", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AbdicateDomOwnershipResponse)
		return soap_closesock(soap);
	gnvim2__AbdicateDomOwnershipResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AbdicateDomOwnershipResponse.soap_get(soap, "gnvim2:AbdicateDomOwnershipResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryVsanStatistics(const char *endpoint, const char *soap_action, gnvim2__QueryVsanStatisticsRequestType *gnvim2__QueryVsanStatistics, _gnvim2__QueryVsanStatisticsResponse &gnvim2__QueryVsanStatisticsResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryVsanStatistics soap_tmp___gnvim2__QueryVsanStatistics;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryVsanStatistics.gnvim2__QueryVsanStatistics = gnvim2__QueryVsanStatistics;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryVsanStatistics(soap, &soap_tmp___gnvim2__QueryVsanStatistics);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryVsanStatistics(soap, &soap_tmp___gnvim2__QueryVsanStatistics, "-gnvim2:QueryVsanStatistics", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryVsanStatistics(soap, &soap_tmp___gnvim2__QueryVsanStatistics, "-gnvim2:QueryVsanStatistics", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryVsanStatisticsResponse)
		return soap_closesock(soap);
	gnvim2__QueryVsanStatisticsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryVsanStatisticsResponse.soap_get(soap, "gnvim2:QueryVsanStatisticsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureDomObject(const char *endpoint, const char *soap_action, gnvim2__ReconfigureDomObjectRequestType *gnvim2__ReconfigureDomObject, _gnvim2__ReconfigureDomObjectResponse &gnvim2__ReconfigureDomObjectResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReconfigureDomObject soap_tmp___gnvim2__ReconfigureDomObject;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReconfigureDomObject.gnvim2__ReconfigureDomObject = gnvim2__ReconfigureDomObject;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReconfigureDomObject(soap, &soap_tmp___gnvim2__ReconfigureDomObject);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReconfigureDomObject(soap, &soap_tmp___gnvim2__ReconfigureDomObject, "-gnvim2:ReconfigureDomObject", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReconfigureDomObject(soap, &soap_tmp___gnvim2__ReconfigureDomObject, "-gnvim2:ReconfigureDomObject", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReconfigureDomObjectResponse)
		return soap_closesock(soap);
	gnvim2__ReconfigureDomObjectResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReconfigureDomObjectResponse.soap_get(soap, "gnvim2:ReconfigureDomObjectResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QuerySyncingVsanObjects(const char *endpoint, const char *soap_action, gnvim2__QuerySyncingVsanObjectsRequestType *gnvim2__QuerySyncingVsanObjects, _gnvim2__QuerySyncingVsanObjectsResponse &gnvim2__QuerySyncingVsanObjectsResponse)
{	struct soap *soap = this;
	struct __gnvim2__QuerySyncingVsanObjects soap_tmp___gnvim2__QuerySyncingVsanObjects;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QuerySyncingVsanObjects.gnvim2__QuerySyncingVsanObjects = gnvim2__QuerySyncingVsanObjects;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QuerySyncingVsanObjects(soap, &soap_tmp___gnvim2__QuerySyncingVsanObjects);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QuerySyncingVsanObjects(soap, &soap_tmp___gnvim2__QuerySyncingVsanObjects, "-gnvim2:QuerySyncingVsanObjects", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QuerySyncingVsanObjects(soap, &soap_tmp___gnvim2__QuerySyncingVsanObjects, "-gnvim2:QuerySyncingVsanObjects", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QuerySyncingVsanObjectsResponse)
		return soap_closesock(soap);
	gnvim2__QuerySyncingVsanObjectsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QuerySyncingVsanObjectsResponse.soap_get(soap, "gnvim2:QuerySyncingVsanObjectsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RunVsanPhysicalDiskDiagnostics(const char *endpoint, const char *soap_action, gnvim2__RunVsanPhysicalDiskDiagnosticsRequestType *gnvim2__RunVsanPhysicalDiskDiagnostics, _gnvim2__RunVsanPhysicalDiskDiagnosticsResponse &gnvim2__RunVsanPhysicalDiskDiagnosticsResponse)
{	struct soap *soap = this;
	struct __gnvim2__RunVsanPhysicalDiskDiagnostics soap_tmp___gnvim2__RunVsanPhysicalDiskDiagnostics;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RunVsanPhysicalDiskDiagnostics.gnvim2__RunVsanPhysicalDiskDiagnostics = gnvim2__RunVsanPhysicalDiskDiagnostics;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RunVsanPhysicalDiskDiagnostics(soap, &soap_tmp___gnvim2__RunVsanPhysicalDiskDiagnostics);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RunVsanPhysicalDiskDiagnostics(soap, &soap_tmp___gnvim2__RunVsanPhysicalDiskDiagnostics, "-gnvim2:RunVsanPhysicalDiskDiagnostics", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RunVsanPhysicalDiskDiagnostics(soap, &soap_tmp___gnvim2__RunVsanPhysicalDiskDiagnostics, "-gnvim2:RunVsanPhysicalDiskDiagnostics", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RunVsanPhysicalDiskDiagnosticsResponse)
		return soap_closesock(soap);
	gnvim2__RunVsanPhysicalDiskDiagnosticsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RunVsanPhysicalDiskDiagnosticsResponse.soap_get(soap, "gnvim2:RunVsanPhysicalDiskDiagnosticsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::GetVsanObjExtAttrs(const char *endpoint, const char *soap_action, gnvim2__GetVsanObjExtAttrsRequestType *gnvim2__GetVsanObjExtAttrs, _gnvim2__GetVsanObjExtAttrsResponse &gnvim2__GetVsanObjExtAttrsResponse)
{	struct soap *soap = this;
	struct __gnvim2__GetVsanObjExtAttrs soap_tmp___gnvim2__GetVsanObjExtAttrs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__GetVsanObjExtAttrs.gnvim2__GetVsanObjExtAttrs = gnvim2__GetVsanObjExtAttrs;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__GetVsanObjExtAttrs(soap, &soap_tmp___gnvim2__GetVsanObjExtAttrs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__GetVsanObjExtAttrs(soap, &soap_tmp___gnvim2__GetVsanObjExtAttrs, "-gnvim2:GetVsanObjExtAttrs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__GetVsanObjExtAttrs(soap, &soap_tmp___gnvim2__GetVsanObjExtAttrs, "-gnvim2:GetVsanObjExtAttrs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__GetVsanObjExtAttrsResponse)
		return soap_closesock(soap);
	gnvim2__GetVsanObjExtAttrsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__GetVsanObjExtAttrsResponse.soap_get(soap, "gnvim2:GetVsanObjExtAttrsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigurationSatisfiable(const char *endpoint, const char *soap_action, gnvim2__ReconfigurationSatisfiableRequestType *gnvim2__ReconfigurationSatisfiable, _gnvim2__ReconfigurationSatisfiableResponse &gnvim2__ReconfigurationSatisfiableResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReconfigurationSatisfiable soap_tmp___gnvim2__ReconfigurationSatisfiable;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReconfigurationSatisfiable.gnvim2__ReconfigurationSatisfiable = gnvim2__ReconfigurationSatisfiable;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReconfigurationSatisfiable(soap, &soap_tmp___gnvim2__ReconfigurationSatisfiable);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReconfigurationSatisfiable(soap, &soap_tmp___gnvim2__ReconfigurationSatisfiable, "-gnvim2:ReconfigurationSatisfiable", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReconfigurationSatisfiable(soap, &soap_tmp___gnvim2__ReconfigurationSatisfiable, "-gnvim2:ReconfigurationSatisfiable", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReconfigurationSatisfiableResponse)
		return soap_closesock(soap);
	gnvim2__ReconfigurationSatisfiableResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReconfigurationSatisfiableResponse.soap_get(soap, "gnvim2:ReconfigurationSatisfiableResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CanProvisionObjects(const char *endpoint, const char *soap_action, gnvim2__CanProvisionObjectsRequestType *gnvim2__CanProvisionObjects, _gnvim2__CanProvisionObjectsResponse &gnvim2__CanProvisionObjectsResponse)
{	struct soap *soap = this;
	struct __gnvim2__CanProvisionObjects soap_tmp___gnvim2__CanProvisionObjects;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CanProvisionObjects.gnvim2__CanProvisionObjects = gnvim2__CanProvisionObjects;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CanProvisionObjects(soap, &soap_tmp___gnvim2__CanProvisionObjects);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CanProvisionObjects(soap, &soap_tmp___gnvim2__CanProvisionObjects, "-gnvim2:CanProvisionObjects", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CanProvisionObjects(soap, &soap_tmp___gnvim2__CanProvisionObjects, "-gnvim2:CanProvisionObjects", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CanProvisionObjectsResponse)
		return soap_closesock(soap);
	gnvim2__CanProvisionObjectsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CanProvisionObjectsResponse.soap_get(soap, "gnvim2:CanProvisionObjectsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeleteVsanObjects(const char *endpoint, const char *soap_action, gnvim2__DeleteVsanObjectsRequestType *gnvim2__DeleteVsanObjects, _gnvim2__DeleteVsanObjectsResponse &gnvim2__DeleteVsanObjectsResponse)
{	struct soap *soap = this;
	struct __gnvim2__DeleteVsanObjects soap_tmp___gnvim2__DeleteVsanObjects;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DeleteVsanObjects.gnvim2__DeleteVsanObjects = gnvim2__DeleteVsanObjects;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DeleteVsanObjects(soap, &soap_tmp___gnvim2__DeleteVsanObjects);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DeleteVsanObjects(soap, &soap_tmp___gnvim2__DeleteVsanObjects, "-gnvim2:DeleteVsanObjects", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DeleteVsanObjects(soap, &soap_tmp___gnvim2__DeleteVsanObjects, "-gnvim2:DeleteVsanObjects", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DeleteVsanObjectsResponse)
		return soap_closesock(soap);
	gnvim2__DeleteVsanObjectsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DeleteVsanObjectsResponse.soap_get(soap, "gnvim2:DeleteVsanObjectsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpgradeVsanObjects(const char *endpoint, const char *soap_action, gnvim2__UpgradeVsanObjectsRequestType *gnvim2__UpgradeVsanObjects, _gnvim2__UpgradeVsanObjectsResponse &gnvim2__UpgradeVsanObjectsResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpgradeVsanObjects soap_tmp___gnvim2__UpgradeVsanObjects;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpgradeVsanObjects.gnvim2__UpgradeVsanObjects = gnvim2__UpgradeVsanObjects;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpgradeVsanObjects(soap, &soap_tmp___gnvim2__UpgradeVsanObjects);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpgradeVsanObjects(soap, &soap_tmp___gnvim2__UpgradeVsanObjects, "-gnvim2:UpgradeVsanObjects", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpgradeVsanObjects(soap, &soap_tmp___gnvim2__UpgradeVsanObjects, "-gnvim2:UpgradeVsanObjects", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpgradeVsanObjectsResponse)
		return soap_closesock(soap);
	gnvim2__UpgradeVsanObjectsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpgradeVsanObjectsResponse.soap_get(soap, "gnvim2:UpgradeVsanObjectsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryVsanObjectUuidsByFilter(const char *endpoint, const char *soap_action, gnvim2__QueryVsanObjectUuidsByFilterRequestType *gnvim2__QueryVsanObjectUuidsByFilter, _gnvim2__QueryVsanObjectUuidsByFilterResponse &gnvim2__QueryVsanObjectUuidsByFilterResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryVsanObjectUuidsByFilter soap_tmp___gnvim2__QueryVsanObjectUuidsByFilter;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryVsanObjectUuidsByFilter.gnvim2__QueryVsanObjectUuidsByFilter = gnvim2__QueryVsanObjectUuidsByFilter;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryVsanObjectUuidsByFilter(soap, &soap_tmp___gnvim2__QueryVsanObjectUuidsByFilter);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryVsanObjectUuidsByFilter(soap, &soap_tmp___gnvim2__QueryVsanObjectUuidsByFilter, "-gnvim2:QueryVsanObjectUuidsByFilter", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryVsanObjectUuidsByFilter(soap, &soap_tmp___gnvim2__QueryVsanObjectUuidsByFilter, "-gnvim2:QueryVsanObjectUuidsByFilter", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryVsanObjectUuidsByFilterResponse)
		return soap_closesock(soap);
	gnvim2__QueryVsanObjectUuidsByFilterResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryVsanObjectUuidsByFilterResponse.soap_get(soap, "gnvim2:QueryVsanObjectUuidsByFilterResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryDisksForVsan(const char *endpoint, const char *soap_action, gnvim2__QueryDisksForVsanRequestType *gnvim2__QueryDisksForVsan, _gnvim2__QueryDisksForVsanResponse &gnvim2__QueryDisksForVsanResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryDisksForVsan soap_tmp___gnvim2__QueryDisksForVsan;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryDisksForVsan.gnvim2__QueryDisksForVsan = gnvim2__QueryDisksForVsan;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryDisksForVsan(soap, &soap_tmp___gnvim2__QueryDisksForVsan);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryDisksForVsan(soap, &soap_tmp___gnvim2__QueryDisksForVsan, "-gnvim2:QueryDisksForVsan", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryDisksForVsan(soap, &soap_tmp___gnvim2__QueryDisksForVsan, "-gnvim2:QueryDisksForVsan", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryDisksForVsanResponse)
		return soap_closesock(soap);
	gnvim2__QueryDisksForVsanResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryDisksForVsanResponse.soap_get(soap, "gnvim2:QueryDisksForVsanResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddDisks_USCORETask(const char *endpoint, const char *soap_action, gnvim2__AddDisksRequestType *gnvim2__AddDisks_USCORETask, _gnvim2__AddDisks_USCORETaskResponse &gnvim2__AddDisks_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__AddDisks_USCORETask soap_tmp___gnvim2__AddDisks_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AddDisks_USCORETask.gnvim2__AddDisks_USCORETask = gnvim2__AddDisks_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AddDisks_USCORETask(soap, &soap_tmp___gnvim2__AddDisks_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AddDisks_USCORETask(soap, &soap_tmp___gnvim2__AddDisks_USCORETask, "-gnvim2:AddDisks_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AddDisks_USCORETask(soap, &soap_tmp___gnvim2__AddDisks_USCORETask, "-gnvim2:AddDisks_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AddDisks_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__AddDisks_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AddDisks_USCORETaskResponse.soap_get(soap, "gnvim2:AddDisks_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::InitializeDisks_USCORETask(const char *endpoint, const char *soap_action, gnvim2__InitializeDisksRequestType *gnvim2__InitializeDisks_USCORETask, _gnvim2__InitializeDisks_USCORETaskResponse &gnvim2__InitializeDisks_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__InitializeDisks_USCORETask soap_tmp___gnvim2__InitializeDisks_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__InitializeDisks_USCORETask.gnvim2__InitializeDisks_USCORETask = gnvim2__InitializeDisks_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__InitializeDisks_USCORETask(soap, &soap_tmp___gnvim2__InitializeDisks_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__InitializeDisks_USCORETask(soap, &soap_tmp___gnvim2__InitializeDisks_USCORETask, "-gnvim2:InitializeDisks_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__InitializeDisks_USCORETask(soap, &soap_tmp___gnvim2__InitializeDisks_USCORETask, "-gnvim2:InitializeDisks_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__InitializeDisks_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__InitializeDisks_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__InitializeDisks_USCORETaskResponse.soap_get(soap, "gnvim2:InitializeDisks_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveDisk_USCORETask(const char *endpoint, const char *soap_action, gnvim2__RemoveDiskRequestType *gnvim2__RemoveDisk_USCORETask, _gnvim2__RemoveDisk_USCORETaskResponse &gnvim2__RemoveDisk_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveDisk_USCORETask soap_tmp___gnvim2__RemoveDisk_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveDisk_USCORETask.gnvim2__RemoveDisk_USCORETask = gnvim2__RemoveDisk_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveDisk_USCORETask(soap, &soap_tmp___gnvim2__RemoveDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveDisk_USCORETask(soap, &soap_tmp___gnvim2__RemoveDisk_USCORETask, "-gnvim2:RemoveDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveDisk_USCORETask(soap, &soap_tmp___gnvim2__RemoveDisk_USCORETask, "-gnvim2:RemoveDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveDisk_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__RemoveDisk_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveDisk_USCORETaskResponse.soap_get(soap, "gnvim2:RemoveDisk_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveDiskMapping_USCORETask(const char *endpoint, const char *soap_action, gnvim2__RemoveDiskMappingRequestType *gnvim2__RemoveDiskMapping_USCORETask, _gnvim2__RemoveDiskMapping_USCORETaskResponse &gnvim2__RemoveDiskMapping_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveDiskMapping_USCORETask soap_tmp___gnvim2__RemoveDiskMapping_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveDiskMapping_USCORETask.gnvim2__RemoveDiskMapping_USCORETask = gnvim2__RemoveDiskMapping_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveDiskMapping_USCORETask(soap, &soap_tmp___gnvim2__RemoveDiskMapping_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveDiskMapping_USCORETask(soap, &soap_tmp___gnvim2__RemoveDiskMapping_USCORETask, "-gnvim2:RemoveDiskMapping_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveDiskMapping_USCORETask(soap, &soap_tmp___gnvim2__RemoveDiskMapping_USCORETask, "-gnvim2:RemoveDiskMapping_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveDiskMapping_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__RemoveDiskMapping_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveDiskMapping_USCORETaskResponse.soap_get(soap, "gnvim2:RemoveDiskMapping_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UnmountDiskMapping_USCORETask(const char *endpoint, const char *soap_action, gnvim2__UnmountDiskMappingRequestType *gnvim2__UnmountDiskMapping_USCORETask, _gnvim2__UnmountDiskMapping_USCORETaskResponse &gnvim2__UnmountDiskMapping_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__UnmountDiskMapping_USCORETask soap_tmp___gnvim2__UnmountDiskMapping_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UnmountDiskMapping_USCORETask.gnvim2__UnmountDiskMapping_USCORETask = gnvim2__UnmountDiskMapping_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UnmountDiskMapping_USCORETask(soap, &soap_tmp___gnvim2__UnmountDiskMapping_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UnmountDiskMapping_USCORETask(soap, &soap_tmp___gnvim2__UnmountDiskMapping_USCORETask, "-gnvim2:UnmountDiskMapping_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UnmountDiskMapping_USCORETask(soap, &soap_tmp___gnvim2__UnmountDiskMapping_USCORETask, "-gnvim2:UnmountDiskMapping_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UnmountDiskMapping_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__UnmountDiskMapping_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UnmountDiskMapping_USCORETaskResponse.soap_get(soap, "gnvim2:UnmountDiskMapping_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateVsan_USCORETask(const char *endpoint, const char *soap_action, gnvim2__UpdateVsanRequestType *gnvim2__UpdateVsan_USCORETask, _gnvim2__UpdateVsan_USCORETaskResponse &gnvim2__UpdateVsan_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateVsan_USCORETask soap_tmp___gnvim2__UpdateVsan_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateVsan_USCORETask.gnvim2__UpdateVsan_USCORETask = gnvim2__UpdateVsan_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateVsan_USCORETask(soap, &soap_tmp___gnvim2__UpdateVsan_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateVsan_USCORETask(soap, &soap_tmp___gnvim2__UpdateVsan_USCORETask, "-gnvim2:UpdateVsan_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateVsan_USCORETask(soap, &soap_tmp___gnvim2__UpdateVsan_USCORETask, "-gnvim2:UpdateVsan_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateVsan_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__UpdateVsan_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateVsan_USCORETaskResponse.soap_get(soap, "gnvim2:UpdateVsan_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryHostStatus(const char *endpoint, const char *soap_action, gnvim2__QueryHostStatusRequestType *gnvim2__QueryHostStatus, _gnvim2__QueryHostStatusResponse &gnvim2__QueryHostStatusResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryHostStatus soap_tmp___gnvim2__QueryHostStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryHostStatus.gnvim2__QueryHostStatus = gnvim2__QueryHostStatus;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryHostStatus(soap, &soap_tmp___gnvim2__QueryHostStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryHostStatus(soap, &soap_tmp___gnvim2__QueryHostStatus, "-gnvim2:QueryHostStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryHostStatus(soap, &soap_tmp___gnvim2__QueryHostStatus, "-gnvim2:QueryHostStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryHostStatusResponse)
		return soap_closesock(soap);
	gnvim2__QueryHostStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryHostStatusResponse.soap_get(soap, "gnvim2:QueryHostStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EvacuateVsanNode_USCORETask(const char *endpoint, const char *soap_action, gnvim2__EvacuateVsanNodeRequestType *gnvim2__EvacuateVsanNode_USCORETask, _gnvim2__EvacuateVsanNode_USCORETaskResponse &gnvim2__EvacuateVsanNode_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__EvacuateVsanNode_USCORETask soap_tmp___gnvim2__EvacuateVsanNode_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__EvacuateVsanNode_USCORETask.gnvim2__EvacuateVsanNode_USCORETask = gnvim2__EvacuateVsanNode_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__EvacuateVsanNode_USCORETask(soap, &soap_tmp___gnvim2__EvacuateVsanNode_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__EvacuateVsanNode_USCORETask(soap, &soap_tmp___gnvim2__EvacuateVsanNode_USCORETask, "-gnvim2:EvacuateVsanNode_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__EvacuateVsanNode_USCORETask(soap, &soap_tmp___gnvim2__EvacuateVsanNode_USCORETask, "-gnvim2:EvacuateVsanNode_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__EvacuateVsanNode_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__EvacuateVsanNode_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__EvacuateVsanNode_USCORETaskResponse.soap_get(soap, "gnvim2:EvacuateVsanNode_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RecommissionVsanNode_USCORETask(const char *endpoint, const char *soap_action, gnvim2__RecommissionVsanNodeRequestType *gnvim2__RecommissionVsanNode_USCORETask, _gnvim2__RecommissionVsanNode_USCORETaskResponse &gnvim2__RecommissionVsanNode_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__RecommissionVsanNode_USCORETask soap_tmp___gnvim2__RecommissionVsanNode_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RecommissionVsanNode_USCORETask.gnvim2__RecommissionVsanNode_USCORETask = gnvim2__RecommissionVsanNode_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RecommissionVsanNode_USCORETask(soap, &soap_tmp___gnvim2__RecommissionVsanNode_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RecommissionVsanNode_USCORETask(soap, &soap_tmp___gnvim2__RecommissionVsanNode_USCORETask, "-gnvim2:RecommissionVsanNode_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RecommissionVsanNode_USCORETask(soap, &soap_tmp___gnvim2__RecommissionVsanNode_USCORETask, "-gnvim2:RecommissionVsanNode_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RecommissionVsanNode_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__RecommissionVsanNode_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RecommissionVsanNode_USCORETaskResponse.soap_get(soap, "gnvim2:RecommissionVsanNode_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryOptions(const char *endpoint, const char *soap_action, gnvim2__QueryOptionsRequestType *gnvim2__QueryOptions, _gnvim2__QueryOptionsResponse &gnvim2__QueryOptionsResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryOptions soap_tmp___gnvim2__QueryOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryOptions.gnvim2__QueryOptions = gnvim2__QueryOptions;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryOptions(soap, &soap_tmp___gnvim2__QueryOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryOptions(soap, &soap_tmp___gnvim2__QueryOptions, "-gnvim2:QueryOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryOptions(soap, &soap_tmp___gnvim2__QueryOptions, "-gnvim2:QueryOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryOptionsResponse)
		return soap_closesock(soap);
	gnvim2__QueryOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryOptionsResponse.soap_get(soap, "gnvim2:QueryOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateOptions(const char *endpoint, const char *soap_action, gnvim2__UpdateOptionsRequestType *gnvim2__UpdateOptions, _gnvim2__UpdateOptionsResponse &gnvim2__UpdateOptionsResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateOptions soap_tmp___gnvim2__UpdateOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateOptions.gnvim2__UpdateOptions = gnvim2__UpdateOptions;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateOptions(soap, &soap_tmp___gnvim2__UpdateOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateOptions(soap, &soap_tmp___gnvim2__UpdateOptions, "-gnvim2:UpdateOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateOptions(soap, &soap_tmp___gnvim2__UpdateOptions, "-gnvim2:UpdateOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateOptionsResponse)
		return soap_closesock(soap);
	gnvim2__UpdateOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateOptionsResponse.soap_get(soap, "gnvim2:UpdateOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CheckCompliance_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CheckComplianceRequestType *gnvim2__CheckCompliance_USCORETask, _gnvim2__CheckCompliance_USCORETaskResponse &gnvim2__CheckCompliance_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CheckCompliance_USCORETask soap_tmp___gnvim2__CheckCompliance_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CheckCompliance_USCORETask.gnvim2__CheckCompliance_USCORETask = gnvim2__CheckCompliance_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CheckCompliance_USCORETask(soap, &soap_tmp___gnvim2__CheckCompliance_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CheckCompliance_USCORETask(soap, &soap_tmp___gnvim2__CheckCompliance_USCORETask, "-gnvim2:CheckCompliance_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CheckCompliance_USCORETask(soap, &soap_tmp___gnvim2__CheckCompliance_USCORETask, "-gnvim2:CheckCompliance_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CheckCompliance_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CheckCompliance_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CheckCompliance_USCORETaskResponse.soap_get(soap, "gnvim2:CheckCompliance_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryComplianceStatus(const char *endpoint, const char *soap_action, gnvim2__QueryComplianceStatusRequestType *gnvim2__QueryComplianceStatus, _gnvim2__QueryComplianceStatusResponse &gnvim2__QueryComplianceStatusResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryComplianceStatus soap_tmp___gnvim2__QueryComplianceStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryComplianceStatus.gnvim2__QueryComplianceStatus = gnvim2__QueryComplianceStatus;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryComplianceStatus(soap, &soap_tmp___gnvim2__QueryComplianceStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryComplianceStatus(soap, &soap_tmp___gnvim2__QueryComplianceStatus, "-gnvim2:QueryComplianceStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryComplianceStatus(soap, &soap_tmp___gnvim2__QueryComplianceStatus, "-gnvim2:QueryComplianceStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryComplianceStatusResponse)
		return soap_closesock(soap);
	gnvim2__QueryComplianceStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryComplianceStatusResponse.soap_get(soap, "gnvim2:QueryComplianceStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ClearComplianceStatus(const char *endpoint, const char *soap_action, gnvim2__ClearComplianceStatusRequestType *gnvim2__ClearComplianceStatus, _gnvim2__ClearComplianceStatusResponse &gnvim2__ClearComplianceStatusResponse)
{	struct soap *soap = this;
	struct __gnvim2__ClearComplianceStatus soap_tmp___gnvim2__ClearComplianceStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ClearComplianceStatus.gnvim2__ClearComplianceStatus = gnvim2__ClearComplianceStatus;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ClearComplianceStatus(soap, &soap_tmp___gnvim2__ClearComplianceStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ClearComplianceStatus(soap, &soap_tmp___gnvim2__ClearComplianceStatus, "-gnvim2:ClearComplianceStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ClearComplianceStatus(soap, &soap_tmp___gnvim2__ClearComplianceStatus, "-gnvim2:ClearComplianceStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ClearComplianceStatusResponse)
		return soap_closesock(soap);
	gnvim2__ClearComplianceStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ClearComplianceStatusResponse.soap_get(soap, "gnvim2:ClearComplianceStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryExpressionMetadata(const char *endpoint, const char *soap_action, gnvim2__QueryExpressionMetadataRequestType *gnvim2__QueryExpressionMetadata, _gnvim2__QueryExpressionMetadataResponse &gnvim2__QueryExpressionMetadataResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryExpressionMetadata soap_tmp___gnvim2__QueryExpressionMetadata;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryExpressionMetadata.gnvim2__QueryExpressionMetadata = gnvim2__QueryExpressionMetadata;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryExpressionMetadata(soap, &soap_tmp___gnvim2__QueryExpressionMetadata);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryExpressionMetadata(soap, &soap_tmp___gnvim2__QueryExpressionMetadata, "-gnvim2:QueryExpressionMetadata", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryExpressionMetadata(soap, &soap_tmp___gnvim2__QueryExpressionMetadata, "-gnvim2:QueryExpressionMetadata", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryExpressionMetadataResponse)
		return soap_closesock(soap);
	gnvim2__QueryExpressionMetadataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryExpressionMetadataResponse.soap_get(soap, "gnvim2:QueryExpressionMetadataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveDescription(const char *endpoint, const char *soap_action, gnvim2__RetrieveDescriptionRequestType *gnvim2__RetrieveDescription, _gnvim2__RetrieveDescriptionResponse &gnvim2__RetrieveDescriptionResponse)
{	struct soap *soap = this;
	struct __gnvim2__RetrieveDescription soap_tmp___gnvim2__RetrieveDescription;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RetrieveDescription.gnvim2__RetrieveDescription = gnvim2__RetrieveDescription;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RetrieveDescription(soap, &soap_tmp___gnvim2__RetrieveDescription);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RetrieveDescription(soap, &soap_tmp___gnvim2__RetrieveDescription, "-gnvim2:RetrieveDescription", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RetrieveDescription(soap, &soap_tmp___gnvim2__RetrieveDescription, "-gnvim2:RetrieveDescription", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RetrieveDescriptionResponse)
		return soap_closesock(soap);
	gnvim2__RetrieveDescriptionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RetrieveDescriptionResponse.soap_get(soap, "gnvim2:RetrieveDescriptionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DestroyProfile(const char *endpoint, const char *soap_action, gnvim2__DestroyProfileRequestType *gnvim2__DestroyProfile, _gnvim2__DestroyProfileResponse &gnvim2__DestroyProfileResponse)
{	struct soap *soap = this;
	struct __gnvim2__DestroyProfile soap_tmp___gnvim2__DestroyProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DestroyProfile.gnvim2__DestroyProfile = gnvim2__DestroyProfile;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DestroyProfile(soap, &soap_tmp___gnvim2__DestroyProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DestroyProfile(soap, &soap_tmp___gnvim2__DestroyProfile, "-gnvim2:DestroyProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DestroyProfile(soap, &soap_tmp___gnvim2__DestroyProfile, "-gnvim2:DestroyProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DestroyProfileResponse)
		return soap_closesock(soap);
	gnvim2__DestroyProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DestroyProfileResponse.soap_get(soap, "gnvim2:DestroyProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AssociateProfile(const char *endpoint, const char *soap_action, gnvim2__AssociateProfileRequestType *gnvim2__AssociateProfile, _gnvim2__AssociateProfileResponse &gnvim2__AssociateProfileResponse)
{	struct soap *soap = this;
	struct __gnvim2__AssociateProfile soap_tmp___gnvim2__AssociateProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AssociateProfile.gnvim2__AssociateProfile = gnvim2__AssociateProfile;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AssociateProfile(soap, &soap_tmp___gnvim2__AssociateProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AssociateProfile(soap, &soap_tmp___gnvim2__AssociateProfile, "-gnvim2:AssociateProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AssociateProfile(soap, &soap_tmp___gnvim2__AssociateProfile, "-gnvim2:AssociateProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AssociateProfileResponse)
		return soap_closesock(soap);
	gnvim2__AssociateProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AssociateProfileResponse.soap_get(soap, "gnvim2:AssociateProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DissociateProfile(const char *endpoint, const char *soap_action, gnvim2__DissociateProfileRequestType *gnvim2__DissociateProfile, _gnvim2__DissociateProfileResponse &gnvim2__DissociateProfileResponse)
{	struct soap *soap = this;
	struct __gnvim2__DissociateProfile soap_tmp___gnvim2__DissociateProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DissociateProfile.gnvim2__DissociateProfile = gnvim2__DissociateProfile;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DissociateProfile(soap, &soap_tmp___gnvim2__DissociateProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DissociateProfile(soap, &soap_tmp___gnvim2__DissociateProfile, "-gnvim2:DissociateProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DissociateProfile(soap, &soap_tmp___gnvim2__DissociateProfile, "-gnvim2:DissociateProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DissociateProfileResponse)
		return soap_closesock(soap);
	gnvim2__DissociateProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DissociateProfileResponse.soap_get(soap, "gnvim2:DissociateProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CheckProfileCompliance_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CheckProfileComplianceRequestType *gnvim2__CheckProfileCompliance_USCORETask, _gnvim2__CheckProfileCompliance_USCORETaskResponse &gnvim2__CheckProfileCompliance_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CheckProfileCompliance_USCORETask soap_tmp___gnvim2__CheckProfileCompliance_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CheckProfileCompliance_USCORETask.gnvim2__CheckProfileCompliance_USCORETask = gnvim2__CheckProfileCompliance_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CheckProfileCompliance_USCORETask(soap, &soap_tmp___gnvim2__CheckProfileCompliance_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CheckProfileCompliance_USCORETask(soap, &soap_tmp___gnvim2__CheckProfileCompliance_USCORETask, "-gnvim2:CheckProfileCompliance_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CheckProfileCompliance_USCORETask(soap, &soap_tmp___gnvim2__CheckProfileCompliance_USCORETask, "-gnvim2:CheckProfileCompliance_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CheckProfileCompliance_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CheckProfileCompliance_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CheckProfileCompliance_USCORETaskResponse.soap_get(soap, "gnvim2:CheckProfileCompliance_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExportProfile(const char *endpoint, const char *soap_action, gnvim2__ExportProfileRequestType *gnvim2__ExportProfile, _gnvim2__ExportProfileResponse &gnvim2__ExportProfileResponse)
{	struct soap *soap = this;
	struct __gnvim2__ExportProfile soap_tmp___gnvim2__ExportProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ExportProfile.gnvim2__ExportProfile = gnvim2__ExportProfile;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ExportProfile(soap, &soap_tmp___gnvim2__ExportProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ExportProfile(soap, &soap_tmp___gnvim2__ExportProfile, "-gnvim2:ExportProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ExportProfile(soap, &soap_tmp___gnvim2__ExportProfile, "-gnvim2:ExportProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ExportProfileResponse)
		return soap_closesock(soap);
	gnvim2__ExportProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ExportProfileResponse.soap_get(soap, "gnvim2:ExportProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateProfile(const char *endpoint, const char *soap_action, gnvim2__CreateProfileRequestType *gnvim2__CreateProfile, _gnvim2__CreateProfileResponse &gnvim2__CreateProfileResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateProfile soap_tmp___gnvim2__CreateProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateProfile.gnvim2__CreateProfile = gnvim2__CreateProfile;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateProfile(soap, &soap_tmp___gnvim2__CreateProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateProfile(soap, &soap_tmp___gnvim2__CreateProfile, "-gnvim2:CreateProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateProfile(soap, &soap_tmp___gnvim2__CreateProfile, "-gnvim2:CreateProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateProfileResponse)
		return soap_closesock(soap);
	gnvim2__CreateProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateProfileResponse.soap_get(soap, "gnvim2:CreateProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryPolicyMetadata(const char *endpoint, const char *soap_action, gnvim2__QueryPolicyMetadataRequestType *gnvim2__QueryPolicyMetadata, _gnvim2__QueryPolicyMetadataResponse &gnvim2__QueryPolicyMetadataResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryPolicyMetadata soap_tmp___gnvim2__QueryPolicyMetadata;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryPolicyMetadata.gnvim2__QueryPolicyMetadata = gnvim2__QueryPolicyMetadata;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryPolicyMetadata(soap, &soap_tmp___gnvim2__QueryPolicyMetadata);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryPolicyMetadata(soap, &soap_tmp___gnvim2__QueryPolicyMetadata, "-gnvim2:QueryPolicyMetadata", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryPolicyMetadata(soap, &soap_tmp___gnvim2__QueryPolicyMetadata, "-gnvim2:QueryPolicyMetadata", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryPolicyMetadataResponse)
		return soap_closesock(soap);
	gnvim2__QueryPolicyMetadataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryPolicyMetadataResponse.soap_get(soap, "gnvim2:QueryPolicyMetadataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FindAssociatedProfile(const char *endpoint, const char *soap_action, gnvim2__FindAssociatedProfileRequestType *gnvim2__FindAssociatedProfile, _gnvim2__FindAssociatedProfileResponse &gnvim2__FindAssociatedProfileResponse)
{	struct soap *soap = this;
	struct __gnvim2__FindAssociatedProfile soap_tmp___gnvim2__FindAssociatedProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__FindAssociatedProfile.gnvim2__FindAssociatedProfile = gnvim2__FindAssociatedProfile;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__FindAssociatedProfile(soap, &soap_tmp___gnvim2__FindAssociatedProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__FindAssociatedProfile(soap, &soap_tmp___gnvim2__FindAssociatedProfile, "-gnvim2:FindAssociatedProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__FindAssociatedProfile(soap, &soap_tmp___gnvim2__FindAssociatedProfile, "-gnvim2:FindAssociatedProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__FindAssociatedProfileResponse)
		return soap_closesock(soap);
	gnvim2__FindAssociatedProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__FindAssociatedProfileResponse.soap_get(soap, "gnvim2:FindAssociatedProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateClusterProfile(const char *endpoint, const char *soap_action, gnvim2__UpdateClusterProfileRequestType *gnvim2__UpdateClusterProfile, _gnvim2__UpdateClusterProfileResponse &gnvim2__UpdateClusterProfileResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateClusterProfile soap_tmp___gnvim2__UpdateClusterProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateClusterProfile.gnvim2__UpdateClusterProfile = gnvim2__UpdateClusterProfile;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateClusterProfile(soap, &soap_tmp___gnvim2__UpdateClusterProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateClusterProfile(soap, &soap_tmp___gnvim2__UpdateClusterProfile, "-gnvim2:UpdateClusterProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateClusterProfile(soap, &soap_tmp___gnvim2__UpdateClusterProfile, "-gnvim2:UpdateClusterProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateClusterProfileResponse)
		return soap_closesock(soap);
	gnvim2__UpdateClusterProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateClusterProfileResponse.soap_get(soap, "gnvim2:UpdateClusterProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateReferenceHost(const char *endpoint, const char *soap_action, gnvim2__UpdateReferenceHostRequestType *gnvim2__UpdateReferenceHost, _gnvim2__UpdateReferenceHostResponse &gnvim2__UpdateReferenceHostResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateReferenceHost soap_tmp___gnvim2__UpdateReferenceHost;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateReferenceHost.gnvim2__UpdateReferenceHost = gnvim2__UpdateReferenceHost;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateReferenceHost(soap, &soap_tmp___gnvim2__UpdateReferenceHost);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateReferenceHost(soap, &soap_tmp___gnvim2__UpdateReferenceHost, "-gnvim2:UpdateReferenceHost", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateReferenceHost(soap, &soap_tmp___gnvim2__UpdateReferenceHost, "-gnvim2:UpdateReferenceHost", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateReferenceHostResponse)
		return soap_closesock(soap);
	gnvim2__UpdateReferenceHostResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateReferenceHostResponse.soap_get(soap, "gnvim2:UpdateReferenceHostResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateHostProfile(const char *endpoint, const char *soap_action, gnvim2__UpdateHostProfileRequestType *gnvim2__UpdateHostProfile, _gnvim2__UpdateHostProfileResponse &gnvim2__UpdateHostProfileResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateHostProfile soap_tmp___gnvim2__UpdateHostProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateHostProfile.gnvim2__UpdateHostProfile = gnvim2__UpdateHostProfile;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateHostProfile(soap, &soap_tmp___gnvim2__UpdateHostProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateHostProfile(soap, &soap_tmp___gnvim2__UpdateHostProfile, "-gnvim2:UpdateHostProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateHostProfile(soap, &soap_tmp___gnvim2__UpdateHostProfile, "-gnvim2:UpdateHostProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateHostProfileResponse)
		return soap_closesock(soap);
	gnvim2__UpdateHostProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateHostProfileResponse.soap_get(soap, "gnvim2:UpdateHostProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExecuteHostProfile(const char *endpoint, const char *soap_action, gnvim2__ExecuteHostProfileRequestType *gnvim2__ExecuteHostProfile, _gnvim2__ExecuteHostProfileResponse &gnvim2__ExecuteHostProfileResponse)
{	struct soap *soap = this;
	struct __gnvim2__ExecuteHostProfile soap_tmp___gnvim2__ExecuteHostProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ExecuteHostProfile.gnvim2__ExecuteHostProfile = gnvim2__ExecuteHostProfile;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ExecuteHostProfile(soap, &soap_tmp___gnvim2__ExecuteHostProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ExecuteHostProfile(soap, &soap_tmp___gnvim2__ExecuteHostProfile, "-gnvim2:ExecuteHostProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ExecuteHostProfile(soap, &soap_tmp___gnvim2__ExecuteHostProfile, "-gnvim2:ExecuteHostProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ExecuteHostProfileResponse)
		return soap_closesock(soap);
	gnvim2__ExecuteHostProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ExecuteHostProfileResponse.soap_get(soap, "gnvim2:ExecuteHostProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ApplyHostConfig_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ApplyHostConfigRequestType *gnvim2__ApplyHostConfig_USCORETask, _gnvim2__ApplyHostConfig_USCORETaskResponse &gnvim2__ApplyHostConfig_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ApplyHostConfig_USCORETask soap_tmp___gnvim2__ApplyHostConfig_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ApplyHostConfig_USCORETask.gnvim2__ApplyHostConfig_USCORETask = gnvim2__ApplyHostConfig_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ApplyHostConfig_USCORETask(soap, &soap_tmp___gnvim2__ApplyHostConfig_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ApplyHostConfig_USCORETask(soap, &soap_tmp___gnvim2__ApplyHostConfig_USCORETask, "-gnvim2:ApplyHostConfig_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ApplyHostConfig_USCORETask(soap, &soap_tmp___gnvim2__ApplyHostConfig_USCORETask, "-gnvim2:ApplyHostConfig_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ApplyHostConfig_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ApplyHostConfig_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ApplyHostConfig_USCORETaskResponse.soap_get(soap, "gnvim2:ApplyHostConfig_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::GenerateConfigTaskList(const char *endpoint, const char *soap_action, gnvim2__GenerateConfigTaskListRequestType *gnvim2__GenerateConfigTaskList, _gnvim2__GenerateConfigTaskListResponse &gnvim2__GenerateConfigTaskListResponse)
{	struct soap *soap = this;
	struct __gnvim2__GenerateConfigTaskList soap_tmp___gnvim2__GenerateConfigTaskList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__GenerateConfigTaskList.gnvim2__GenerateConfigTaskList = gnvim2__GenerateConfigTaskList;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__GenerateConfigTaskList(soap, &soap_tmp___gnvim2__GenerateConfigTaskList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__GenerateConfigTaskList(soap, &soap_tmp___gnvim2__GenerateConfigTaskList, "-gnvim2:GenerateConfigTaskList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__GenerateConfigTaskList(soap, &soap_tmp___gnvim2__GenerateConfigTaskList, "-gnvim2:GenerateConfigTaskList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__GenerateConfigTaskListResponse)
		return soap_closesock(soap);
	gnvim2__GenerateConfigTaskListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__GenerateConfigTaskListResponse.soap_get(soap, "gnvim2:GenerateConfigTaskListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::GenerateHostProfileTaskList_USCORETask(const char *endpoint, const char *soap_action, gnvim2__GenerateHostProfileTaskListRequestType *gnvim2__GenerateHostProfileTaskList_USCORETask, _gnvim2__GenerateHostProfileTaskList_USCORETaskResponse &gnvim2__GenerateHostProfileTaskList_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__GenerateHostProfileTaskList_USCORETask soap_tmp___gnvim2__GenerateHostProfileTaskList_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__GenerateHostProfileTaskList_USCORETask.gnvim2__GenerateHostProfileTaskList_USCORETask = gnvim2__GenerateHostProfileTaskList_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__GenerateHostProfileTaskList_USCORETask(soap, &soap_tmp___gnvim2__GenerateHostProfileTaskList_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__GenerateHostProfileTaskList_USCORETask(soap, &soap_tmp___gnvim2__GenerateHostProfileTaskList_USCORETask, "-gnvim2:GenerateHostProfileTaskList_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__GenerateHostProfileTaskList_USCORETask(soap, &soap_tmp___gnvim2__GenerateHostProfileTaskList_USCORETask, "-gnvim2:GenerateHostProfileTaskList_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__GenerateHostProfileTaskList_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__GenerateHostProfileTaskList_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__GenerateHostProfileTaskList_USCORETaskResponse.soap_get(soap, "gnvim2:GenerateHostProfileTaskList_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryHostProfileMetadata(const char *endpoint, const char *soap_action, gnvim2__QueryHostProfileMetadataRequestType *gnvim2__QueryHostProfileMetadata, _gnvim2__QueryHostProfileMetadataResponse &gnvim2__QueryHostProfileMetadataResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryHostProfileMetadata soap_tmp___gnvim2__QueryHostProfileMetadata;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryHostProfileMetadata.gnvim2__QueryHostProfileMetadata = gnvim2__QueryHostProfileMetadata;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryHostProfileMetadata(soap, &soap_tmp___gnvim2__QueryHostProfileMetadata);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryHostProfileMetadata(soap, &soap_tmp___gnvim2__QueryHostProfileMetadata, "-gnvim2:QueryHostProfileMetadata", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryHostProfileMetadata(soap, &soap_tmp___gnvim2__QueryHostProfileMetadata, "-gnvim2:QueryHostProfileMetadata", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryHostProfileMetadataResponse)
		return soap_closesock(soap);
	gnvim2__QueryHostProfileMetadataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryHostProfileMetadataResponse.soap_get(soap, "gnvim2:QueryHostProfileMetadataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryProfileStructure(const char *endpoint, const char *soap_action, gnvim2__QueryProfileStructureRequestType *gnvim2__QueryProfileStructure, _gnvim2__QueryProfileStructureResponse &gnvim2__QueryProfileStructureResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryProfileStructure soap_tmp___gnvim2__QueryProfileStructure;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryProfileStructure.gnvim2__QueryProfileStructure = gnvim2__QueryProfileStructure;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryProfileStructure(soap, &soap_tmp___gnvim2__QueryProfileStructure);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryProfileStructure(soap, &soap_tmp___gnvim2__QueryProfileStructure, "-gnvim2:QueryProfileStructure", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryProfileStructure(soap, &soap_tmp___gnvim2__QueryProfileStructure, "-gnvim2:QueryProfileStructure", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryProfileStructureResponse)
		return soap_closesock(soap);
	gnvim2__QueryProfileStructureResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryProfileStructureResponse.soap_get(soap, "gnvim2:QueryProfileStructureResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateDefaultProfile(const char *endpoint, const char *soap_action, gnvim2__CreateDefaultProfileRequestType *gnvim2__CreateDefaultProfile, _gnvim2__CreateDefaultProfileResponse &gnvim2__CreateDefaultProfileResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateDefaultProfile soap_tmp___gnvim2__CreateDefaultProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateDefaultProfile.gnvim2__CreateDefaultProfile = gnvim2__CreateDefaultProfile;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateDefaultProfile(soap, &soap_tmp___gnvim2__CreateDefaultProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateDefaultProfile(soap, &soap_tmp___gnvim2__CreateDefaultProfile, "-gnvim2:CreateDefaultProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateDefaultProfile(soap, &soap_tmp___gnvim2__CreateDefaultProfile, "-gnvim2:CreateDefaultProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateDefaultProfileResponse)
		return soap_closesock(soap);
	gnvim2__CreateDefaultProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateDefaultProfileResponse.soap_get(soap, "gnvim2:CreateDefaultProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateAnswerFile_USCORETask(const char *endpoint, const char *soap_action, gnvim2__UpdateAnswerFileRequestType *gnvim2__UpdateAnswerFile_USCORETask, _gnvim2__UpdateAnswerFile_USCORETaskResponse &gnvim2__UpdateAnswerFile_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__UpdateAnswerFile_USCORETask soap_tmp___gnvim2__UpdateAnswerFile_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__UpdateAnswerFile_USCORETask.gnvim2__UpdateAnswerFile_USCORETask = gnvim2__UpdateAnswerFile_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__UpdateAnswerFile_USCORETask(soap, &soap_tmp___gnvim2__UpdateAnswerFile_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__UpdateAnswerFile_USCORETask(soap, &soap_tmp___gnvim2__UpdateAnswerFile_USCORETask, "-gnvim2:UpdateAnswerFile_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__UpdateAnswerFile_USCORETask(soap, &soap_tmp___gnvim2__UpdateAnswerFile_USCORETask, "-gnvim2:UpdateAnswerFile_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__UpdateAnswerFile_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__UpdateAnswerFile_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__UpdateAnswerFile_USCORETaskResponse.soap_get(soap, "gnvim2:UpdateAnswerFile_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveAnswerFile(const char *endpoint, const char *soap_action, gnvim2__RetrieveAnswerFileRequestType *gnvim2__RetrieveAnswerFile, _gnvim2__RetrieveAnswerFileResponse &gnvim2__RetrieveAnswerFileResponse)
{	struct soap *soap = this;
	struct __gnvim2__RetrieveAnswerFile soap_tmp___gnvim2__RetrieveAnswerFile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RetrieveAnswerFile.gnvim2__RetrieveAnswerFile = gnvim2__RetrieveAnswerFile;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RetrieveAnswerFile(soap, &soap_tmp___gnvim2__RetrieveAnswerFile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RetrieveAnswerFile(soap, &soap_tmp___gnvim2__RetrieveAnswerFile, "-gnvim2:RetrieveAnswerFile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RetrieveAnswerFile(soap, &soap_tmp___gnvim2__RetrieveAnswerFile, "-gnvim2:RetrieveAnswerFile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RetrieveAnswerFileResponse)
		return soap_closesock(soap);
	gnvim2__RetrieveAnswerFileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RetrieveAnswerFileResponse.soap_get(soap, "gnvim2:RetrieveAnswerFileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveAnswerFileForProfile(const char *endpoint, const char *soap_action, gnvim2__RetrieveAnswerFileForProfileRequestType *gnvim2__RetrieveAnswerFileForProfile, _gnvim2__RetrieveAnswerFileForProfileResponse &gnvim2__RetrieveAnswerFileForProfileResponse)
{	struct soap *soap = this;
	struct __gnvim2__RetrieveAnswerFileForProfile soap_tmp___gnvim2__RetrieveAnswerFileForProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RetrieveAnswerFileForProfile.gnvim2__RetrieveAnswerFileForProfile = gnvim2__RetrieveAnswerFileForProfile;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RetrieveAnswerFileForProfile(soap, &soap_tmp___gnvim2__RetrieveAnswerFileForProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RetrieveAnswerFileForProfile(soap, &soap_tmp___gnvim2__RetrieveAnswerFileForProfile, "-gnvim2:RetrieveAnswerFileForProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RetrieveAnswerFileForProfile(soap, &soap_tmp___gnvim2__RetrieveAnswerFileForProfile, "-gnvim2:RetrieveAnswerFileForProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RetrieveAnswerFileForProfileResponse)
		return soap_closesock(soap);
	gnvim2__RetrieveAnswerFileForProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RetrieveAnswerFileForProfileResponse.soap_get(soap, "gnvim2:RetrieveAnswerFileForProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExportAnswerFile_USCORETask(const char *endpoint, const char *soap_action, gnvim2__ExportAnswerFileRequestType *gnvim2__ExportAnswerFile_USCORETask, _gnvim2__ExportAnswerFile_USCORETaskResponse &gnvim2__ExportAnswerFile_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ExportAnswerFile_USCORETask soap_tmp___gnvim2__ExportAnswerFile_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ExportAnswerFile_USCORETask.gnvim2__ExportAnswerFile_USCORETask = gnvim2__ExportAnswerFile_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ExportAnswerFile_USCORETask(soap, &soap_tmp___gnvim2__ExportAnswerFile_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ExportAnswerFile_USCORETask(soap, &soap_tmp___gnvim2__ExportAnswerFile_USCORETask, "-gnvim2:ExportAnswerFile_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ExportAnswerFile_USCORETask(soap, &soap_tmp___gnvim2__ExportAnswerFile_USCORETask, "-gnvim2:ExportAnswerFile_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ExportAnswerFile_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__ExportAnswerFile_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ExportAnswerFile_USCORETaskResponse.soap_get(soap, "gnvim2:ExportAnswerFile_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CheckAnswerFileStatus_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CheckAnswerFileStatusRequestType *gnvim2__CheckAnswerFileStatus_USCORETask, _gnvim2__CheckAnswerFileStatus_USCORETaskResponse &gnvim2__CheckAnswerFileStatus_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CheckAnswerFileStatus_USCORETask soap_tmp___gnvim2__CheckAnswerFileStatus_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CheckAnswerFileStatus_USCORETask.gnvim2__CheckAnswerFileStatus_USCORETask = gnvim2__CheckAnswerFileStatus_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CheckAnswerFileStatus_USCORETask(soap, &soap_tmp___gnvim2__CheckAnswerFileStatus_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CheckAnswerFileStatus_USCORETask(soap, &soap_tmp___gnvim2__CheckAnswerFileStatus_USCORETask, "-gnvim2:CheckAnswerFileStatus_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CheckAnswerFileStatus_USCORETask(soap, &soap_tmp___gnvim2__CheckAnswerFileStatus_USCORETask, "-gnvim2:CheckAnswerFileStatus_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CheckAnswerFileStatus_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CheckAnswerFileStatus_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CheckAnswerFileStatus_USCORETaskResponse.soap_get(soap, "gnvim2:CheckAnswerFileStatus_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryAnswerFileStatus(const char *endpoint, const char *soap_action, gnvim2__QueryAnswerFileStatusRequestType *gnvim2__QueryAnswerFileStatus, _gnvim2__QueryAnswerFileStatusResponse &gnvim2__QueryAnswerFileStatusResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryAnswerFileStatus soap_tmp___gnvim2__QueryAnswerFileStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryAnswerFileStatus.gnvim2__QueryAnswerFileStatus = gnvim2__QueryAnswerFileStatus;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryAnswerFileStatus(soap, &soap_tmp___gnvim2__QueryAnswerFileStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryAnswerFileStatus(soap, &soap_tmp___gnvim2__QueryAnswerFileStatus, "-gnvim2:QueryAnswerFileStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryAnswerFileStatus(soap, &soap_tmp___gnvim2__QueryAnswerFileStatus, "-gnvim2:QueryAnswerFileStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryAnswerFileStatusResponse)
		return soap_closesock(soap);
	gnvim2__QueryAnswerFileStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryAnswerFileStatusResponse.soap_get(soap, "gnvim2:QueryAnswerFileStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveScheduledTask(const char *endpoint, const char *soap_action, gnvim2__RemoveScheduledTaskRequestType *gnvim2__RemoveScheduledTask, _gnvim2__RemoveScheduledTaskResponse &gnvim2__RemoveScheduledTaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveScheduledTask soap_tmp___gnvim2__RemoveScheduledTask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveScheduledTask.gnvim2__RemoveScheduledTask = gnvim2__RemoveScheduledTask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveScheduledTask(soap, &soap_tmp___gnvim2__RemoveScheduledTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveScheduledTask(soap, &soap_tmp___gnvim2__RemoveScheduledTask, "-gnvim2:RemoveScheduledTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveScheduledTask(soap, &soap_tmp___gnvim2__RemoveScheduledTask, "-gnvim2:RemoveScheduledTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveScheduledTaskResponse)
		return soap_closesock(soap);
	gnvim2__RemoveScheduledTaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveScheduledTaskResponse.soap_get(soap, "gnvim2:RemoveScheduledTaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureScheduledTask(const char *endpoint, const char *soap_action, gnvim2__ReconfigureScheduledTaskRequestType *gnvim2__ReconfigureScheduledTask, _gnvim2__ReconfigureScheduledTaskResponse &gnvim2__ReconfigureScheduledTaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReconfigureScheduledTask soap_tmp___gnvim2__ReconfigureScheduledTask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReconfigureScheduledTask.gnvim2__ReconfigureScheduledTask = gnvim2__ReconfigureScheduledTask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReconfigureScheduledTask(soap, &soap_tmp___gnvim2__ReconfigureScheduledTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReconfigureScheduledTask(soap, &soap_tmp___gnvim2__ReconfigureScheduledTask, "-gnvim2:ReconfigureScheduledTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReconfigureScheduledTask(soap, &soap_tmp___gnvim2__ReconfigureScheduledTask, "-gnvim2:ReconfigureScheduledTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReconfigureScheduledTaskResponse)
		return soap_closesock(soap);
	gnvim2__ReconfigureScheduledTaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReconfigureScheduledTaskResponse.soap_get(soap, "gnvim2:ReconfigureScheduledTaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RunScheduledTask(const char *endpoint, const char *soap_action, gnvim2__RunScheduledTaskRequestType *gnvim2__RunScheduledTask, _gnvim2__RunScheduledTaskResponse &gnvim2__RunScheduledTaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__RunScheduledTask soap_tmp___gnvim2__RunScheduledTask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RunScheduledTask.gnvim2__RunScheduledTask = gnvim2__RunScheduledTask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RunScheduledTask(soap, &soap_tmp___gnvim2__RunScheduledTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RunScheduledTask(soap, &soap_tmp___gnvim2__RunScheduledTask, "-gnvim2:RunScheduledTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RunScheduledTask(soap, &soap_tmp___gnvim2__RunScheduledTask, "-gnvim2:RunScheduledTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RunScheduledTaskResponse)
		return soap_closesock(soap);
	gnvim2__RunScheduledTaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RunScheduledTaskResponse.soap_get(soap, "gnvim2:RunScheduledTaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateScheduledTask(const char *endpoint, const char *soap_action, gnvim2__CreateScheduledTaskRequestType *gnvim2__CreateScheduledTask, _gnvim2__CreateScheduledTaskResponse &gnvim2__CreateScheduledTaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateScheduledTask soap_tmp___gnvim2__CreateScheduledTask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateScheduledTask.gnvim2__CreateScheduledTask = gnvim2__CreateScheduledTask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateScheduledTask(soap, &soap_tmp___gnvim2__CreateScheduledTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateScheduledTask(soap, &soap_tmp___gnvim2__CreateScheduledTask, "-gnvim2:CreateScheduledTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateScheduledTask(soap, &soap_tmp___gnvim2__CreateScheduledTask, "-gnvim2:CreateScheduledTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateScheduledTaskResponse)
		return soap_closesock(soap);
	gnvim2__CreateScheduledTaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateScheduledTaskResponse.soap_get(soap, "gnvim2:CreateScheduledTaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveEntityScheduledTask(const char *endpoint, const char *soap_action, gnvim2__RetrieveEntityScheduledTaskRequestType *gnvim2__RetrieveEntityScheduledTask, _gnvim2__RetrieveEntityScheduledTaskResponse &gnvim2__RetrieveEntityScheduledTaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__RetrieveEntityScheduledTask soap_tmp___gnvim2__RetrieveEntityScheduledTask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RetrieveEntityScheduledTask.gnvim2__RetrieveEntityScheduledTask = gnvim2__RetrieveEntityScheduledTask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RetrieveEntityScheduledTask(soap, &soap_tmp___gnvim2__RetrieveEntityScheduledTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RetrieveEntityScheduledTask(soap, &soap_tmp___gnvim2__RetrieveEntityScheduledTask, "-gnvim2:RetrieveEntityScheduledTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RetrieveEntityScheduledTask(soap, &soap_tmp___gnvim2__RetrieveEntityScheduledTask, "-gnvim2:RetrieveEntityScheduledTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RetrieveEntityScheduledTaskResponse)
		return soap_closesock(soap);
	gnvim2__RetrieveEntityScheduledTaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RetrieveEntityScheduledTaskResponse.soap_get(soap, "gnvim2:RetrieveEntityScheduledTaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateObjectScheduledTask(const char *endpoint, const char *soap_action, gnvim2__CreateObjectScheduledTaskRequestType *gnvim2__CreateObjectScheduledTask, _gnvim2__CreateObjectScheduledTaskResponse &gnvim2__CreateObjectScheduledTaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateObjectScheduledTask soap_tmp___gnvim2__CreateObjectScheduledTask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateObjectScheduledTask.gnvim2__CreateObjectScheduledTask = gnvim2__CreateObjectScheduledTask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateObjectScheduledTask(soap, &soap_tmp___gnvim2__CreateObjectScheduledTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateObjectScheduledTask(soap, &soap_tmp___gnvim2__CreateObjectScheduledTask, "-gnvim2:CreateObjectScheduledTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateObjectScheduledTask(soap, &soap_tmp___gnvim2__CreateObjectScheduledTask, "-gnvim2:CreateObjectScheduledTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateObjectScheduledTaskResponse)
		return soap_closesock(soap);
	gnvim2__CreateObjectScheduledTaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateObjectScheduledTaskResponse.soap_get(soap, "gnvim2:CreateObjectScheduledTaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveObjectScheduledTask(const char *endpoint, const char *soap_action, gnvim2__RetrieveObjectScheduledTaskRequestType *gnvim2__RetrieveObjectScheduledTask, _gnvim2__RetrieveObjectScheduledTaskResponse &gnvim2__RetrieveObjectScheduledTaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__RetrieveObjectScheduledTask soap_tmp___gnvim2__RetrieveObjectScheduledTask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RetrieveObjectScheduledTask.gnvim2__RetrieveObjectScheduledTask = gnvim2__RetrieveObjectScheduledTask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RetrieveObjectScheduledTask(soap, &soap_tmp___gnvim2__RetrieveObjectScheduledTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RetrieveObjectScheduledTask(soap, &soap_tmp___gnvim2__RetrieveObjectScheduledTask, "-gnvim2:RetrieveObjectScheduledTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RetrieveObjectScheduledTask(soap, &soap_tmp___gnvim2__RetrieveObjectScheduledTask, "-gnvim2:RetrieveObjectScheduledTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RetrieveObjectScheduledTaskResponse)
		return soap_closesock(soap);
	gnvim2__RetrieveObjectScheduledTaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RetrieveObjectScheduledTaskResponse.soap_get(soap, "gnvim2:RetrieveObjectScheduledTaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::OpenInventoryViewFolder(const char *endpoint, const char *soap_action, gnvim2__OpenInventoryViewFolderRequestType *gnvim2__OpenInventoryViewFolder, _gnvim2__OpenInventoryViewFolderResponse &gnvim2__OpenInventoryViewFolderResponse)
{	struct soap *soap = this;
	struct __gnvim2__OpenInventoryViewFolder soap_tmp___gnvim2__OpenInventoryViewFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__OpenInventoryViewFolder.gnvim2__OpenInventoryViewFolder = gnvim2__OpenInventoryViewFolder;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__OpenInventoryViewFolder(soap, &soap_tmp___gnvim2__OpenInventoryViewFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__OpenInventoryViewFolder(soap, &soap_tmp___gnvim2__OpenInventoryViewFolder, "-gnvim2:OpenInventoryViewFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__OpenInventoryViewFolder(soap, &soap_tmp___gnvim2__OpenInventoryViewFolder, "-gnvim2:OpenInventoryViewFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__OpenInventoryViewFolderResponse)
		return soap_closesock(soap);
	gnvim2__OpenInventoryViewFolderResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__OpenInventoryViewFolderResponse.soap_get(soap, "gnvim2:OpenInventoryViewFolderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CloseInventoryViewFolder(const char *endpoint, const char *soap_action, gnvim2__CloseInventoryViewFolderRequestType *gnvim2__CloseInventoryViewFolder, _gnvim2__CloseInventoryViewFolderResponse &gnvim2__CloseInventoryViewFolderResponse)
{	struct soap *soap = this;
	struct __gnvim2__CloseInventoryViewFolder soap_tmp___gnvim2__CloseInventoryViewFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CloseInventoryViewFolder.gnvim2__CloseInventoryViewFolder = gnvim2__CloseInventoryViewFolder;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CloseInventoryViewFolder(soap, &soap_tmp___gnvim2__CloseInventoryViewFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CloseInventoryViewFolder(soap, &soap_tmp___gnvim2__CloseInventoryViewFolder, "-gnvim2:CloseInventoryViewFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CloseInventoryViewFolder(soap, &soap_tmp___gnvim2__CloseInventoryViewFolder, "-gnvim2:CloseInventoryViewFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CloseInventoryViewFolderResponse)
		return soap_closesock(soap);
	gnvim2__CloseInventoryViewFolderResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CloseInventoryViewFolderResponse.soap_get(soap, "gnvim2:CloseInventoryViewFolderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ModifyListView(const char *endpoint, const char *soap_action, gnvim2__ModifyListViewRequestType *gnvim2__ModifyListView, _gnvim2__ModifyListViewResponse &gnvim2__ModifyListViewResponse)
{	struct soap *soap = this;
	struct __gnvim2__ModifyListView soap_tmp___gnvim2__ModifyListView;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ModifyListView.gnvim2__ModifyListView = gnvim2__ModifyListView;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ModifyListView(soap, &soap_tmp___gnvim2__ModifyListView);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ModifyListView(soap, &soap_tmp___gnvim2__ModifyListView, "-gnvim2:ModifyListView", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ModifyListView(soap, &soap_tmp___gnvim2__ModifyListView, "-gnvim2:ModifyListView", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ModifyListViewResponse)
		return soap_closesock(soap);
	gnvim2__ModifyListViewResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ModifyListViewResponse.soap_get(soap, "gnvim2:ModifyListViewResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResetListView(const char *endpoint, const char *soap_action, gnvim2__ResetListViewRequestType *gnvim2__ResetListView, _gnvim2__ResetListViewResponse &gnvim2__ResetListViewResponse)
{	struct soap *soap = this;
	struct __gnvim2__ResetListView soap_tmp___gnvim2__ResetListView;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ResetListView.gnvim2__ResetListView = gnvim2__ResetListView;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ResetListView(soap, &soap_tmp___gnvim2__ResetListView);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ResetListView(soap, &soap_tmp___gnvim2__ResetListView, "-gnvim2:ResetListView", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ResetListView(soap, &soap_tmp___gnvim2__ResetListView, "-gnvim2:ResetListView", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ResetListViewResponse)
		return soap_closesock(soap);
	gnvim2__ResetListViewResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ResetListViewResponse.soap_get(soap, "gnvim2:ResetListViewResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResetListViewFromView(const char *endpoint, const char *soap_action, gnvim2__ResetListViewFromViewRequestType *gnvim2__ResetListViewFromView, _gnvim2__ResetListViewFromViewResponse &gnvim2__ResetListViewFromViewResponse)
{	struct soap *soap = this;
	struct __gnvim2__ResetListViewFromView soap_tmp___gnvim2__ResetListViewFromView;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ResetListViewFromView.gnvim2__ResetListViewFromView = gnvim2__ResetListViewFromView;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ResetListViewFromView(soap, &soap_tmp___gnvim2__ResetListViewFromView);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ResetListViewFromView(soap, &soap_tmp___gnvim2__ResetListViewFromView, "-gnvim2:ResetListViewFromView", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ResetListViewFromView(soap, &soap_tmp___gnvim2__ResetListViewFromView, "-gnvim2:ResetListViewFromView", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ResetListViewFromViewResponse)
		return soap_closesock(soap);
	gnvim2__ResetListViewFromViewResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ResetListViewFromViewResponse.soap_get(soap, "gnvim2:ResetListViewFromViewResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DestroyView(const char *endpoint, const char *soap_action, gnvim2__DestroyViewRequestType *gnvim2__DestroyView, _gnvim2__DestroyViewResponse &gnvim2__DestroyViewResponse)
{	struct soap *soap = this;
	struct __gnvim2__DestroyView soap_tmp___gnvim2__DestroyView;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DestroyView.gnvim2__DestroyView = gnvim2__DestroyView;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DestroyView(soap, &soap_tmp___gnvim2__DestroyView);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DestroyView(soap, &soap_tmp___gnvim2__DestroyView, "-gnvim2:DestroyView", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DestroyView(soap, &soap_tmp___gnvim2__DestroyView, "-gnvim2:DestroyView", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DestroyViewResponse)
		return soap_closesock(soap);
	gnvim2__DestroyViewResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DestroyViewResponse.soap_get(soap, "gnvim2:DestroyViewResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateInventoryView(const char *endpoint, const char *soap_action, gnvim2__CreateInventoryViewRequestType *gnvim2__CreateInventoryView, _gnvim2__CreateInventoryViewResponse &gnvim2__CreateInventoryViewResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateInventoryView soap_tmp___gnvim2__CreateInventoryView;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateInventoryView.gnvim2__CreateInventoryView = gnvim2__CreateInventoryView;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateInventoryView(soap, &soap_tmp___gnvim2__CreateInventoryView);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateInventoryView(soap, &soap_tmp___gnvim2__CreateInventoryView, "-gnvim2:CreateInventoryView", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateInventoryView(soap, &soap_tmp___gnvim2__CreateInventoryView, "-gnvim2:CreateInventoryView", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateInventoryViewResponse)
		return soap_closesock(soap);
	gnvim2__CreateInventoryViewResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateInventoryViewResponse.soap_get(soap, "gnvim2:CreateInventoryViewResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateContainerView(const char *endpoint, const char *soap_action, gnvim2__CreateContainerViewRequestType *gnvim2__CreateContainerView, _gnvim2__CreateContainerViewResponse &gnvim2__CreateContainerViewResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateContainerView soap_tmp___gnvim2__CreateContainerView;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateContainerView.gnvim2__CreateContainerView = gnvim2__CreateContainerView;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateContainerView(soap, &soap_tmp___gnvim2__CreateContainerView);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateContainerView(soap, &soap_tmp___gnvim2__CreateContainerView, "-gnvim2:CreateContainerView", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateContainerView(soap, &soap_tmp___gnvim2__CreateContainerView, "-gnvim2:CreateContainerView", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateContainerViewResponse)
		return soap_closesock(soap);
	gnvim2__CreateContainerViewResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateContainerViewResponse.soap_get(soap, "gnvim2:CreateContainerViewResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateListView(const char *endpoint, const char *soap_action, gnvim2__CreateListViewRequestType *gnvim2__CreateListView, _gnvim2__CreateListViewResponse &gnvim2__CreateListViewResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateListView soap_tmp___gnvim2__CreateListView;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateListView.gnvim2__CreateListView = gnvim2__CreateListView;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateListView(soap, &soap_tmp___gnvim2__CreateListView);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateListView(soap, &soap_tmp___gnvim2__CreateListView, "-gnvim2:CreateListView", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateListView(soap, &soap_tmp___gnvim2__CreateListView, "-gnvim2:CreateListView", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateListViewResponse)
		return soap_closesock(soap);
	gnvim2__CreateListViewResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateListViewResponse.soap_get(soap, "gnvim2:CreateListViewResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateListViewFromView(const char *endpoint, const char *soap_action, gnvim2__CreateListViewFromViewRequestType *gnvim2__CreateListViewFromView, _gnvim2__CreateListViewFromViewResponse &gnvim2__CreateListViewFromViewResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateListViewFromView soap_tmp___gnvim2__CreateListViewFromView;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateListViewFromView.gnvim2__CreateListViewFromView = gnvim2__CreateListViewFromView;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateListViewFromView(soap, &soap_tmp___gnvim2__CreateListViewFromView);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateListViewFromView(soap, &soap_tmp___gnvim2__CreateListViewFromView, "-gnvim2:CreateListViewFromView", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateListViewFromView(soap, &soap_tmp___gnvim2__CreateListViewFromView, "-gnvim2:CreateListViewFromView", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateListViewFromViewResponse)
		return soap_closesock(soap);
	gnvim2__CreateListViewFromViewResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateListViewFromViewResponse.soap_get(soap, "gnvim2:CreateListViewFromViewResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RevertToSnapshot_USCORETask(const char *endpoint, const char *soap_action, gnvim2__RevertToSnapshotRequestType *gnvim2__RevertToSnapshot_USCORETask, _gnvim2__RevertToSnapshot_USCORETaskResponse &gnvim2__RevertToSnapshot_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__RevertToSnapshot_USCORETask soap_tmp___gnvim2__RevertToSnapshot_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RevertToSnapshot_USCORETask.gnvim2__RevertToSnapshot_USCORETask = gnvim2__RevertToSnapshot_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RevertToSnapshot_USCORETask(soap, &soap_tmp___gnvim2__RevertToSnapshot_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RevertToSnapshot_USCORETask(soap, &soap_tmp___gnvim2__RevertToSnapshot_USCORETask, "-gnvim2:RevertToSnapshot_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RevertToSnapshot_USCORETask(soap, &soap_tmp___gnvim2__RevertToSnapshot_USCORETask, "-gnvim2:RevertToSnapshot_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RevertToSnapshot_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__RevertToSnapshot_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RevertToSnapshot_USCORETaskResponse.soap_get(soap, "gnvim2:RevertToSnapshot_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveSnapshot_USCORETask(const char *endpoint, const char *soap_action, gnvim2__RemoveSnapshotRequestType *gnvim2__RemoveSnapshot_USCORETask, _gnvim2__RemoveSnapshot_USCORETaskResponse &gnvim2__RemoveSnapshot_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveSnapshot_USCORETask soap_tmp___gnvim2__RemoveSnapshot_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveSnapshot_USCORETask.gnvim2__RemoveSnapshot_USCORETask = gnvim2__RemoveSnapshot_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveSnapshot_USCORETask(soap, &soap_tmp___gnvim2__RemoveSnapshot_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveSnapshot_USCORETask(soap, &soap_tmp___gnvim2__RemoveSnapshot_USCORETask, "-gnvim2:RemoveSnapshot_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveSnapshot_USCORETask(soap, &soap_tmp___gnvim2__RemoveSnapshot_USCORETask, "-gnvim2:RemoveSnapshot_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveSnapshot_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__RemoveSnapshot_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveSnapshot_USCORETaskResponse.soap_get(soap, "gnvim2:RemoveSnapshot_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RenameSnapshot(const char *endpoint, const char *soap_action, gnvim2__RenameSnapshotRequestType *gnvim2__RenameSnapshot, _gnvim2__RenameSnapshotResponse &gnvim2__RenameSnapshotResponse)
{	struct soap *soap = this;
	struct __gnvim2__RenameSnapshot soap_tmp___gnvim2__RenameSnapshot;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RenameSnapshot.gnvim2__RenameSnapshot = gnvim2__RenameSnapshot;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RenameSnapshot(soap, &soap_tmp___gnvim2__RenameSnapshot);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RenameSnapshot(soap, &soap_tmp___gnvim2__RenameSnapshot, "-gnvim2:RenameSnapshot", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RenameSnapshot(soap, &soap_tmp___gnvim2__RenameSnapshot, "-gnvim2:RenameSnapshot", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RenameSnapshotResponse)
		return soap_closesock(soap);
	gnvim2__RenameSnapshotResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RenameSnapshotResponse.soap_get(soap, "gnvim2:RenameSnapshotResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExportSnapshot(const char *endpoint, const char *soap_action, gnvim2__ExportSnapshotRequestType *gnvim2__ExportSnapshot, _gnvim2__ExportSnapshotResponse &gnvim2__ExportSnapshotResponse)
{	struct soap *soap = this;
	struct __gnvim2__ExportSnapshot soap_tmp___gnvim2__ExportSnapshot;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ExportSnapshot.gnvim2__ExportSnapshot = gnvim2__ExportSnapshot;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ExportSnapshot(soap, &soap_tmp___gnvim2__ExportSnapshot);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ExportSnapshot(soap, &soap_tmp___gnvim2__ExportSnapshot, "-gnvim2:ExportSnapshot", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ExportSnapshot(soap, &soap_tmp___gnvim2__ExportSnapshot, "-gnvim2:ExportSnapshot", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ExportSnapshotResponse)
		return soap_closesock(soap);
	gnvim2__ExportSnapshotResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ExportSnapshotResponse.soap_get(soap, "gnvim2:ExportSnapshotResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CheckCompatibility_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CheckCompatibilityRequestType *gnvim2__CheckCompatibility_USCORETask, _gnvim2__CheckCompatibility_USCORETaskResponse &gnvim2__CheckCompatibility_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CheckCompatibility_USCORETask soap_tmp___gnvim2__CheckCompatibility_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CheckCompatibility_USCORETask.gnvim2__CheckCompatibility_USCORETask = gnvim2__CheckCompatibility_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CheckCompatibility_USCORETask(soap, &soap_tmp___gnvim2__CheckCompatibility_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CheckCompatibility_USCORETask(soap, &soap_tmp___gnvim2__CheckCompatibility_USCORETask, "-gnvim2:CheckCompatibility_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CheckCompatibility_USCORETask(soap, &soap_tmp___gnvim2__CheckCompatibility_USCORETask, "-gnvim2:CheckCompatibility_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CheckCompatibility_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CheckCompatibility_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CheckCompatibility_USCORETaskResponse.soap_get(soap, "gnvim2:CheckCompatibility_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryVMotionCompatibilityEx_USCORETask(const char *endpoint, const char *soap_action, gnvim2__QueryVMotionCompatibilityExRequestType *gnvim2__QueryVMotionCompatibilityEx_USCORETask, _gnvim2__QueryVMotionCompatibilityEx_USCORETaskResponse &gnvim2__QueryVMotionCompatibilityEx_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__QueryVMotionCompatibilityEx_USCORETask soap_tmp___gnvim2__QueryVMotionCompatibilityEx_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__QueryVMotionCompatibilityEx_USCORETask.gnvim2__QueryVMotionCompatibilityEx_USCORETask = gnvim2__QueryVMotionCompatibilityEx_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__QueryVMotionCompatibilityEx_USCORETask(soap, &soap_tmp___gnvim2__QueryVMotionCompatibilityEx_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__QueryVMotionCompatibilityEx_USCORETask(soap, &soap_tmp___gnvim2__QueryVMotionCompatibilityEx_USCORETask, "-gnvim2:QueryVMotionCompatibilityEx_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__QueryVMotionCompatibilityEx_USCORETask(soap, &soap_tmp___gnvim2__QueryVMotionCompatibilityEx_USCORETask, "-gnvim2:QueryVMotionCompatibilityEx_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__QueryVMotionCompatibilityEx_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__QueryVMotionCompatibilityEx_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__QueryVMotionCompatibilityEx_USCORETaskResponse.soap_get(soap, "gnvim2:QueryVMotionCompatibilityEx_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CheckMigrate_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CheckMigrateRequestType *gnvim2__CheckMigrate_USCORETask, _gnvim2__CheckMigrate_USCORETaskResponse &gnvim2__CheckMigrate_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CheckMigrate_USCORETask soap_tmp___gnvim2__CheckMigrate_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CheckMigrate_USCORETask.gnvim2__CheckMigrate_USCORETask = gnvim2__CheckMigrate_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CheckMigrate_USCORETask(soap, &soap_tmp___gnvim2__CheckMigrate_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CheckMigrate_USCORETask(soap, &soap_tmp___gnvim2__CheckMigrate_USCORETask, "-gnvim2:CheckMigrate_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CheckMigrate_USCORETask(soap, &soap_tmp___gnvim2__CheckMigrate_USCORETask, "-gnvim2:CheckMigrate_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CheckMigrate_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CheckMigrate_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CheckMigrate_USCORETaskResponse.soap_get(soap, "gnvim2:CheckMigrate_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CheckRelocate_USCORETask(const char *endpoint, const char *soap_action, gnvim2__CheckRelocateRequestType *gnvim2__CheckRelocate_USCORETask, _gnvim2__CheckRelocate_USCORETaskResponse &gnvim2__CheckRelocate_USCORETaskResponse)
{	struct soap *soap = this;
	struct __gnvim2__CheckRelocate_USCORETask soap_tmp___gnvim2__CheckRelocate_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CheckRelocate_USCORETask.gnvim2__CheckRelocate_USCORETask = gnvim2__CheckRelocate_USCORETask;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CheckRelocate_USCORETask(soap, &soap_tmp___gnvim2__CheckRelocate_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CheckRelocate_USCORETask(soap, &soap_tmp___gnvim2__CheckRelocate_USCORETask, "-gnvim2:CheckRelocate_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CheckRelocate_USCORETask(soap, &soap_tmp___gnvim2__CheckRelocate_USCORETask, "-gnvim2:CheckRelocate_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CheckRelocate_USCORETaskResponse)
		return soap_closesock(soap);
	gnvim2__CheckRelocate_USCORETaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CheckRelocate_USCORETaskResponse.soap_get(soap, "gnvim2:CheckRelocate_TaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddGuestAlias(const char *endpoint, const char *soap_action, gnvim2__AddGuestAliasRequestType *gnvim2__AddGuestAlias, _gnvim2__AddGuestAliasResponse &gnvim2__AddGuestAliasResponse)
{	struct soap *soap = this;
	struct __gnvim2__AddGuestAlias soap_tmp___gnvim2__AddGuestAlias;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AddGuestAlias.gnvim2__AddGuestAlias = gnvim2__AddGuestAlias;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AddGuestAlias(soap, &soap_tmp___gnvim2__AddGuestAlias);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AddGuestAlias(soap, &soap_tmp___gnvim2__AddGuestAlias, "-gnvim2:AddGuestAlias", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AddGuestAlias(soap, &soap_tmp___gnvim2__AddGuestAlias, "-gnvim2:AddGuestAlias", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AddGuestAliasResponse)
		return soap_closesock(soap);
	gnvim2__AddGuestAliasResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AddGuestAliasResponse.soap_get(soap, "gnvim2:AddGuestAliasResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveGuestAlias(const char *endpoint, const char *soap_action, gnvim2__RemoveGuestAliasRequestType *gnvim2__RemoveGuestAlias, _gnvim2__RemoveGuestAliasResponse &gnvim2__RemoveGuestAliasResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveGuestAlias soap_tmp___gnvim2__RemoveGuestAlias;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveGuestAlias.gnvim2__RemoveGuestAlias = gnvim2__RemoveGuestAlias;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveGuestAlias(soap, &soap_tmp___gnvim2__RemoveGuestAlias);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveGuestAlias(soap, &soap_tmp___gnvim2__RemoveGuestAlias, "-gnvim2:RemoveGuestAlias", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveGuestAlias(soap, &soap_tmp___gnvim2__RemoveGuestAlias, "-gnvim2:RemoveGuestAlias", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveGuestAliasResponse)
		return soap_closesock(soap);
	gnvim2__RemoveGuestAliasResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveGuestAliasResponse.soap_get(soap, "gnvim2:RemoveGuestAliasResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveGuestAliasByCert(const char *endpoint, const char *soap_action, gnvim2__RemoveGuestAliasByCertRequestType *gnvim2__RemoveGuestAliasByCert, _gnvim2__RemoveGuestAliasByCertResponse &gnvim2__RemoveGuestAliasByCertResponse)
{	struct soap *soap = this;
	struct __gnvim2__RemoveGuestAliasByCert soap_tmp___gnvim2__RemoveGuestAliasByCert;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__RemoveGuestAliasByCert.gnvim2__RemoveGuestAliasByCert = gnvim2__RemoveGuestAliasByCert;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__RemoveGuestAliasByCert(soap, &soap_tmp___gnvim2__RemoveGuestAliasByCert);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__RemoveGuestAliasByCert(soap, &soap_tmp___gnvim2__RemoveGuestAliasByCert, "-gnvim2:RemoveGuestAliasByCert", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__RemoveGuestAliasByCert(soap, &soap_tmp___gnvim2__RemoveGuestAliasByCert, "-gnvim2:RemoveGuestAliasByCert", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__RemoveGuestAliasByCertResponse)
		return soap_closesock(soap);
	gnvim2__RemoveGuestAliasByCertResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__RemoveGuestAliasByCertResponse.soap_get(soap, "gnvim2:RemoveGuestAliasByCertResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ListGuestAliases(const char *endpoint, const char *soap_action, gnvim2__ListGuestAliasesRequestType *gnvim2__ListGuestAliases, _gnvim2__ListGuestAliasesResponse &gnvim2__ListGuestAliasesResponse)
{	struct soap *soap = this;
	struct __gnvim2__ListGuestAliases soap_tmp___gnvim2__ListGuestAliases;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ListGuestAliases.gnvim2__ListGuestAliases = gnvim2__ListGuestAliases;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ListGuestAliases(soap, &soap_tmp___gnvim2__ListGuestAliases);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ListGuestAliases(soap, &soap_tmp___gnvim2__ListGuestAliases, "-gnvim2:ListGuestAliases", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ListGuestAliases(soap, &soap_tmp___gnvim2__ListGuestAliases, "-gnvim2:ListGuestAliases", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ListGuestAliasesResponse)
		return soap_closesock(soap);
	gnvim2__ListGuestAliasesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ListGuestAliasesResponse.soap_get(soap, "gnvim2:ListGuestAliasesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ListGuestMappedAliases(const char *endpoint, const char *soap_action, gnvim2__ListGuestMappedAliasesRequestType *gnvim2__ListGuestMappedAliases, _gnvim2__ListGuestMappedAliasesResponse &gnvim2__ListGuestMappedAliasesResponse)
{	struct soap *soap = this;
	struct __gnvim2__ListGuestMappedAliases soap_tmp___gnvim2__ListGuestMappedAliases;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ListGuestMappedAliases.gnvim2__ListGuestMappedAliases = gnvim2__ListGuestMappedAliases;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ListGuestMappedAliases(soap, &soap_tmp___gnvim2__ListGuestMappedAliases);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ListGuestMappedAliases(soap, &soap_tmp___gnvim2__ListGuestMappedAliases, "-gnvim2:ListGuestMappedAliases", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ListGuestMappedAliases(soap, &soap_tmp___gnvim2__ListGuestMappedAliases, "-gnvim2:ListGuestMappedAliases", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ListGuestMappedAliasesResponse)
		return soap_closesock(soap);
	gnvim2__ListGuestMappedAliasesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ListGuestMappedAliasesResponse.soap_get(soap, "gnvim2:ListGuestMappedAliasesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ValidateCredentialsInGuest(const char *endpoint, const char *soap_action, gnvim2__ValidateCredentialsInGuestRequestType *gnvim2__ValidateCredentialsInGuest, _gnvim2__ValidateCredentialsInGuestResponse &gnvim2__ValidateCredentialsInGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__ValidateCredentialsInGuest soap_tmp___gnvim2__ValidateCredentialsInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ValidateCredentialsInGuest.gnvim2__ValidateCredentialsInGuest = gnvim2__ValidateCredentialsInGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ValidateCredentialsInGuest(soap, &soap_tmp___gnvim2__ValidateCredentialsInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ValidateCredentialsInGuest(soap, &soap_tmp___gnvim2__ValidateCredentialsInGuest, "-gnvim2:ValidateCredentialsInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ValidateCredentialsInGuest(soap, &soap_tmp___gnvim2__ValidateCredentialsInGuest, "-gnvim2:ValidateCredentialsInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ValidateCredentialsInGuestResponse)
		return soap_closesock(soap);
	gnvim2__ValidateCredentialsInGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ValidateCredentialsInGuestResponse.soap_get(soap, "gnvim2:ValidateCredentialsInGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AcquireCredentialsInGuest(const char *endpoint, const char *soap_action, gnvim2__AcquireCredentialsInGuestRequestType *gnvim2__AcquireCredentialsInGuest, _gnvim2__AcquireCredentialsInGuestResponse &gnvim2__AcquireCredentialsInGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__AcquireCredentialsInGuest soap_tmp___gnvim2__AcquireCredentialsInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__AcquireCredentialsInGuest.gnvim2__AcquireCredentialsInGuest = gnvim2__AcquireCredentialsInGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__AcquireCredentialsInGuest(soap, &soap_tmp___gnvim2__AcquireCredentialsInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__AcquireCredentialsInGuest(soap, &soap_tmp___gnvim2__AcquireCredentialsInGuest, "-gnvim2:AcquireCredentialsInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__AcquireCredentialsInGuest(soap, &soap_tmp___gnvim2__AcquireCredentialsInGuest, "-gnvim2:AcquireCredentialsInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__AcquireCredentialsInGuestResponse)
		return soap_closesock(soap);
	gnvim2__AcquireCredentialsInGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__AcquireCredentialsInGuestResponse.soap_get(soap, "gnvim2:AcquireCredentialsInGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReleaseCredentialsInGuest(const char *endpoint, const char *soap_action, gnvim2__ReleaseCredentialsInGuestRequestType *gnvim2__ReleaseCredentialsInGuest, _gnvim2__ReleaseCredentialsInGuestResponse &gnvim2__ReleaseCredentialsInGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReleaseCredentialsInGuest soap_tmp___gnvim2__ReleaseCredentialsInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReleaseCredentialsInGuest.gnvim2__ReleaseCredentialsInGuest = gnvim2__ReleaseCredentialsInGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReleaseCredentialsInGuest(soap, &soap_tmp___gnvim2__ReleaseCredentialsInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReleaseCredentialsInGuest(soap, &soap_tmp___gnvim2__ReleaseCredentialsInGuest, "-gnvim2:ReleaseCredentialsInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReleaseCredentialsInGuest(soap, &soap_tmp___gnvim2__ReleaseCredentialsInGuest, "-gnvim2:ReleaseCredentialsInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReleaseCredentialsInGuestResponse)
		return soap_closesock(soap);
	gnvim2__ReleaseCredentialsInGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReleaseCredentialsInGuestResponse.soap_get(soap, "gnvim2:ReleaseCredentialsInGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MakeDirectoryInGuest(const char *endpoint, const char *soap_action, gnvim2__MakeDirectoryInGuestRequestType *gnvim2__MakeDirectoryInGuest, _gnvim2__MakeDirectoryInGuestResponse &gnvim2__MakeDirectoryInGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__MakeDirectoryInGuest soap_tmp___gnvim2__MakeDirectoryInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MakeDirectoryInGuest.gnvim2__MakeDirectoryInGuest = gnvim2__MakeDirectoryInGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MakeDirectoryInGuest(soap, &soap_tmp___gnvim2__MakeDirectoryInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MakeDirectoryInGuest(soap, &soap_tmp___gnvim2__MakeDirectoryInGuest, "-gnvim2:MakeDirectoryInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MakeDirectoryInGuest(soap, &soap_tmp___gnvim2__MakeDirectoryInGuest, "-gnvim2:MakeDirectoryInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MakeDirectoryInGuestResponse)
		return soap_closesock(soap);
	gnvim2__MakeDirectoryInGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MakeDirectoryInGuestResponse.soap_get(soap, "gnvim2:MakeDirectoryInGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeleteFileInGuest(const char *endpoint, const char *soap_action, gnvim2__DeleteFileInGuestRequestType *gnvim2__DeleteFileInGuest, _gnvim2__DeleteFileInGuestResponse &gnvim2__DeleteFileInGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__DeleteFileInGuest soap_tmp___gnvim2__DeleteFileInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DeleteFileInGuest.gnvim2__DeleteFileInGuest = gnvim2__DeleteFileInGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DeleteFileInGuest(soap, &soap_tmp___gnvim2__DeleteFileInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DeleteFileInGuest(soap, &soap_tmp___gnvim2__DeleteFileInGuest, "-gnvim2:DeleteFileInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DeleteFileInGuest(soap, &soap_tmp___gnvim2__DeleteFileInGuest, "-gnvim2:DeleteFileInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DeleteFileInGuestResponse)
		return soap_closesock(soap);
	gnvim2__DeleteFileInGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DeleteFileInGuestResponse.soap_get(soap, "gnvim2:DeleteFileInGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeleteDirectoryInGuest(const char *endpoint, const char *soap_action, gnvim2__DeleteDirectoryInGuestRequestType *gnvim2__DeleteDirectoryInGuest, _gnvim2__DeleteDirectoryInGuestResponse &gnvim2__DeleteDirectoryInGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__DeleteDirectoryInGuest soap_tmp___gnvim2__DeleteDirectoryInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DeleteDirectoryInGuest.gnvim2__DeleteDirectoryInGuest = gnvim2__DeleteDirectoryInGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DeleteDirectoryInGuest(soap, &soap_tmp___gnvim2__DeleteDirectoryInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DeleteDirectoryInGuest(soap, &soap_tmp___gnvim2__DeleteDirectoryInGuest, "-gnvim2:DeleteDirectoryInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DeleteDirectoryInGuest(soap, &soap_tmp___gnvim2__DeleteDirectoryInGuest, "-gnvim2:DeleteDirectoryInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DeleteDirectoryInGuestResponse)
		return soap_closesock(soap);
	gnvim2__DeleteDirectoryInGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DeleteDirectoryInGuestResponse.soap_get(soap, "gnvim2:DeleteDirectoryInGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MoveDirectoryInGuest(const char *endpoint, const char *soap_action, gnvim2__MoveDirectoryInGuestRequestType *gnvim2__MoveDirectoryInGuest, _gnvim2__MoveDirectoryInGuestResponse &gnvim2__MoveDirectoryInGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__MoveDirectoryInGuest soap_tmp___gnvim2__MoveDirectoryInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MoveDirectoryInGuest.gnvim2__MoveDirectoryInGuest = gnvim2__MoveDirectoryInGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MoveDirectoryInGuest(soap, &soap_tmp___gnvim2__MoveDirectoryInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MoveDirectoryInGuest(soap, &soap_tmp___gnvim2__MoveDirectoryInGuest, "-gnvim2:MoveDirectoryInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MoveDirectoryInGuest(soap, &soap_tmp___gnvim2__MoveDirectoryInGuest, "-gnvim2:MoveDirectoryInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MoveDirectoryInGuestResponse)
		return soap_closesock(soap);
	gnvim2__MoveDirectoryInGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MoveDirectoryInGuestResponse.soap_get(soap, "gnvim2:MoveDirectoryInGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MoveFileInGuest(const char *endpoint, const char *soap_action, gnvim2__MoveFileInGuestRequestType *gnvim2__MoveFileInGuest, _gnvim2__MoveFileInGuestResponse &gnvim2__MoveFileInGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__MoveFileInGuest soap_tmp___gnvim2__MoveFileInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__MoveFileInGuest.gnvim2__MoveFileInGuest = gnvim2__MoveFileInGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__MoveFileInGuest(soap, &soap_tmp___gnvim2__MoveFileInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__MoveFileInGuest(soap, &soap_tmp___gnvim2__MoveFileInGuest, "-gnvim2:MoveFileInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__MoveFileInGuest(soap, &soap_tmp___gnvim2__MoveFileInGuest, "-gnvim2:MoveFileInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__MoveFileInGuestResponse)
		return soap_closesock(soap);
	gnvim2__MoveFileInGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__MoveFileInGuestResponse.soap_get(soap, "gnvim2:MoveFileInGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateTemporaryFileInGuest(const char *endpoint, const char *soap_action, gnvim2__CreateTemporaryFileInGuestRequestType *gnvim2__CreateTemporaryFileInGuest, _gnvim2__CreateTemporaryFileInGuestResponse &gnvim2__CreateTemporaryFileInGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateTemporaryFileInGuest soap_tmp___gnvim2__CreateTemporaryFileInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateTemporaryFileInGuest.gnvim2__CreateTemporaryFileInGuest = gnvim2__CreateTemporaryFileInGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateTemporaryFileInGuest(soap, &soap_tmp___gnvim2__CreateTemporaryFileInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateTemporaryFileInGuest(soap, &soap_tmp___gnvim2__CreateTemporaryFileInGuest, "-gnvim2:CreateTemporaryFileInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateTemporaryFileInGuest(soap, &soap_tmp___gnvim2__CreateTemporaryFileInGuest, "-gnvim2:CreateTemporaryFileInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateTemporaryFileInGuestResponse)
		return soap_closesock(soap);
	gnvim2__CreateTemporaryFileInGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateTemporaryFileInGuestResponse.soap_get(soap, "gnvim2:CreateTemporaryFileInGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateTemporaryDirectoryInGuest(const char *endpoint, const char *soap_action, gnvim2__CreateTemporaryDirectoryInGuestRequestType *gnvim2__CreateTemporaryDirectoryInGuest, _gnvim2__CreateTemporaryDirectoryInGuestResponse &gnvim2__CreateTemporaryDirectoryInGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateTemporaryDirectoryInGuest soap_tmp___gnvim2__CreateTemporaryDirectoryInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateTemporaryDirectoryInGuest.gnvim2__CreateTemporaryDirectoryInGuest = gnvim2__CreateTemporaryDirectoryInGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateTemporaryDirectoryInGuest(soap, &soap_tmp___gnvim2__CreateTemporaryDirectoryInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateTemporaryDirectoryInGuest(soap, &soap_tmp___gnvim2__CreateTemporaryDirectoryInGuest, "-gnvim2:CreateTemporaryDirectoryInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateTemporaryDirectoryInGuest(soap, &soap_tmp___gnvim2__CreateTemporaryDirectoryInGuest, "-gnvim2:CreateTemporaryDirectoryInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateTemporaryDirectoryInGuestResponse)
		return soap_closesock(soap);
	gnvim2__CreateTemporaryDirectoryInGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateTemporaryDirectoryInGuestResponse.soap_get(soap, "gnvim2:CreateTemporaryDirectoryInGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ListFilesInGuest(const char *endpoint, const char *soap_action, gnvim2__ListFilesInGuestRequestType *gnvim2__ListFilesInGuest, _gnvim2__ListFilesInGuestResponse &gnvim2__ListFilesInGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__ListFilesInGuest soap_tmp___gnvim2__ListFilesInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ListFilesInGuest.gnvim2__ListFilesInGuest = gnvim2__ListFilesInGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ListFilesInGuest(soap, &soap_tmp___gnvim2__ListFilesInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ListFilesInGuest(soap, &soap_tmp___gnvim2__ListFilesInGuest, "-gnvim2:ListFilesInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ListFilesInGuest(soap, &soap_tmp___gnvim2__ListFilesInGuest, "-gnvim2:ListFilesInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ListFilesInGuestResponse)
		return soap_closesock(soap);
	gnvim2__ListFilesInGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ListFilesInGuestResponse.soap_get(soap, "gnvim2:ListFilesInGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ChangeFileAttributesInGuest(const char *endpoint, const char *soap_action, gnvim2__ChangeFileAttributesInGuestRequestType *gnvim2__ChangeFileAttributesInGuest, _gnvim2__ChangeFileAttributesInGuestResponse &gnvim2__ChangeFileAttributesInGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__ChangeFileAttributesInGuest soap_tmp___gnvim2__ChangeFileAttributesInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ChangeFileAttributesInGuest.gnvim2__ChangeFileAttributesInGuest = gnvim2__ChangeFileAttributesInGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ChangeFileAttributesInGuest(soap, &soap_tmp___gnvim2__ChangeFileAttributesInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ChangeFileAttributesInGuest(soap, &soap_tmp___gnvim2__ChangeFileAttributesInGuest, "-gnvim2:ChangeFileAttributesInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ChangeFileAttributesInGuest(soap, &soap_tmp___gnvim2__ChangeFileAttributesInGuest, "-gnvim2:ChangeFileAttributesInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ChangeFileAttributesInGuestResponse)
		return soap_closesock(soap);
	gnvim2__ChangeFileAttributesInGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ChangeFileAttributesInGuestResponse.soap_get(soap, "gnvim2:ChangeFileAttributesInGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::InitiateFileTransferFromGuest(const char *endpoint, const char *soap_action, gnvim2__InitiateFileTransferFromGuestRequestType *gnvim2__InitiateFileTransferFromGuest, _gnvim2__InitiateFileTransferFromGuestResponse &gnvim2__InitiateFileTransferFromGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__InitiateFileTransferFromGuest soap_tmp___gnvim2__InitiateFileTransferFromGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__InitiateFileTransferFromGuest.gnvim2__InitiateFileTransferFromGuest = gnvim2__InitiateFileTransferFromGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__InitiateFileTransferFromGuest(soap, &soap_tmp___gnvim2__InitiateFileTransferFromGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__InitiateFileTransferFromGuest(soap, &soap_tmp___gnvim2__InitiateFileTransferFromGuest, "-gnvim2:InitiateFileTransferFromGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__InitiateFileTransferFromGuest(soap, &soap_tmp___gnvim2__InitiateFileTransferFromGuest, "-gnvim2:InitiateFileTransferFromGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__InitiateFileTransferFromGuestResponse)
		return soap_closesock(soap);
	gnvim2__InitiateFileTransferFromGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__InitiateFileTransferFromGuestResponse.soap_get(soap, "gnvim2:InitiateFileTransferFromGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::InitiateFileTransferToGuest(const char *endpoint, const char *soap_action, gnvim2__InitiateFileTransferToGuestRequestType *gnvim2__InitiateFileTransferToGuest, _gnvim2__InitiateFileTransferToGuestResponse &gnvim2__InitiateFileTransferToGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__InitiateFileTransferToGuest soap_tmp___gnvim2__InitiateFileTransferToGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__InitiateFileTransferToGuest.gnvim2__InitiateFileTransferToGuest = gnvim2__InitiateFileTransferToGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__InitiateFileTransferToGuest(soap, &soap_tmp___gnvim2__InitiateFileTransferToGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__InitiateFileTransferToGuest(soap, &soap_tmp___gnvim2__InitiateFileTransferToGuest, "-gnvim2:InitiateFileTransferToGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__InitiateFileTransferToGuest(soap, &soap_tmp___gnvim2__InitiateFileTransferToGuest, "-gnvim2:InitiateFileTransferToGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__InitiateFileTransferToGuestResponse)
		return soap_closesock(soap);
	gnvim2__InitiateFileTransferToGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__InitiateFileTransferToGuestResponse.soap_get(soap, "gnvim2:InitiateFileTransferToGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::StartProgramInGuest(const char *endpoint, const char *soap_action, gnvim2__StartProgramInGuestRequestType *gnvim2__StartProgramInGuest, _gnvim2__StartProgramInGuestResponse &gnvim2__StartProgramInGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__StartProgramInGuest soap_tmp___gnvim2__StartProgramInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__StartProgramInGuest.gnvim2__StartProgramInGuest = gnvim2__StartProgramInGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__StartProgramInGuest(soap, &soap_tmp___gnvim2__StartProgramInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__StartProgramInGuest(soap, &soap_tmp___gnvim2__StartProgramInGuest, "-gnvim2:StartProgramInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__StartProgramInGuest(soap, &soap_tmp___gnvim2__StartProgramInGuest, "-gnvim2:StartProgramInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__StartProgramInGuestResponse)
		return soap_closesock(soap);
	gnvim2__StartProgramInGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__StartProgramInGuestResponse.soap_get(soap, "gnvim2:StartProgramInGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ListProcessesInGuest(const char *endpoint, const char *soap_action, gnvim2__ListProcessesInGuestRequestType *gnvim2__ListProcessesInGuest, _gnvim2__ListProcessesInGuestResponse &gnvim2__ListProcessesInGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__ListProcessesInGuest soap_tmp___gnvim2__ListProcessesInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ListProcessesInGuest.gnvim2__ListProcessesInGuest = gnvim2__ListProcessesInGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ListProcessesInGuest(soap, &soap_tmp___gnvim2__ListProcessesInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ListProcessesInGuest(soap, &soap_tmp___gnvim2__ListProcessesInGuest, "-gnvim2:ListProcessesInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ListProcessesInGuest(soap, &soap_tmp___gnvim2__ListProcessesInGuest, "-gnvim2:ListProcessesInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ListProcessesInGuestResponse)
		return soap_closesock(soap);
	gnvim2__ListProcessesInGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ListProcessesInGuestResponse.soap_get(soap, "gnvim2:ListProcessesInGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::TerminateProcessInGuest(const char *endpoint, const char *soap_action, gnvim2__TerminateProcessInGuestRequestType *gnvim2__TerminateProcessInGuest, _gnvim2__TerminateProcessInGuestResponse &gnvim2__TerminateProcessInGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__TerminateProcessInGuest soap_tmp___gnvim2__TerminateProcessInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__TerminateProcessInGuest.gnvim2__TerminateProcessInGuest = gnvim2__TerminateProcessInGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__TerminateProcessInGuest(soap, &soap_tmp___gnvim2__TerminateProcessInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__TerminateProcessInGuest(soap, &soap_tmp___gnvim2__TerminateProcessInGuest, "-gnvim2:TerminateProcessInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__TerminateProcessInGuest(soap, &soap_tmp___gnvim2__TerminateProcessInGuest, "-gnvim2:TerminateProcessInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__TerminateProcessInGuestResponse)
		return soap_closesock(soap);
	gnvim2__TerminateProcessInGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__TerminateProcessInGuestResponse.soap_get(soap, "gnvim2:TerminateProcessInGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReadEnvironmentVariableInGuest(const char *endpoint, const char *soap_action, gnvim2__ReadEnvironmentVariableInGuestRequestType *gnvim2__ReadEnvironmentVariableInGuest, _gnvim2__ReadEnvironmentVariableInGuestResponse &gnvim2__ReadEnvironmentVariableInGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__ReadEnvironmentVariableInGuest soap_tmp___gnvim2__ReadEnvironmentVariableInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ReadEnvironmentVariableInGuest.gnvim2__ReadEnvironmentVariableInGuest = gnvim2__ReadEnvironmentVariableInGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ReadEnvironmentVariableInGuest(soap, &soap_tmp___gnvim2__ReadEnvironmentVariableInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ReadEnvironmentVariableInGuest(soap, &soap_tmp___gnvim2__ReadEnvironmentVariableInGuest, "-gnvim2:ReadEnvironmentVariableInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ReadEnvironmentVariableInGuest(soap, &soap_tmp___gnvim2__ReadEnvironmentVariableInGuest, "-gnvim2:ReadEnvironmentVariableInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ReadEnvironmentVariableInGuestResponse)
		return soap_closesock(soap);
	gnvim2__ReadEnvironmentVariableInGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ReadEnvironmentVariableInGuestResponse.soap_get(soap, "gnvim2:ReadEnvironmentVariableInGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateRegistryKeyInGuest(const char *endpoint, const char *soap_action, gnvim2__CreateRegistryKeyInGuestRequestType *gnvim2__CreateRegistryKeyInGuest, _gnvim2__CreateRegistryKeyInGuestResponse &gnvim2__CreateRegistryKeyInGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__CreateRegistryKeyInGuest soap_tmp___gnvim2__CreateRegistryKeyInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__CreateRegistryKeyInGuest.gnvim2__CreateRegistryKeyInGuest = gnvim2__CreateRegistryKeyInGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__CreateRegistryKeyInGuest(soap, &soap_tmp___gnvim2__CreateRegistryKeyInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__CreateRegistryKeyInGuest(soap, &soap_tmp___gnvim2__CreateRegistryKeyInGuest, "-gnvim2:CreateRegistryKeyInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__CreateRegistryKeyInGuest(soap, &soap_tmp___gnvim2__CreateRegistryKeyInGuest, "-gnvim2:CreateRegistryKeyInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__CreateRegistryKeyInGuestResponse)
		return soap_closesock(soap);
	gnvim2__CreateRegistryKeyInGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__CreateRegistryKeyInGuestResponse.soap_get(soap, "gnvim2:CreateRegistryKeyInGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ListRegistryKeysInGuest(const char *endpoint, const char *soap_action, gnvim2__ListRegistryKeysInGuestRequestType *gnvim2__ListRegistryKeysInGuest, _gnvim2__ListRegistryKeysInGuestResponse &gnvim2__ListRegistryKeysInGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__ListRegistryKeysInGuest soap_tmp___gnvim2__ListRegistryKeysInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ListRegistryKeysInGuest.gnvim2__ListRegistryKeysInGuest = gnvim2__ListRegistryKeysInGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ListRegistryKeysInGuest(soap, &soap_tmp___gnvim2__ListRegistryKeysInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ListRegistryKeysInGuest(soap, &soap_tmp___gnvim2__ListRegistryKeysInGuest, "-gnvim2:ListRegistryKeysInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ListRegistryKeysInGuest(soap, &soap_tmp___gnvim2__ListRegistryKeysInGuest, "-gnvim2:ListRegistryKeysInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ListRegistryKeysInGuestResponse)
		return soap_closesock(soap);
	gnvim2__ListRegistryKeysInGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ListRegistryKeysInGuestResponse.soap_get(soap, "gnvim2:ListRegistryKeysInGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeleteRegistryKeyInGuest(const char *endpoint, const char *soap_action, gnvim2__DeleteRegistryKeyInGuestRequestType *gnvim2__DeleteRegistryKeyInGuest, _gnvim2__DeleteRegistryKeyInGuestResponse &gnvim2__DeleteRegistryKeyInGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__DeleteRegistryKeyInGuest soap_tmp___gnvim2__DeleteRegistryKeyInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DeleteRegistryKeyInGuest.gnvim2__DeleteRegistryKeyInGuest = gnvim2__DeleteRegistryKeyInGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DeleteRegistryKeyInGuest(soap, &soap_tmp___gnvim2__DeleteRegistryKeyInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DeleteRegistryKeyInGuest(soap, &soap_tmp___gnvim2__DeleteRegistryKeyInGuest, "-gnvim2:DeleteRegistryKeyInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DeleteRegistryKeyInGuest(soap, &soap_tmp___gnvim2__DeleteRegistryKeyInGuest, "-gnvim2:DeleteRegistryKeyInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DeleteRegistryKeyInGuestResponse)
		return soap_closesock(soap);
	gnvim2__DeleteRegistryKeyInGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DeleteRegistryKeyInGuestResponse.soap_get(soap, "gnvim2:DeleteRegistryKeyInGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetRegistryValueInGuest(const char *endpoint, const char *soap_action, gnvim2__SetRegistryValueInGuestRequestType *gnvim2__SetRegistryValueInGuest, _gnvim2__SetRegistryValueInGuestResponse &gnvim2__SetRegistryValueInGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__SetRegistryValueInGuest soap_tmp___gnvim2__SetRegistryValueInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__SetRegistryValueInGuest.gnvim2__SetRegistryValueInGuest = gnvim2__SetRegistryValueInGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__SetRegistryValueInGuest(soap, &soap_tmp___gnvim2__SetRegistryValueInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__SetRegistryValueInGuest(soap, &soap_tmp___gnvim2__SetRegistryValueInGuest, "-gnvim2:SetRegistryValueInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__SetRegistryValueInGuest(soap, &soap_tmp___gnvim2__SetRegistryValueInGuest, "-gnvim2:SetRegistryValueInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__SetRegistryValueInGuestResponse)
		return soap_closesock(soap);
	gnvim2__SetRegistryValueInGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__SetRegistryValueInGuestResponse.soap_get(soap, "gnvim2:SetRegistryValueInGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ListRegistryValuesInGuest(const char *endpoint, const char *soap_action, gnvim2__ListRegistryValuesInGuestRequestType *gnvim2__ListRegistryValuesInGuest, _gnvim2__ListRegistryValuesInGuestResponse &gnvim2__ListRegistryValuesInGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__ListRegistryValuesInGuest soap_tmp___gnvim2__ListRegistryValuesInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__ListRegistryValuesInGuest.gnvim2__ListRegistryValuesInGuest = gnvim2__ListRegistryValuesInGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__ListRegistryValuesInGuest(soap, &soap_tmp___gnvim2__ListRegistryValuesInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__ListRegistryValuesInGuest(soap, &soap_tmp___gnvim2__ListRegistryValuesInGuest, "-gnvim2:ListRegistryValuesInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__ListRegistryValuesInGuest(soap, &soap_tmp___gnvim2__ListRegistryValuesInGuest, "-gnvim2:ListRegistryValuesInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__ListRegistryValuesInGuestResponse)
		return soap_closesock(soap);
	gnvim2__ListRegistryValuesInGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__ListRegistryValuesInGuestResponse.soap_get(soap, "gnvim2:ListRegistryValuesInGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeleteRegistryValueInGuest(const char *endpoint, const char *soap_action, gnvim2__DeleteRegistryValueInGuestRequestType *gnvim2__DeleteRegistryValueInGuest, _gnvim2__DeleteRegistryValueInGuestResponse &gnvim2__DeleteRegistryValueInGuestResponse)
{	struct soap *soap = this;
	struct __gnvim2__DeleteRegistryValueInGuest soap_tmp___gnvim2__DeleteRegistryValueInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "urn:vim25/6.0";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___gnvim2__DeleteRegistryValueInGuest.gnvim2__DeleteRegistryValueInGuest = gnvim2__DeleteRegistryValueInGuest;
	soap_serializeheader(soap);
	soap_serialize___gnvim2__DeleteRegistryValueInGuest(soap, &soap_tmp___gnvim2__DeleteRegistryValueInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___gnvim2__DeleteRegistryValueInGuest(soap, &soap_tmp___gnvim2__DeleteRegistryValueInGuest, "-gnvim2:DeleteRegistryValueInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___gnvim2__DeleteRegistryValueInGuest(soap, &soap_tmp___gnvim2__DeleteRegistryValueInGuest, "-gnvim2:DeleteRegistryValueInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&gnvim2__DeleteRegistryValueInGuestResponse)
		return soap_closesock(soap);
	gnvim2__DeleteRegistryValueInGuestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	gnvim2__DeleteRegistryValueInGuestResponse.soap_get(soap, "gnvim2:DeleteRegistryValueInGuestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
