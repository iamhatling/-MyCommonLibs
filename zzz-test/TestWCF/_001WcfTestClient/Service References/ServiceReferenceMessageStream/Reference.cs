//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _001WcfTestClient.ServiceReferenceMessageStream {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceMessageStream.IServiceMessgeStream")]
    public interface IServiceMessgeStream {
        
        // CODEGEN: Generating message contract since the operation Upload is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMessgeStream/Upload", ReplyAction="http://tempuri.org/IServiceMessgeStream/UploadResponse")]
        _001WcfTestClient.ServiceReferenceMessageStream.UploadResponse Upload(_001WcfTestClient.ServiceReferenceMessageStream.UploadFileInfo request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMessgeStream/Upload", ReplyAction="http://tempuri.org/IServiceMessgeStream/UploadResponse")]
        System.Threading.Tasks.Task<_001WcfTestClient.ServiceReferenceMessageStream.UploadResponse> UploadAsync(_001WcfTestClient.ServiceReferenceMessageStream.UploadFileInfo request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMessgeStream/Download", ReplyAction="http://tempuri.org/IServiceMessgeStream/DownloadResponse")]
        System.IO.Stream Download(string serverFileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMessgeStream/Download", ReplyAction="http://tempuri.org/IServiceMessgeStream/DownloadResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> DownloadAsync(string serverFileName);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadFileInfo {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string ServerFileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream ClientStream;
        
        public UploadFileInfo() {
        }
        
        public UploadFileInfo(string ServerFileName, System.IO.Stream ClientStream) {
            this.ServerFileName = ServerFileName;
            this.ClientStream = ClientStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadResponse {
        
        public UploadResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceMessgeStreamChannel : _001WcfTestClient.ServiceReferenceMessageStream.IServiceMessgeStream, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceMessgeStreamClient : System.ServiceModel.ClientBase<_001WcfTestClient.ServiceReferenceMessageStream.IServiceMessgeStream>, _001WcfTestClient.ServiceReferenceMessageStream.IServiceMessgeStream {
        
        public ServiceMessgeStreamClient() {
        }
        
        public ServiceMessgeStreamClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceMessgeStreamClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceMessgeStreamClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceMessgeStreamClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        _001WcfTestClient.ServiceReferenceMessageStream.UploadResponse _001WcfTestClient.ServiceReferenceMessageStream.IServiceMessgeStream.Upload(_001WcfTestClient.ServiceReferenceMessageStream.UploadFileInfo request) {
            return base.Channel.Upload(request);
        }
        
        public void Upload(string ServerFileName, System.IO.Stream ClientStream) {
            _001WcfTestClient.ServiceReferenceMessageStream.UploadFileInfo inValue = new _001WcfTestClient.ServiceReferenceMessageStream.UploadFileInfo();
            inValue.ServerFileName = ServerFileName;
            inValue.ClientStream = ClientStream;
            _001WcfTestClient.ServiceReferenceMessageStream.UploadResponse retVal = ((_001WcfTestClient.ServiceReferenceMessageStream.IServiceMessgeStream)(this)).Upload(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<_001WcfTestClient.ServiceReferenceMessageStream.UploadResponse> _001WcfTestClient.ServiceReferenceMessageStream.IServiceMessgeStream.UploadAsync(_001WcfTestClient.ServiceReferenceMessageStream.UploadFileInfo request) {
            return base.Channel.UploadAsync(request);
        }
        
        public System.Threading.Tasks.Task<_001WcfTestClient.ServiceReferenceMessageStream.UploadResponse> UploadAsync(string ServerFileName, System.IO.Stream ClientStream) {
            _001WcfTestClient.ServiceReferenceMessageStream.UploadFileInfo inValue = new _001WcfTestClient.ServiceReferenceMessageStream.UploadFileInfo();
            inValue.ServerFileName = ServerFileName;
            inValue.ClientStream = ClientStream;
            return ((_001WcfTestClient.ServiceReferenceMessageStream.IServiceMessgeStream)(this)).UploadAsync(inValue);
        }
        
        public System.IO.Stream Download(string serverFileName) {
            return base.Channel.Download(serverFileName);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> DownloadAsync(string serverFileName) {
            return base.Channel.DownloadAsync(serverFileName);
        }
    }
}
