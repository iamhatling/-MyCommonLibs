//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _001WcfClient.WcfStreamedServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DownloadFileInfo", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    public partial class DownloadFileInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfStreamedServiceReference.IStreamService")]
    public interface IStreamService {
        
        // CODEGEN: Generating message contract since the operation Upload is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStreamService/Upload", ReplyAction="http://tempuri.org/IStreamService/UploadResponse")]
        _001WcfClient.WcfStreamedServiceReference.UploadResponse Upload(_001WcfClient.WcfStreamedServiceReference.UploadStreamInfo request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStreamService/Upload", ReplyAction="http://tempuri.org/IStreamService/UploadResponse")]
        System.Threading.Tasks.Task<_001WcfClient.WcfStreamedServiceReference.UploadResponse> UploadAsync(_001WcfClient.WcfStreamedServiceReference.UploadStreamInfo request);
        
        // CODEGEN: Generating message contract since the operation Download is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStreamService/Download", ReplyAction="http://tempuri.org/IStreamService/DownloadResponse")]
        _001WcfClient.WcfStreamedServiceReference.DownloadSteamInfo Download(_001WcfClient.WcfStreamedServiceReference.DownloadFileInfo1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStreamService/Download", ReplyAction="http://tempuri.org/IStreamService/DownloadResponse")]
        System.Threading.Tasks.Task<_001WcfClient.WcfStreamedServiceReference.DownloadSteamInfo> DownloadAsync(_001WcfClient.WcfStreamedServiceReference.DownloadFileInfo1 request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadStreamInfo {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string ServerFileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream ClientStream;
        
        public UploadStreamInfo() {
        }
        
        public UploadStreamInfo(string ServerFileName, System.IO.Stream ClientStream) {
            this.ServerFileName = ServerFileName;
            this.ClientStream = ClientStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadResponse {
        
        public UploadResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DownloadFileInfo1 {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string ServerFileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public _001WcfClient.WcfStreamedServiceReference.DownloadFileInfo DownloadFileInfo;
        
        public DownloadFileInfo1() {
        }
        
        public DownloadFileInfo1(string ServerFileName, _001WcfClient.WcfStreamedServiceReference.DownloadFileInfo DownloadFileInfo) {
            this.ServerFileName = ServerFileName;
            this.DownloadFileInfo = DownloadFileInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DownloadSteamInfo {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream ServerStream;
        
        public DownloadSteamInfo() {
        }
        
        public DownloadSteamInfo(System.IO.Stream ServerStream) {
            this.ServerStream = ServerStream;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStreamServiceChannel : _001WcfClient.WcfStreamedServiceReference.IStreamService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StreamServiceClient : System.ServiceModel.ClientBase<_001WcfClient.WcfStreamedServiceReference.IStreamService>, _001WcfClient.WcfStreamedServiceReference.IStreamService {
        
        public StreamServiceClient() {
        }
        
        public StreamServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StreamServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StreamServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StreamServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        _001WcfClient.WcfStreamedServiceReference.UploadResponse _001WcfClient.WcfStreamedServiceReference.IStreamService.Upload(_001WcfClient.WcfStreamedServiceReference.UploadStreamInfo request) {
            return base.Channel.Upload(request);
        }
        
        public void Upload(string ServerFileName, System.IO.Stream ClientStream) {
            _001WcfClient.WcfStreamedServiceReference.UploadStreamInfo inValue = new _001WcfClient.WcfStreamedServiceReference.UploadStreamInfo();
            inValue.ServerFileName = ServerFileName;
            inValue.ClientStream = ClientStream;
            _001WcfClient.WcfStreamedServiceReference.UploadResponse retVal = ((_001WcfClient.WcfStreamedServiceReference.IStreamService)(this)).Upload(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<_001WcfClient.WcfStreamedServiceReference.UploadResponse> _001WcfClient.WcfStreamedServiceReference.IStreamService.UploadAsync(_001WcfClient.WcfStreamedServiceReference.UploadStreamInfo request) {
            return base.Channel.UploadAsync(request);
        }
        
        public System.Threading.Tasks.Task<_001WcfClient.WcfStreamedServiceReference.UploadResponse> UploadAsync(string ServerFileName, System.IO.Stream ClientStream) {
            _001WcfClient.WcfStreamedServiceReference.UploadStreamInfo inValue = new _001WcfClient.WcfStreamedServiceReference.UploadStreamInfo();
            inValue.ServerFileName = ServerFileName;
            inValue.ClientStream = ClientStream;
            return ((_001WcfClient.WcfStreamedServiceReference.IStreamService)(this)).UploadAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        _001WcfClient.WcfStreamedServiceReference.DownloadSteamInfo _001WcfClient.WcfStreamedServiceReference.IStreamService.Download(_001WcfClient.WcfStreamedServiceReference.DownloadFileInfo1 request) {
            return base.Channel.Download(request);
        }
        
        public System.IO.Stream Download(string ServerFileName, _001WcfClient.WcfStreamedServiceReference.DownloadFileInfo DownloadFileInfo) {
            _001WcfClient.WcfStreamedServiceReference.DownloadFileInfo1 inValue = new _001WcfClient.WcfStreamedServiceReference.DownloadFileInfo1();
            inValue.ServerFileName = ServerFileName;
            inValue.DownloadFileInfo = DownloadFileInfo;
            _001WcfClient.WcfStreamedServiceReference.DownloadSteamInfo retVal = ((_001WcfClient.WcfStreamedServiceReference.IStreamService)(this)).Download(inValue);
            return retVal.ServerStream;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<_001WcfClient.WcfStreamedServiceReference.DownloadSteamInfo> _001WcfClient.WcfStreamedServiceReference.IStreamService.DownloadAsync(_001WcfClient.WcfStreamedServiceReference.DownloadFileInfo1 request) {
            return base.Channel.DownloadAsync(request);
        }
        
        public System.Threading.Tasks.Task<_001WcfClient.WcfStreamedServiceReference.DownloadSteamInfo> DownloadAsync(string ServerFileName, _001WcfClient.WcfStreamedServiceReference.DownloadFileInfo DownloadFileInfo) {
            _001WcfClient.WcfStreamedServiceReference.DownloadFileInfo1 inValue = new _001WcfClient.WcfStreamedServiceReference.DownloadFileInfo1();
            inValue.ServerFileName = ServerFileName;
            inValue.DownloadFileInfo = DownloadFileInfo;
            return ((_001WcfClient.WcfStreamedServiceReference.IStreamService)(this)).DownloadAsync(inValue);
        }
    }
}
